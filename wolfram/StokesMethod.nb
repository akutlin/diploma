(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    564959,      11300]
NotebookOptionsPosition[    559760,      11140]
NotebookOutlinePosition[    560120,      11156]
CellTagsIndexPosition[    560077,      11153]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S", "[", "\[Alpha]_", "]"}], ":=", 
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {"\[Alpha]", "1"}
      }], ")"}]}], ";", " ", 
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {
        RowBox[{"-", "\[ImaginaryI]"}], "0"}
      }], ")"}]}], ";", " ", 
   RowBox[{
    RowBox[{"W", "[", "a_", "]"}], ":=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", "a", "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "a"}], "]"}]}
      }], ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Stokes", ",", " ", 
    RowBox[{"Antistokes", " ", "and", " ", "phase", " ", "operatoes"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Q", "[", 
     RowBox[{"a_", ",", "b_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"z", ",", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", 
          FractionBox[
           SuperscriptBox["a", "2"], "4"], "-", 
          FractionBox[
           RowBox[{"D", "[", 
            RowBox[{"a", ",", "x"}], "]"}], "2"]}], ")"}], "/.", 
        RowBox[{"x", "\[Rule]", "z"}]}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"From", " ", 
      RowBox[{"f", "''"}]}], "+", 
     RowBox[{"af", "'"}], "+", "bf"}], "\[Equal]", 
    RowBox[{
     RowBox[{"0", " ", "to", " ", 
      RowBox[{"y", "''"}]}], "+", "Qy"}], "\[Equal]", "0"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"U", "[", 
     RowBox[{"Q_", ",", "g_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"z", ",", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Q", "[", "g", "]"}], 
           SuperscriptBox[
            RowBox[{"D", "[", 
             RowBox[{"g", ",", "x"}], "]"}], "2"]}], "-", 
          RowBox[{
           FractionBox["3", "4"], 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"D", "[", 
               RowBox[{"g", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "2"}], "}"}]}], "]"}], 
              RowBox[{"D", "[", 
               RowBox[{"g", ",", "x"}], "]"}]], ")"}], "2"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            FractionBox[
             RowBox[{"D", "[", 
              RowBox[{"g", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "3"}], "}"}]}], "]"}], 
             RowBox[{"D", "[", 
              RowBox[{"g", ",", "x"}], "]"}]], ")"}]}]}], ")"}], "/.", 
        RowBox[{"x", "\[Rule]", "z"}]}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"From", " ", 
      RowBox[{"f", "''"}]}], "+", "Qf"}], "\[Equal]", 
    RowBox[{
     RowBox[{"0", " ", "to", " ", 
      RowBox[{"y", "''"}]}], "+", "Uy"}], "\[Equal]", 
    RowBox[{"0", " ", "with", " ", "variable", " ", "exchange"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"line", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"a", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "t"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.674476606646324*^9, 3.674476724517366*^9}, {
   3.674476763840727*^9, 3.674476913796777*^9}, 3.674479786775261*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StokesGraph", "[", 
    RowBox[{"Q_", ",", "l_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "zeros", ",", "zerosColor", ",", "poles", ",", "polesColor", ",", "z", 
       ",", "x", ",", "y", ",", "i", ",", "zerosPlot", ",", "polesPlot", ",", 
       "plotRange", ",", "streamPoints", ",", "stokes", ",", " ", 
       "antistokes"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"zerosColor", "=", "Blue"}], ";", "\[IndentingNewLine]", 
      RowBox[{"polesColor", "=", "Red"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"zeros", "=", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Q", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeros", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"z", "/.", 
          RowBox[{
          "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"zerosPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Re", "[", 
              RowBox[{
              "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{
              "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "zerosColor"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"poles", "=", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Q", "[", "z", "]"}], 
           RowBox[{"-", "1"}]], "\[Equal]", "0"}], ",", "z"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"poles", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"z", "/.", 
          RowBox[{
          "poles", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "poles", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"polesPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Re", "[", 
              RowBox[{
              "poles", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{
              "poles", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "poles", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "polesColor"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plotRange", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"Re", "[", "zeros", "]"}], "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{"Re", "[", "poles", "]"}], "]"}]}], "]"}], "-", "l"}], 
           ",", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"Re", "[", "zeros", "]"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{"Re", "[", "poles", "]"}], "]"}]}], "]"}], "+", 
            "l"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"Im", "[", "zeros", "]"}], "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{"Im", "[", "poles", "]"}], "]"}]}], "]"}], "-", "l"}], 
           ",", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"Im", "[", "zeros", "]"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{"Im", "[", "poles", "]"}], "]"}]}], "]"}], "+", 
            "l"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"streamPoints", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{
                "zeros", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{"Im", "[", 
                RowBox[{
                "zeros", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
             "zerosColor"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{
                "poles", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{"Im", "[", 
                RowBox[{
                "poles", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
             "polesColor"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "poles", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "Automatic", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stokes", "=", 
       RowBox[{"StreamPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], 
             RowBox[{"Arg", "[", 
              RowBox[{"Q", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], 
              RowBox[{"Arg", "[", 
               RowBox[{"Q", "[", 
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}]}], 
             "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         
         RowBox[{"StreamPoints", "\[Rule]", "streamPoints"}], ",", 
         RowBox[{"StreamScale", "\[Rule]", "None"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"antistokes", "=", 
       RowBox[{"StreamPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], 
             RowBox[{"Arg", "[", 
              RowBox[{"Q", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], 
             RowBox[{"Arg", "[", 
              RowBox[{"Q", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}]}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         
         RowBox[{"StreamPoints", "\[Rule]", "streamPoints"}], ",", 
         RowBox[{"StreamScale", "\[Rule]", "None"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{"stokes", ",", "zerosPlot", ",", "polesPlot", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
        RowBox[{"Show", "[", 
         RowBox[{"antistokes", ",", "zerosPlot", ",", "polesPlot", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6745386292643237`*^9, 3.674538630652726*^9}, {
  3.674545626557875*^9, 3.674545627010276*^9}, {3.6745469345776377`*^9, 
  3.674546940386848*^9}, {3.674901344779477*^9, 3.674901361671092*^9}, {
  3.674901406354232*^9, 3.6749014868958397`*^9}, {3.674902856708682*^9, 
  3.674902991513502*^9}, {3.674903038123839*^9, 3.674903099488549*^9}, {
  3.674903161239295*^9, 3.674903191041003*^9}, {3.674903228333252*^9, 
  3.6749032320838213`*^9}, {3.6749032687370863`*^9, 3.6749032870191936`*^9}, {
  3.6749455619723673`*^9, 3.6749455843048286`*^9}, {3.6749458653233128`*^9, 
  3.674945876749116*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sqrt", "[", 
    RowBox[{"f_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "start_", ",", "a_", ",", "b_", ",", "end_"}], 
      "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"roots", ",", "chunks", ",", "cuts", ",", "i", ",", "t"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roots", "=", 
       RowBox[{
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"f", "[", "t", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{"a", "<", "t", "<", "b"}]}], ",", "t"}], "]"}], "//", 
        "Quiet"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cuts", "=", 
       RowBox[{"{", "start", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "roots", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{"f", "[", 
              RowBox[{"t", "/.", 
               RowBox[{
               "roots", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "]"}], "]"}], "<", "0"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"cuts", ",", 
             RowBox[{"t", "/.", 
              RowBox[{
              "roots", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}]}], "]"}], ","}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cuts", ",", "end"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"chunks", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "2"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "cuts", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"chunks", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "2"}], "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox[
                RowBox[{"f", "[", "x", "]"}]], ",", 
               RowBox[{
                RowBox[{"cuts", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "-", "1"}], "\[RightDoubleBracket]"}], "<", "x",
                 "<", 
                RowBox[{
                "cuts", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 RowBox[{"f", "[", "x", "]"}]]}], ",", 
               RowBox[{
                RowBox[{"cuts", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "-", "1"}], "\[RightDoubleBracket]"}], "<", "x",
                 "<", 
                RowBox[{
                "cuts", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Piecewise", "[", "chunks", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.674714152816938*^9, 3.674714155868926*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "0"}], ";", 
  RowBox[{"\[Delta]", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Delta]", "2"], "+", "x", "+", 
        FractionBox["3", 
         RowBox[{"4", 
          SuperscriptBox["x", "2"]}]]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StokesGraph", "[", 
  RowBox[{"potential", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Beta]", ",", "\[Delta]", ",", "potential"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.674712709363482*^9, 3.6747127933870153`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzku3k41evfBioNJNEcEiUkCaVCxYeSpJKKDEmSNKdSKFIapFIqQ6QylhKS
qQF9zHPmOfM8W8tiLZbprNU57/7jca5rX/va5z2/8553/7Ov+7rX+n6f5x4+
z7Pa7ZXmVgdPcnJwcFTxcXCw/+0Z2rl36NK0pOKSgmPll8aRwMDdUXRUYAUd
/osnMHz7Er+W/flV0+O0+51G8fKF59vYPKz4FsLG7a8PyrJ5y53CXNzuIzhj
RfPkUhbvY7H1KRsP7l6mxOYbrqkuXxnMwOvvHUXZ3/+2+9pjNk45EqHO5jn8
LPW3xA7hFp9CGTa/OW66DRs/nie7kc37rVfnO5RBw43J1tps/sSMY8FsXHCE
rsDmU6I0uM9XUDEbazez+YAvBXZsfOKD4io2fydssQhPUT9e2lctwebNX9PL
2FiypECczU+bK6y9jdaNDbE5y9i8weFnmiosfCJRbTWb1+ze+fji4g7caqYz
g81PyCgaW7Gwpe6CPzz30ZCH/ootKGa2aRebZ3y69TSAhd8+T9Zi8xEBOw4X
GzWgwqC6CJsfNb6hWcLCVrXy0mzeTnj/Le7hSgwon/yjn3K/rdQcFvbUiv0/
11f54e75bUW49KH1Yfb3tea8mWfFwgrt+0XZ/HN7V8GAaak4JnpEh823f3nn
+46Fnyeoa7L5rLkCi/cceo1V1+1XsXle+5qC8yz8frhtF5sPPcn/xqfqK1x1
2MrL5l1epCV7sbCm2EMJNm/Ime4+wyIXoqNND7B5f0tOXTa+7Om8gs0Xql8/
9vZCGUjtddNl87M2cX18w8LnNPz+6L/Wsn3u1jW1sN/45J/9peKSucosbKe3
Yg2bdxlh+p270gTaXluV2d+XfebccpaFE9e+X8nmgyuSrinrtkGG0e7tbP7H
GotkJRbuMZsFbD5w3t5ILtku+LnkiiqbV1oY6TaLhXXmjfzhuUIHjcvm9EGY
I+PP+jwEmW2lLCz+8P/Ub+eBnudFgxR4xEz+k48Lo26qbBxxZkiOzbdtMQz7
1jwAjFdNs9j8SFmzDRsH/sz7s/+nfnud/YoHYWHqKzk2z79Vcisbn7iWKMXm
Zcx4Yp2T6bBP5JMim69OHFNl42C/uN1sPvyYRdaFyGH4ZRG6j82re4frsbHQ
xO/NbD5ja999PT8mhEY7cP/ZH+2yGRuP7IE/6/fe6eG/9ekY0HliJNn8Almr
tWxcmWT0zek6R5JMJG0au99Fnp3FbJzyIlyD3W90WX5EeMYkxt+X3s3mQ9yj
U9n4sZXoajaviM+ebFo8jrYPfsxh87s8F31k461fn8xj8247RZ/oSI6irPio
Gps/0utYxMbbJSN3sPn2ncrPTymO4DSxMwvYvP3A+XQ2XpU2TYjNL5vWefK2
FgM3LpXWZPN+kZ9b2Pi3s48hm+cQNr/nYzSEose1F7L5y7cEm9g4/4rSXjbv
EONwLOosDbN5SgXZvLVZaCUb955w0WHzuwtsn+faU9HE5YUem39214ojj4VV
C4a02TzPiJdAtmA/XjdUBDZPt0+oZONzToXT2fwFY52vzK3d2HzypwGbP344
NW6UhXfO0z7I5rX9jguvM23HdPlAYTY/5K9mw8ZZSkW6bH4vjtBMbzdj/e1A
EzZvvMQp+xgL07UK/7zfQuMMh9jOeszJrfzzfB2+1tOrWDhWsoStFzxZIBXm
/LACrZe4zGLzdhttuF1YuCcyQ57Nu/MspZf6FmB8aMx6Ni8ZYc5TzsJieer8
bD5x9Hezr3gShr9r++Nv6F0BFX8WxkDLmWz++n0XkaCwa/jINeiPPnavUxYP
snDNu5TFf/i7WjUf3BOh1h4X/+ETNyr4s3BC4XnOP+eH8eBxXvV8OBNmtYbN
N8kN8sxm4UPhWX/2nyosd39lTTl0SXPKsnkj3JQlysKD5W6r2LxQ2MeCxJd1
0FvXP+PP943WHkpgYW65hD/7rxvtlAlf0wxfzeX2sfmEmTIOYSxcK8bcxOaV
Va2/3OBqh8XeRfvZvI1XnBYb8yjv/+OPRWfBrN2tXfDUPdaYzX9SGxLWYmFd
u1Xb2Xz0nUyvJal9YJu3h71efJF8jouN174S/pNvKeuOY1d0qXBLRevP+dgX
EDyTjXVVR6XZfOFqJVcjoIH3plIJNt/ef2v2H2zj+ef73kuNb6nJDoHbwmFR
Nt+9S1acjTWYt/+s7+LmF1tehVGR4//6R15iB1P0UwlIn10+jde2AwiM/O/7
U+6vacXSUwGbDZO7cS6HwfPGFy3o1sX/xn1mN0oslDofMNqMr4wbH+/V7sIt
9iddGcnpWKOo47GmsACPVQT5oFcS/vBOvf3qbhZeFbqSem7mV6QUy3sWSybj
E9cNPDWcofgsY6P7KftoLOSeTF5Y4I2VD+orvgYH4g5PRd2x8DLsmLn44ROp
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
/JH5JPP0T/37n+7PP/UDtzv+OpfGuhfNi7fZKlSG996uLqiFQVAu1Rnr4S1D
jxVhB/fFD4JhztHPqhOlqBpy6UVVGhVA06vg1boytA3xoj4wpUKe4CnBzbJl
CBv7Lj5VpYLO9oSPZiw8eu/D7nwGqw9X16ZflCj7q99bx0867RguxU9eS35K
rx2A3A/rZYTXTuXJ95PrI9dPvo98/j9d/+SP09sFGpNxd6xv1IUrNMiQ7Vxm
ppeGc1q7NvJn04C69LCWf1YG3kzM8/AQHQR6S9j0K07fUKL2uYvchwEoG3kr
mJ8cil0zM2BtDRW+3byypV605a/7u/qzTX7qPc0YUdG6UGr5GMx6N2dRUmYT
+m2I++1zZRTUlm12FNqYhzLfszjj6wYhpfDwzTsFhfji3pLv1DdDcFS/ru7z
vRKMEI37qnSUDld8v5zwVC5Hp0chE27CDJiQ1jMr7anEnJD5d3fWMGDs8e41
fG9+o7bxsi0hr4fhws/nP7dr1+G0wLRVsUdHQOr4knnKNxqQ4jhXzUqUCR+6
PiknBjRiDAp4fsliTlkfuX5yf8VO2p8XZyTC1YPCSx1KemDbm5qGjOgU+JU0
en739m5wThY3jnF8jsdTHrtkK1Ahxc/Kbufn5zDxxTswyoUCvN4QKDU9FJw/
Vi37FdsPrfZ3UnyPx4KR/jzPHL0+OJuyol50ZTpMe2kw9GNmF4w8d+lVHcgA
k6VcleXfOsB0y/GZHJxZ0Hf7yf2HZu0wp4shCmuzIHPBxYs4rQ1ij17VFQ3J
BH+lzO2RAS0w/+DEx9SIDJA1/RrlvrMZxN6/enbgTDoIDLe4+vc0QqeSzum+
8VSYvEH3m+vVADivOnPYLgVsJjcv3HOnDsYVJncWtCXBTlWugpPVv2FxyXTH
xpc/4Y56GW+WQhX4U/aKfDOKBy1vAcv8J+VT9CX135PecxGWfgN6c1mCVEcJ
FOrTL3uUxgAtfT7NeXsRyASeWf31+Rewd/CeX6z8a4qfpN9kHsi8kHki80bm
kcw/2Q+yP3/Xj3+bh7/L2//0vPzTPHA7CYw5+LfDnk9NcsPXaCDY9fGFPbZB
1zrt9BR/GojveW6ZU98K5xI6Hqn8osEdS0E9WPT1r/6S+C5H6M/Ytjj0gzsX
W5XG4MGB3Otc4SG4yME/c9h7FN4PV+uZlXXAB+m7dHHWvcoyLqJzpWgL0IRX
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
fZ9ae7Wh8DAv88CZUhxZ+1E1kb8V60smFFY+KcbcV+ZmPTebcVjh6fJXJYX4
yuaz06WWRvy04YT30Ol8XCBtK/9dswELZ2Mo5/5ctDhrXeW6uxZNeuWuHDHK
wiG5vvPy41W4vza2b/JBOqZ9aV5Q/SsF5yn/OJ1p9RkNL74f3n8pG+3Kn3WI
ycf+LU/u17X9mrpAWR9us/A2WmjbiBKTXNoW0ym44HO83EBrE3pVaAV0eFKw
UH6H17pjLShRKLCAKUZF85GRZv+GVrz3NKXt+Ccqcgrlzi493Y6nvj070yk3
gN1BAcM69I4pepN+RM6wXLAnfgAzfok8qwztwgib5AmhHTSMOZ+2dIdFD3rz
cAUaZNGw4bc3vW5FH35MeGU1uWcQz9gEuo/V9WPgsO9LvfxB9IhRKpEuoKDm
GGfcuv1DmMvVIPv9MxUrJ4br2/OH8OLM0DM9zwbQUzFEumEfHRc4Xn/24AoN
o8vXXVTKo2OteG+erd4gHuemfqDsZmDdbH6jlM1DWD5+a41CJgM5Z58w1hGk
466OM6rSGsO4eeI8nXOMjsEUZmZr0jAq2DjdrKhj4Olf/K6WKiOo8WDCIS95
GEXvPVuf9H0EE47Qh8qDR/CA0MljszYzsWu5fWf3A+YUf0n/5TUv2gzdZmJM
08DMatY5dW2AytWey0T5WWkZGT6jKCZKWfh7Cev8culbGyU2hhBowWktPvrX
7xUyX2T+yHyS+SXzTeaf7BvZR7Kvf9ev/+48/m/P27/NU0XzmrU62V3oG6xw
W7G+GtqLEo812HVj37dlKr9EauCIvl2tingPLsiQ3GJxqhY0M3Iipx/qRINz
1UljvpWw8eD3wJP57SiR8WFX4a1yaAjJWndSJxVXHstIVsuKBAeV8pNKrXSc
uU1Y7pTDICT/kOG5qM3A+zEMtyMbhkAvXk6Ld0sv2l/R6Ct6Wg/CHsqxhTv7
MMU8ZqtKSwPE1nuKP97Vjy/rs7tkeZqAb79Y7htRCsZ/Np+hqtwMPWcmZY1e
UnDvhc6ZclYtEJfys71+DhVPRWWdz/jYCueNzIbW36Qizy0O5RmdbcAv22Kw
v5t17yl5drZDpgPuL+Fi9h4eQJu2ObHqVzshpuN+RmrSAGpSpufVJXbBm2Cz
xEIpGkZQ7D7j7B4A7Zd1i9xoGNZ+9liLQS+U7R1Jruun4XTfVzssffuggdn6
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
aiAgfxe/+gUavC4oPL0ntwbaWubECskNAs+BTYuvh9T89efXSvHPo2c71UxZ
L7kfcr+kHqRepJ6k3qQfpF+kn/92f0774ncVt0/gtTWcv3NlvWDd87i43V0T
GDAtedM3yw8QGqb6bEnfBK64vt/WojoK3qT2qnCy+N+pMbmmr7xxA03T6hBl
AqU+23Ucr/jy1///MjK9Ze+P/X3AZ35NTCCVI8nuqf68NINekHncX/LsI0fS
km/lvrtm9YDdIaFk3okJXG2zoVBiXioclNcwbFw6iesH7EHuUx6o7EjQ99g6
iUYCKRqrRUtAwfXOd4kzk1jqLVGR3FIBTWk/d7a9ncTlP7gevn9XA5T33gmS
vyexpXaH5qPIBpAT5Haj8XEk9eQXU+7PaQav6AWx7gocSRKR8hoZJ1rhRnjT
5+TdHEnhQkoF3N/bQElgt0KIGUdSn/rKJ3fmdkAJbSdosPrVJtFzU+F4J+xW
qyrxfsaR9DLDO2BZTNeU/ZD7JfUgv08+P3qoP/3p5AQe0U60zrdPQTy1huuJ
wCRu55CV2DEjD/V30zbosPQI3rbr3oOUYrz6at/u4lOT+M24n0/wVgWqa3Z4
Xn09iVpxwaf5FWuwWtHa4lnFJPrp/2wuutqAAYq21S94OZIKXscvPpfbhFvp
YTteybPuZ/La2odEWzHWUPnUdgOOpK7pqwd/XmpHroYbqv23OJIEZvM7N2En
yrtezvYP5UjaosbJ8ZO35y+/J4oTCyJ39yGpH6kvqT/pD+kf6S/pP5kPMj9k
vsg8k3kn+/B3ef+f7pfqwMAxUcce/DVx5ON06xGMfDrWtaezGy/ZShbrzhtB
3VGDJ3x63VgygzaeHj6MTtTkxS98CtDja6FMxsN2/LrPIHcZTy4WV3yxzPBq
RZPr3accg96hh3uTuua5bJz9+24sVaAUy021Yox+dWHOwUZR5rZibB/jTbt4
qRMvnrrazoipw41jJkU1DArG+7qM7Uv7jRr7w++WcFIwszVUbW1dJXKfoXN4
Lu3Dpzt/R7txlmOzwRO3uxI9uJWxf6ieuwtdemYVJJYwMLhHFK8ldODK5beY
ckzWPeh3ZlfBxXZ87XXktvBKOval7rLrE21DpuFrs7taQ1j8zu9UUUELbrNQ
97W4NIgbnAq+2Tk2o9k3bfkkbxryH674P9p786gaw65//BQZIqIMjRoQmTM3
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
zPMozJJLjGiELxG1/vIZZeBup/Uip6Aepj/YnjfvYSkcldEp2GNcA89lhoQ0
FEpgxcW3Huo9lbDQY8+ilOtFEBQQVmDwtgy2PpbqdbQoANvy3E9wohgaXtXr
Wp3JGbM+WR9ZP4kXiSeJ99/w/Ff39ze+Dt7293zKpcOk4glX8y744C1GkHKE
Cx0oWWfeStv4IC9DA3PG0aHTryxi03Ef/Dz508QGCgPOV1xY3yG4XzRra+Q2
UQbMfX9FeeJFH0xPMxay2MgA6vMzJ04KYk5Ixvi9so3Q+drfbx//PpaJHzm8
xaEO7iY/+2Ba7YF6druedET/Bi6lIXP47F2UkfC470svB9+5tzT1otwwqfZ4
hdmKEhgI7Ou9EXsTV109MU3vdz6sPrfyPlfoOq7og/BFEjQortcPTzPwQap1
S9BU3T7gvLr3W26WD0qvfr/n17EeOJj3Yu32X4/RRiPF+u6tLhi6ao/bTjzG
mJsaHXqBHVDtr+go2+mNAyIzCidS24C96Y1liqk3Ls/SUciua4HX4dndDkaP
0DKrsPLBcBOkF3Htp2c+QE/2/lnyugwoPB7fbCvoN/qdxTzKDgYsanvYfEEQ
h0ccXl5iwgDxi8kVFwUxWT/ZH9k/iQ+JH4kvWR9ZP9kf2T+JD4kfiS+JP6kX
Uk+k3v5RPf2jeMd4n7kcl8+A/BkOZsmbebh52c6NsjpMaLgS/apPkocDRfr1
OTFMaPbXj2/t5P75Pcq42hmvcq5ycTU/IG6RMwvuHjbtWBLIHXP/G62zR0xm
CtaXXSVe/YCH+5Nb8mr30aHgosVlg1remOfJ/KvWm6h6vqHBm2Wmmzav4KPj
TeldjzL6wYBuvDLiNn9MvWQ/5PpnD3q1r9PqgyePNW941vKRPZ45pTG2Bzas
XPJZT30Iiw7ddymJ7Pnz9yPIev9Wzz+a36pC8bLCEAMerdnbVKzPg8wBSZ/N
HgxoCflqL2/Pg9SJm97EzmaAqHu8v/Y7HoRtvWT0gvfneVg+R++e8Jw+cD6i
0rF7kA9urQ2nEl72w5Tod3uX+PFhzZDS9Vk/mbBSOdnqoBAPeBXHrcsEeEtc
pW4RSeT++fdka2/rN657wYWK0xsT3R7SYKGqeF+mPh8qacP1g3voUJxuEzmf
xRsTk/eT65P1kfWT/ZH9k/j8o/3MMw97cDyBDjS2a+W90BbY6hpmWA10EJFb
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
szs=
       "], {{{}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[CompressedData["
1:eJwNzkkiQgEAANBfkZCpiGQKDea72LV1gFwQGxHHSIaQEMoQeou3f9mDw/1y
KAiCEkccc8IpFc44p8oFl9S4os41N9xyR4N7HnikyRMtnnnhlTZvvPNBhy6f
fPHNDz1++eOfQDZEmAgDDBJliBjDjDBKnDHGmWCSKRIkmWaGFLPMkWaeDAss
ssQyK2RZZY11cuQpUGSDTbbYZodd9ugDHB4rVg==
           "]], 
          LineBox[{309, 346, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360,
            361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 
           374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 
           387, 388, 389, 390, 391, 392, 393}], 
          LineBox[{414, 415, 418, 423, 424, 425, 427, 428, 445, 446, 447, 448,
            449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 
           462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 
           475, 476, 477, 478, 479}], 
          LineBox[{515, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
            535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 
           548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 
           561, 562, 563, 564, 565}], 
          LineBox[{588, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
            604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 
           617}], LineBox[{621, 622, 623, 637, 638, 651, 655, 656, 657, 658, 
           659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 
           672, 673, 674, 675, 676, 677, 678, 679}], 
          LineBox[{689, 690, 691, 692, 693, 694, 695, 696, 697}], 
          LineBox[{703, 704, 705, 736, 737, 741, 742, 743, 744, 745, 746, 747,
            748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 
           761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773}], 
          LineBox[{778, 779, 780, 801, 802, 811, 812, 813, 814, 815, 816, 817,
            818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 
           831, 832, 833, 834, 835, 836, 837}], 
          LineBox[{854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
            866, 867, 868, 869}], 
          LineBox[{893, 894, 895, 896, 897, 911, 912, 913, 914, 915, 916, 917,
            918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 
           931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941}], 
          LineBox[{947, 968, 969, 970, 971, 992, 993, 1010, 1011, 1012, 1013, 
           1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
           1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 
           1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 
           1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 
           1058, 1059, 1060, 1061, 1062, 1063}], 
          LineBox[{1071, 1076, 1077, 1078, 1083, 1084, 1085, 1086, 1087, 1088,
            1089, 1090, 1091, 1092, 1093}], 
          LineBox[{1110, 1113, 1114, 1121, 1122, 1139, 1140, 1145, 1146, 1147,
            1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 
           1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 
           1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 
           1181}], LineBox[{1212, 1213, 1227, 1228, 1233, 1234, 1235, 1236, 
           1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 
           1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 
           1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 
           1270, 1271, 1272, 1273, 1274, 1275}], 
          LineBox[{1291, 1292, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
            1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 
           1321, 1322, 1323}], 
          LineBox[{1327, 1328, 1329, 1345, 1346, 1347, 1351, 1352, 1353, 1354,
            1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 
           1365}], LineBox[{1369, 1370, 1371, 1376, 1377, 1386, 1387, 1388, 
           1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 
           1408, 1409, 1410, 1411}], 
          LineBox[{1433, 1434, 1435, 1436, 1437, 1459, 1460, 1461, 1462, 1463,
            1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 
           1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 
           1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495}], 
          LineBox[{1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
            1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 
           1542, 1543, 1544, 1545}], 
          LineBox[{1575, 1576, 1577, 1584, 1585, 1590, 1591, 1592, 1593, 1594,
            1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 
           1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 
           1617, 1618, 1619, 1620, 1621, 1622, 1623}], 
          LineBox[{1629, 1649, 1650, 1657, 1658, 1659, 1660, 1661, 1662, 1671,
            1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 
           1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 
           1694, 1695, 1696, 1697, 1698, 1699}], 
          LineBox[{1705, 1724, 1725, 1733, 1734, 1763, 1764, 1765, 1766, 1767,
            1768, 1769, 1770, 1771, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 
           1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 
           1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 
           1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 
           1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 
           1835, 1836, 1837, 1838, 1839}], 
          LineBox[{1853, 1854, 1855, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
            1867, 1868, 1869, 1870, 1871, 1872, 1873}], 
          LineBox[{1879, 1880, 1881, 1897, 1898, 1911, 1912, 1913, 1914, 1915,
            1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 
           1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937}],
           LineBox[{1943, 1958, 1959, 1976, 1977, 1978, 1980, 1981, 1982, 
           1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 
           1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 
           2005, 2006, 2007, 2008, 2009}], 
          LineBox[{2015, 2024, 2025, 2032, 2033, 2046, 2047, 2048, 2049, 2073,
            2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 
           2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 
           2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 
           2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117}],
           LineBox[{2123, 2146, 2147, 2154, 2155, 2176, 2177, 2178, 2179, 
           2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 
           2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 
           2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 
           2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223}],
           LineBox[{2229, 2230, 2231, 2248, 2249, 2262, 2263, 2264, 2270, 
           2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 
           2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 
           2293, 2294, 2295, 2296, 2297, 2298, 2299}], 
          LineBox[{2304, 2305, 2331, 2332, 2341, 2342, 2343, 2344, 2345, 2346,
            2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 
           2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 
           2369, 2370, 2371, 2372, 2373}], 
          LineBox[{2381, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
            2401, 2402, 2403, 2404, 2405, 2406, 2407}], 
          LineBox[{2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
            2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 
           2452, 2453}], 
          LineBox[{2457, 2458, 2459, 2466, 2467, 2468, 2472, 2473, 2474, 2475,
            2476, 2477}], 
          LineBox[{2481, 2482, 2483, 2487, 2488, 2494, 2495, 2496, 2497, 2498,
            2499}], 
          LineBox[{2504, 2505, 2506, 2511, 2513, 2514, 2515, 2516, 2517}], 
          LineBox[{2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
            2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 
           2559}], LineBox[{2565, 2566, 2568, 2569, 2570, 2571, 2580, 2581, 
           2582, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 
           2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617}], 
          LineBox[{2634, 2635, 2636, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
            2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653}], 
          LineBox[{2659, 2662, 2663, 2664, 2665, 2691, 2692, 2693, 2694, 2695,
            2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 
           2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717}],
           LineBox[{2723, 2724, 2725, 2742, 2743, 2756, 2761, 2762, 2763, 
           2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 
           2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 
           2786, 2787, 2788, 2789, 2790, 2791}], 
          LineBox[{2797, 2798, 2816, 2817, 2818, 2831, 2832, 2833, 2840, 2841,
            2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 
           2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 
           2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871}], 
          LineBox[{2879, 2880, 2881, 2882, 2883, 2898, 2899, 2908, 2909, 2910,
            2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 
           2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929}], 
          LineBox[{2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950,
            2951}], 
          LineBox[{2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989,
            2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 
           3001, 3002, 3003, 3004, 3005, 3006, 3007}], 
          LineBox[{3038, 3041, 3042, 3045, 3046, 3047, 3048, 3049, 3050, 3051,
            3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 
           3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 
           3074, 3075}], 
          LineBox[{3079, 3080, 3081, 3094, 3095, 3114, 3115, 3116, 3117, 3118,
            3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 
           3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 
           3141}], LineBox[{3145, 3146, 3147, 3151, 3152, 3153}], 
          LineBox[{3159, 3166, 3167, 3176, 3187, 3188, 3189, 3190, 3191, 3192,
            3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 
           3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211}], 
          LineBox[{3217, 3224, 3225, 3235, 3236, 3241, 3242, 3243, 3244, 3245,
            3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 
           3257, 3258, 3259}], 
          LineBox[{3271, 3272, 3273, 3276, 3277, 3278, 3279, 3280, 3281, 3282,
            3283, 3284, 3285}], 
          LineBox[{3291, 3292, 3293, 3298, 3299, 3301, 3302, 3303, 3304, 
           3305}], LineBox[{3314, 3315, 3316, 3321, 3322, 3333, 3334, 3335, 
           3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 
           3347, 3348, 3349}], LineBox[{3353, 3354, 3355, 3358, 3359}], 
          LineBox[{3365, 3390, 3391, 3392, 3393, 3428, 3429, 3430, 3431, 3432,
            3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 
           3451, 3452, 3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 
           3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 
           3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 
           3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 
           3495, 3496, 3497, 3498, 3499}], 
          LineBox[{3503, 3504, 3505, 3522, 3523, 3526, 3527, 3544, 3545, 3546,
            3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 3556, 3557, 
           3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 
           3569, 3570, 3571, 3572, 3573}], 
          LineBox[{3579, 3580, 3581, 3584, 3585, 3596, 3597, 3606, 3607, 3608,
            3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 
           3620, 3621, 3622, 3623}], 
          LineBox[{3629, 3650, 3651, 3652, 3653, 3668, 3669, 3678, 3679, 3680,
            3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 3690, 3691, 
           3692, 3693, 3694, 3695, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 
           3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 
           3714, 3715, 3716, 3717}], 
          LineBox[{3721, 3722, 3723, 3727, 3728, 3729, 3738, 3739, 3740, 3741,
            3742, 3743, 3744, 3745}], 
          LineBox[{3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767,
            3768, 3769}], 
          LineBox[{3773, 3774, 3775, 3781, 3782, 3783, 3784, 3785, 3786, 3795,
            3796, 3797, 3798, 3799, 3800, 3801}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.1046392715392375`, 0.}, {0.30731963576961885`, 
         0.7645320913100637}, {
         0.30731963576961885`, -0.7645320913100637}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], PointBox[{{0., 0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.18015537345975, 
     1.3828357376901312`}, {-1.8400481932305763`, 1.8400481932305763`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzsu3k0V//aNy5FkoqKZiIVKkOiCZcUSSVpklIqKVIaVJQmESUkQ0hlnlIR
ktBlyDzPQ+Z59jGP8du753d3P+tt/VbrrO9z/866n+c5/5z1Otfe731d12vY
Nh3+s4bq55mZmJgy5zIx0f/tFNS6b+DqtLj8gpzTxVd/IYGBrSVPa/HKQfiP
OoHha2j0Ovr6VdO/qHQ/GsNrl+1l6Dqs/OpP42Z3dVG6rqu4fCabwwjOWFk/
uYiqu+pst6Vx/55lW+h6zU25Ffw+Q2jid5+Pvv/rnpvWNE448XEHXWd6p3tk
W8QAbnPNXU/Xpb9Mv0Vja07RTXT9ncSOuYeS+3BT/A0Vun5uxmkfGuecGJSk
6wmfd7EZlPRgGlZK03XP0BxjGp8L2LyKrpsFc/Oy53Xj1f3lq+n6WffBIhqv
KcgRpOvT5ixXkelrx5qI9GV0/djRF0qyFD4XK7+Wriu1K1pf4W7B7dqqM+j6
xPrNmoYU1lWb/7vOpuX/1GNzAwpoS+2m60PvH9h6UvitfbwyXf/oufNo/vEa
lOzfwUvXxzTvKBVQ2LBSXISuGy8/8IBtuBQ9iyd/729r922h2RR2Uo74H/2V
Bjw2kMnDRU9vHKXvV579htOQwpLNB/jouv3d50s8pyXiON8JVbreHOr72pfC
9jE7lOh66pzF3HsPuWOZyd1VdJ3jbkWOAYX9hpt20/Wg8/PeuJZFgpHpdg66
bvXyR7wzhZUEnq6m6xrMSQ4zdDIgLOzUQbruocusRuNrTk9W0vXcHSan314u
AqF9dmp0nVVqZuAbCl/a9e73/tfpNs/ZLlwJBzTP/54vEXnmbKWw8eGVwnTd
amT03aXrdaDivH0rfb/oiycN+hSOXefHT9d9SuJublVrguTjexTo+jdhnfgt
FO7QZgW67sW5L2SmaBt857kuR9e3LAixY6WwKufI7/rMoH7NotldEHx/6Hd/
jktGmwopLPj0f+xP8WCHfV4/A56Nxv/Wx+UxOzkaf9QbEKPrTds0gr/W98KQ
Wx0rXR8pqr9FY6/vmb/nt32378m7/H5YkOgmRtfnbV+zncbnbsYK0fX12uwR
T+IHYT/v+810vTx2XI7GPu++7KHrH07rpF4OGYYsnaD9dH2Hy4fDNF468VOa
ridv77I4/G4UgsJM2X7P13dNm8Yje+F3/y6Kjh7bbcdhkD18DV2fL2q4jsal
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
py4TofII7stfF6PzqHL6ZW8qj8BgUb0vnUfLdMftqDwCjn1HrOg8autK695u
PgB1vNtZTag8OvC2KIHKI3h53eQ8nUe/djEdpvIIOgTns0lQeRQUJtK1rHoQ
jMdzo9WoPDrcdtieyiOo8d5/h86j8Zb7slQeQcENp6d0Hvl8CuidrzQMCYLy
jnQeKcvlh1B5BAkNayo/UHnU5jh2m8ojaCkT3Ejn0bMwQWUqj4CPZZkGnT/v
T3aJU/kDhQYOAXT+iCqEFlL5A94sLPZ0/hy20uo0ZxmHS5ND00r+M3+m5AOZ
H6RfSD+RfiP9SOYFmSdk3pB5ROYbmX9kHpB5QeYJmTdkHpF5ReYZmXdkPpP5
TeY76fd/1c//12//Xr+R+fdP/Tf5y6ki3Sr1P35f8DA+zdi6SCYVdS4s8Lpv
54R2eg0zdX1T8NzI0Vl7tHwxpDq3e0NTEsa1r+7eVRuOmzvTOhIXJmLTzEDH
cK7v2OtWPVsl4DvKzn+hf7o5AZNPs8q0cKVC7fdnve4FHqja5nqw+0IqCHbO
7Rf9YIoTMSw7hi+lgmXmlyRzDXns65zcs90nHBO2lr1gWZ2MS7jFDFQSvPBo
Qk9J3cJUZJ6QZMv8+BiqMuJX1b1IxW2htZyD6sFQUNp6/JtzCgo1xMgGz4qC
4IpxtlCJJFTOMbGNkYyHVZdP6j18Ho/OY5vXeVX8gDcmySmyUVGorMph+H5/
CswPlXjdmPIB/6v38e+e71/lQyzJxiuyvA04pa4Iqp9pgCP5q3f7U1gkp3pD
snsDBDhbu/lR+MT+VHHv9w3g7NEzx6K7DVzF1Y5MzqoDJ72tS65xtoO9Zug+
Q91qePBAz+3193Y4kb6zaCtrOKhbr6xQ+NEOMffCnxrZesB5g0L7Xgrb+T1S
cdVygsunrr45mkTlmCu70m2Zx/ByQ07KOQpbNj8Rs466A0qNK+vtVrfDrLm2
S1NuV0C1qPJ73+3t4MzV+kbmaRmcV/p07bN6O8ieTyjOcSuGwnVHpb/ot8Mw
29Kkh8EFoBczsTf0UTv4f758den3XDhVpM/i49QO6uK34nLeZsCXW25nbf3a
Yez6DOH8uCQw8LA5dzW8HWw1OaSMfyDMc0iVNKD6YbXjMt7ffxm4IpfVGlK4
4dnFM3OK90zZD7k/cr9/29+/e97/1fz9bX+KSyKiHm0eQo9pHlnyG3phkV4F
p63vEBaNWdwu7+uBLc+PXV66cBiFhjdsM4ju+fPz6rnieWcMatvBtHfFlUUu
THGPz6/6GS1C/XxrM1CltIQpLihpg6hbWgewjgRWbLkziPc3P+8786oXnO57
b73+fQDHpUSjYEYfCB1nGTsgPYkP2n7VLrjWOeV+8nzy+VskF0mpFQ6jquvr
EskTPWCdXHq9ymkEPUxyVvNMMEBKyX1NksYoLndNE1zgwwDJz2fUZqwYw7ih
p4Ui+xlgxS7MeF03hoLr+PW/9XbDxgO9LM8Dx3Fp47fnhw92g9jDWPvCa7/w
7IpaTsEvXWD+5pnDze0TOK3QYVCIvwt45zpLL50xgJmfk/bfvtEHHeLiJzfv
pb6Dk196CjdOnY+838hpMyPkRx3+KNuiZVwxBrdLmrUm2mrxP94f5PPJ/mwP
iM+3fNOH87ZnFnkc6Idum0tLmHt68ZmvWnx5dD9wdtReC1DsxTWsK3VKhAeA
oeew7M7rHqw9ue27s+sA2M98yHO7l4EY+C5n8exB6P3hf/adCgO/dxxw0bo/
CPy7uJmadndj1eq9i8/3DUKt7MHK+vFO5Dtif0BMfwjsJGctkg3vQGad2Xbu
dUPgXKtwYfByO86U8Vprc3IYRndPZM0TaUPxyiNLppUOw1fd7XuftrTgnd1r
dIYPj0Cu7GjV2cBmbL6zgO1GwQjsytr21N2gCW/fXsFy7dAozOf+tUd6YyMK
ye460Vs4CjLcO/jFR+vxV4Yl+9CxsSn8kfyS/JP6IPVD6p30A+mXv+n7b/r4
P52/v+m/cmRFKL3vEaXIXGrfGKi3jY3m412W9R2KD3wSHqRD8yXKJCBL8fXn
9+m7zWxOUfmApo4mF+n8UAq7Vk3lB2qkryqj8+WcAI8klS+oIytfSPPHmfhp
kOIPl73UlaD5Kxg+EUPxh+cyZnXT/hVY/LyZ8u+U+8nzyeezzx5eR+trovpd
OaUv3PNRSY/Wn297jRClP9z11nk5rU/BVY1rKX3iYHmzIq3fu0+CSyj9oo7O
tkZa3+rrrlyl9I1222xHrSn/n/ac5UD5H69q1VvQ+bDYcN0iKh+QM2urJZ0v
Zo4F41S+UN8ZFqK0/r69H1Oj9IcLnFQO0/rr7872ofQ3ZT7y/qdMDxtofqpa
PmhT/GD+hx2a/xM/U55P9pe3wYCd1vfBaQvKKH3jj2upXLS+c1o9flD6xjbt
0/q0vq8EGl+g9I07x8QX0vreIO8WT+kbc+Vl59H6nvuRpYDSN76UMD9B63te
37fXlL5x7uvZvY2UvjfO+7aM0jeeFjbPofV9k3n6IUrfqLjWeBat70auBy8p
fWPXh87jtL5tzRato/SNJ2Ib4mh9Xz2cuZzSNz47oiVH69va8s0FSt9459ax
fFrf1cusZ1P6RrGVBaa0vg24nNgofaOfeq4srW/xi9GnKH1j1ZwD3LS+RVdO
zKH0PYU/kl+Sf1IfpH5IvZN+IP3yN33/TR//p/P3N/0/dI7h0mbUwBW1/gNj
Oeb4dndia1dTDUzkiHntNfJCiU+fUsKKa0C53196+sdPqDY2fabtL8QmhY6K
OMk6LNpuf8ukIAnvVuwfevyqFteKmhwImFWLr/L9t+QmJ+GykMzonANxEBzJ
3i3/ph4XvryR+9LzAxTu4jG997YeV8TzCF2KqAHp4sJyt4XfcOa23SlzzWuA
V/GmfMgK6ntoyQ7ftwo1sNg6XSlwdQrGxLOZS9VVA4es/sMtAplYIX3p+V2+
avihcffbiSe5aBfcG24uWwUv+GYVQ3c+Fgq8+6UmUwlt16tepu4twmDXq7o1
yyogR32MMfC6BIVdIraeKy+HjS/UvxaXleFJ35j4WbfKgHm8OMRk8icqxVtM
FHSVgKyzVXkVRxU2tXMy4ncVw41PYUunT6tB9/qMGelrC4Gxr833/Zxa9Hix
UWawKA88z+z1/TRQi29lI8/lumRD8tbTxhhSh+M3opkfc6aBG//H+9bS9Sgu
Fnir8vgT3PC42XVEuR6viS2d0T8zHOPCOdyav9Sh+AKBlVucarHKptujLCIG
PSzttERaatHftyhZpj0Iw07073Doq8UOlou/ZKS9US6swEd0rBYfS13WWTPi
jG5eeiMKuumYc2owXIa1Fl+uecyfXpSN3J9c+GV1a7Ci/srtmfZ56Oamd4fd
sBrZE2NCrHwLsOe60zyR/krc6fum7YNPEbqJ98QpalXgr4nph2KelSDriqh9
6e/LUTq3uzXsWBlKbun8HFldil2Lz3xynP0T+c1s+uaMFGMHp3/NK88K7Fki
31AyUoi93ZzRgwur8Afve82VDfnI+uWtXOj5anR+kX20OTIX7SUCIur31GB+
1eHQ422Z6FofuWNwohaZxY1SvjPdx5ClsZ6qk7Woolu+mJPjMmYPSKaco/CX
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
4Y5W2nH1Rtx1p7JDz74Kj0ZlXHRRoN538bPcxqxrUOzdmZwWoXrkVOZlrkqu
xcXr+X6psNThB6VGr18/6rBt/Z596rNr8a6znJ5idD3uzF9xnZO9Bu9sFjkS
EdiAylu2VbJPr8JA4QDd/S8akZvb9vHZ+p/oVzLEGnu5CUvqb/GzRJQhR7DG
uzD5Zry+f9O03NslWOGXLiYxqwUbDyYLJK4rwkWp+79KpbTgxp71T6py87Fa
PDE3LKcdtW0Sdy7fGIjOk5XnT5m3Y89yzdD1B6P+Wif5yLpqded0zDdYKfM6
UTaNgep69wJKlBPBlrtlt7d5D87hChI4V5kKVsZWm6xUevHZtbWHG/izIU5i
TcH0JX1ocTtK//HLPCh/ua9uaVcfNg+a80WPFoBp55OV+Sn9U/RA6qVymX9d
eXQRJHVqrFpnSH0XrTqqoni9BPwy05kfLR7E88rPgg7xl0HMnE+j7ImDqJK8
/djpzHLw3VSqxHRlCJ/Fflk2zagCuk+0SBxYMoxvrWath0VVIHB2h6dq0jC6
Rx0Y4YmshryrRV/zr1Hvx2vqowpBNWAV6uz+iXcUJ5a+iWLcroV9g4aWpRmj
yOO5RstuVx3Mr95trG4yhppcT+yPcNaDlgr7Vo6149h9TNlcXqj+j19Ifkj+
SH5J/kl9kPoh9UXqj9QnqV9S36T+Sf+Q/iL9R/qT9C/pbzIvyDwh8+Zv/v2v
1ut/dz1eZTj/vNb+BKqvDDPS9fPA6FzicWNWW6x/Jc5TvS8PKl+7POhx8sES
A4Hy/Sx5UGx+5XPN/Ri8bH+x6/TKHBicL77hrmQypgofvcybnwYZaiftBvQy
cTnb4eT3NgmQpXjw/hhzHjYUNapJaGiDwfyFVfvMveDRtCcV2tJ5YJIpFzKw
4BOov0xycC/Lhcs5UeFnZubi6fsXx42VvoDFW5mqRx25yJppKVwa6gJXVTVa
hEOiYWz+WNUtnxy4cLEh1VwnEbaGvvOOM8gEza6K+otSqZAZJVIZJ5YKq5lY
P/3alAsetl2KZvWfwa4++d3Ol7lQdKL23K5HAdDYklZzKiUXInluqa2f5QwG
wtNWxZzIhGAVPG6SSvV/Eg2DtHMg6Dq/0a0TUVPmIfsj+yf3Qe6L3Ce5b5IP
kq+/7fNf3dff5v9X91mTEcE7y78ZxpSGi/wjW+DDtRWNGzybIYGDKXRFSjOs
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
Accdw5huqP+1KTRkSr9knby/MCbzbdhAB77/+jSf63gZhJXNOy39uR3fVc3Q
TuWugNJQw87RC22Yrn98xZukKhB37GGRW9yKYv6rm80jaqb0R/Zf2h9p1tDa
jPZSyjeLG2vhJfPlM2u+NOFh+bfSDzjr4VQsp9f0e41omrJ23QOpBti+2nuX
qVwDzshoUC8+3Ahy+Sc0mMfqcPfnU8GeV5rg/snrHTPDatG9gVd6wqwZRhOb
mGx0a3Da2dWMdvsWOMt1fd2qdVV4S+R6uf7rVrBixL1Bs59YUdYc2ObRBh5x
AR6Pi0txLofegp/e7fDxkfAmwzXFOD9+gEfGpwNCJHdqmF0vwIZhm/A5Xp1g
OVF4O8MpF7XGqufXfOoCwW6uV7fvZ+DZ4jUbo+Op7wjZ735+lUk4skviac4l
Bji3fOQV3BOHrNZpZUnDDHiy122pq2sEPkpc5Cr3tAd4g9lm9Ob54gujY0WR
vL1Qyn3/xgSHNkq/tbKViOqFpWmy/JvkveGa/Psf7zX6IFSM+enb22EwbnTv
Suh4H/wYrO+TZokFuyOxZlk+1HtguVfANcFEWF+nP43p4ACcNLXPPeiZAoVL
n7QpTxuEhPVDbmHiWZBpnlbA2zQIXFIPbSpV88C0O7VgWfYQbHY7KrSpvwBq
Nc3bIGoYSpIm3mhZFcN48tgia/8RMKjqcGTnLIOOHUOGc1xG4SK7U1i73U9I
LZNjLXk6BmOzfhaNalX++T4i9UzqnfQD6RfST6TfSP+S/ib9/zd//1P9/199
/5+lb8GtWTvM2xh4gzfwxKtXueh8LXAmv3wPVg4vi3B7n42FTsOpd116MGv3
1zmS8pnYheZ5jiIMfFYlxbkxvgCnHzf3qyvrQmnlpiq9vmKsEis2l/06jsFv
R8eCTELxpGKS19V1vTh/cY6YgVMq2lx8dvpZai/ylLwyvKqZhCEiZfzMhn2Y
+HDrZ17vBGSPVODg4u3H6Vw/K448jsM09/Gh4fx+fHnhy/23cbG47JLM97Fn
AzhfROKQlVw09j/ympA8N4hLD9b5bmeJwj2Fw89eygxhqZvgp749kWhvVtYT
wjOMgnlpEwodEaj0oSpeqGcYi2O9BWMywpGVbX5KVcYINtd1sbSUh+F1pXtZ
kX6jeDCh2fIARxjGNW0K/DxzHHd5yEs96wtFhotBvPixMVwdbDc33uTzFExe
T+5j0831KU6anajxfbqwBH85csg7PVtR1o6GotXBzSqVeJS5Z8NP1Ta848zJ
FihRg7neZe7Tv7dg1ZUbXw0ia6f0JzVzX/S58xV/fl5o49D+FuPQjFdqns64
X1aH5+wuexbpNGHuvBSpF4P1KLeOWV1VohFZf4ns857biDdrVmSuGanHOQER
uyP5m9COS04oPaYOmRVEH4+KNeMs/pr73qa1yDR+4vjrrS3YOHdG7uctNTiz
WC7dVa4Vd345tJlRW4k8ucVFA3JtOG2DY+vO/T9xvVGD6lyZdrTw/lYRG1GK
CvuE2BQ2d2DukhTOU8uK8aSG1zR78U6ssYuyELxfgHdc1LePre1CXd4HMXu4
cnFGYSzLvKvdaGDfobNWOw0tzHhfxJ9moMcKuZwZEQmYwn0xad3sHqxNaDQ8
pvAVU7yjBZS+9WC6471grVw/tBQ//zb0Si8ql4zouB67CrPiQkTnifShWuuz
9zvnBME+9bcFpzr6UDJaoGXP669wsHmDjUdEP7aIiflwtMSDdMgnxnXzAfQN
iPz6UyMFllTdcDA6NoipKUES8z0yYezqnZu+okMYqGQ+s7QqF8ovJjqzsA/j
qblsR5LeFkBeGMfHlZPD6NOXoqalXgzBRkvNTg6O4J3BxNF3I6Wg+75jflT3
KDbwjKvbOP4EVo3H2tLtY1P0SOqV1DOpd9IPpF9IP5F+I/1I+pX0M5kPZH6Q
+fK3/Pin/vi/+v/vrX8yz869jtoTVjWBOsODsz9Fj+BwQxtbrNokLihKkgp7
MoI5tyMbVyROYvupemMj9ZE///5Tavs4X8adYdwWOnJMJJYp7qW8agnTi2F8
8M76w5IDTHHGQs8HO7qHseJDYQlH/y+cJyGy+pb4KPrtFHs+yP4LHU4vFjYM
GMUnuWfrn68aR8UiluqHq8am3E+eTz5f5rH9qWTZMQzjl/gU5jk2pV9yHnLe
vftWNma7j+L+q+bD7iNjeGxD++irNaN//v3Zv9o/2c/fzv/aJrmX7qd2NGXs
Y/QItJ02YKf77eH2X031C8/55JvpeR6uLbpIzfPn/5+w8VwLJzU/tK/L1KD3
YzD6IIXaD7AsOPaR3t9dhzdN1P7g22uVMrp/eZfihVT/wJHjYUP3byDvuZjq
H74tyW2g+285aJBN9T/lfvJ88vmX3o2epuetPnbrLTXvlH7Jech5zzz2bqL3
k7nOq5naD4SWz6j6n/bzL/dP9vO381vCOQNKf9TDWPDXhmzHGmCJ3tWU9rIe
rM5c1dK6Uwtsys38rOfq4X1zatJF7TrYwmLxbUNoHXg2abelaDTDeJJD+XJo
gI9u91+ub62A4k17bOZ8boDsg5M81r6loKkH+4xn1sOeXkmHE5oN0Kz4Wnl+
ch1sy1+ep6HRBPqN/KNs85ug/mn3joHbQVPOJ6/naRexblrTCLr21zmv9xbA
D53LWZlWjTBj9/Yrm65lw7U9105XFDSC6cdIyZM9PyBE/tU+iRnU+V38vGey
vkzph5yPnJ/cz9/m/af9kftQ+MxVPhjeC+UfN7pYXq3A9HmPC+tCe+Gd9rxp
R96VY+zN/Uv3f+qF4dO6K3iySzF365Fiq7heYK13tpm7pwaNiwsSZuf2gpFs
S8e143Uoalhvdta3F97Uz0jpvpKDFaObpV4F9kKliOKaXIXCKeeRdfJ+sh+y
X2aLTZxaDb0Q0lBdOsO7Ac/m9CxrmugFJtive7i9CV0iZjf58fXBuX3iTtob
W9Hr/2nvzKOxbNu2TypSaZCSRKWBSoMKUXZFSJFQqUSTTGWsqCgzhSKZU4YS
UgkpGXbzPM/zPI8XLvPQd17fWl/vu05/tO51r/t7vud73j+PdZ7ncez7tm+/
7bwuut1CVnpvpUagetlTDT7TXvzQJxhYajwCYqENbzbH92OO7lI96Q8jcFv2
B1P87CCyfPtVPNU0Agcmnp014xpCgyzWgv5NVHDPn47pPTKMNy5qtivfogIn
VaJly6URvLSBw/dmBBWe/ZywYL9Pxf/z817fIzuVs6RH/6jfv1s/ZjNxfUtl
q2Gf42OzT6GD8HmVxqL9RlUQ0Rl1qKB4ABLoz3TPeFaCpco1sJvqhwF5oaMt
acUQW56wyC26G4qrV2zoFMyDXdzZzhfzu8CqeDxef18a7Pm81Z5LqgsEvhh5
6W6ogNP10+aqr/rg3JuFJY+syyAmJux54aFe6GgcnTx98gesjvd48j21E36M
/RQ7F+QP8ofx0VuBTti/P7xyVZUfSt6Ii6Z73gG7SsfcmRjqschIds/cxTqI
3ibz/vG+RmSeKHeCsWqITrrgdu1tGw60NH+IdvoBavxPa+mnYtBO61qYcUk7
XGW/VLFjXSrGwf5vGnNtMBysq29gkYNjXxTSAle2wXL9yvU9lUUobdGeMUbk
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
XxEnPIk=
       "], {{{}, {}, {}, {}, {}}, {{}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138,
            139, 140, 141, 142, 159, 160, 161, 162}]}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{172, 189, 190, 203, 204, 205, 206, 207, 237, 238, 239, 240,
            241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 
           254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 
           267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 
           280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292}], 
          LineBox[{300, 317, 318, 331, 332, 333, 334, 335, 365, 366, 367, 368,
            369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 
           382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
           395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 
           408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420}], 
          LineBox[{438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
            450, 451, 452, 453, 454}], 
          LineBox[{475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
            487, 488, 489, 490, 491, 492, 493, 494}], 
          LineBox[{498, 499, 500, 517, 518, 521, 522, 539, 540, 541, 542, 543,
            544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 
           557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568}], 
          LineBox[{572, 573, 574, 591, 592, 595, 596, 613, 614, 615, 616, 617,
            618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 
           631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642}], 
          LineBox[{693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
            705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 
           718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 
           731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742}], 
          LineBox[{758, 759, 760, 765, 766, 774, 775, 776, 777, 778, 779, 780,
            781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 
           794}], LineBox[{809, 810, 811, 816, 823, 824, 825, 826, 827, 828, 
           829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 
           842}], LineBox[{865, 866, 881, 882, 887, 888, 889, 890, 891, 892, 
           893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 
           906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 
           919, 920, 921, 922}], 
          LineBox[{955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
            967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 
           980, 981, 982, 983, 984, 985, 986}], 
          LineBox[{1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
            1013, 1014, 1015, 1016, 1017, 1018}], 
          LineBox[{1022, 1023, 1024, 1029, 1036, 1037, 1038, 1039, 1046, 1047,
            1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056}], 
          LineBox[{1060, 1061, 1062, 1067, 1074, 1075, 1076, 1077, 1084, 1085,
            1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094}], 
          LineBox[{1129, 1130, 1131, 1132, 1133, 1148, 1149, 1150, 1151, 1152,
            1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 
           1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 
           1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 
           1186, 1187, 1188, 1189, 1190}], 
          LineBox[{1204, 1205, 1206, 1211, 1222, 1223, 1224, 1225, 1226, 1227,
            1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 
           1239, 1240, 1241, 1242, 1243, 1244}], 
          LineBox[{1248, 1249, 1250, 1267, 1268, 1283, 1284, 1293, 1294, 1295,
            1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 
           1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 
           1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326}], 
          LineBox[{1330, 1331, 1332, 1349, 1350, 1365, 1366, 1375, 1376, 1377,
            1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 
           1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 
           1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408}], 
          LineBox[{1412, 1413, 1414, 1424, 1425, 1426, 1447, 1448, 1449, 1450,
            1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 
           1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472}],
           LineBox[{1499, 1502, 1503, 1510, 1511, 1524, 1525, 1526, 1527, 
           1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 
           1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 
           1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 
           1561, 1562, 1563, 1564}], 
          LineBox[{1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
            1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602}], 
          LineBox[{1609, 1610, 1611, 1618, 1628, 1629, 1630, 1631, 1632, 1633,
            1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 
           1644}], LineBox[{1656, 1657, 1666, 1667, 1668, 1669, 1670, 1671, 
           1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682}],
           LineBox[{1701, 1702, 1703, 1704, 1705, 1718, 1719, 1720, 1726, 
           1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 
           1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 
           1749, 1750, 1751, 1752}], 
          LineBox[{1761, 1762, 1763, 1768, 1769, 1770, 1782, 1783, 1784, 1785,
            1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 
           1797, 1798}], 
          LineBox[{1804, 1816, 1817, 1822, 1823, 1855, 1856, 1857, 1858, 1859,
            1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 
           1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 
           1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 
           1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900}], 
          LineBox[{1906, 1919, 1920, 1928, 1958, 1959, 1960, 1961, 1962, 1963,
            1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 
           1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 
           1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 
           1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006}], 
          LineBox[{2010, 2011, 2012, 2020, 2021, 2022, 2025, 2026, 2027, 2028,
            2029, 2030}], 
          LineBox[{2034, 2035, 2036, 2044, 2045, 2046, 2049, 2050, 2051, 2052,
            2053, 2054}], 
          LineBox[{2064, 2065, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
            2078, 2079, 2080}], 
          LineBox[{2086, 2087, 2088, 2091, 2092, 2104, 2105, 2106, 2107, 2108,
            2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116}], 
          LineBox[{2154, 2155, 2156, 2161, 2162, 2163, 2165, 2166, 2183, 2184,
            2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 
           2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 
           2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 
           2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 
           2229, 2230, 2231, 2232}], 
          LineBox[{2236, 2237, 2238, 2253, 2254, 2257, 2258, 2267, 2268, 2269,
            2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 
           2281, 2282, 2283, 2284, 2285, 2286}], 
          LineBox[{2290, 2291, 2292, 2307, 2308, 2311, 2312, 2321, 2322, 2323,
            2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 
           2335, 2336, 2337, 2338, 2339, 2340}], 
          LineBox[{2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
            2367, 2368, 2369, 2370, 2371, 2372}], 
          LineBox[{2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
            2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 
           2420, 2421, 2422, 2423, 2424}], 
          LineBox[{2432, 2433, 2434, 2439, 2440, 2453, 2457, 2458, 2459, 2460,
            2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 
           2472, 2473, 2474, 2475, 2476}], 
          LineBox[{2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
            2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 
           2525, 2526, 2527, 2528, 2529, 2530}], 
          LineBox[{2536, 2537, 2548, 2555, 2556, 2559, 2560, 2593, 2594, 2595,
            2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 
           2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 
           2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 
           2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 
           2640}], LineBox[{2646, 2647, 2658, 2665, 2666, 2669, 2670, 2703, 
           2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 
           2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 
           2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 
           2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 
           2748, 2749, 2750}], 
          LineBox[{2754, 2755, 2756, 2771, 2772, 2773, 2774, 2775, 2776, 2807,
            2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 
           2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 
           2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 
           2841, 2842, 2843, 2844}], 
          LineBox[{2848, 2849, 2850, 2865, 2866, 2867, 2868, 2869, 2870, 2901,
            2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 
           2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 
           2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 
           2935, 2936, 2937, 2938}], 
          LineBox[{2964, 2965, 2966, 2970, 2971, 2972, 2973, 2974, 2975, 2976,
            2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 
           2988, 2989, 2990, 2991, 2992, 2993, 2994}], 
          LineBox[{3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022,
            3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030}], 
          LineBox[{3038, 3039, 3040, 3047, 3089, 3090, 3091, 3092, 3093, 3094,
            3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 
           3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 
           3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 
           3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138}],
           LineBox[{3144, 3163, 3164, 3171, 3172, 3205, 3206, 3207, 3208, 
           3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 
           3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 
           3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 
           3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 
           3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 
           3271, 3272, 3273, 3274}], 
          LineBox[{3280, 3282, 3283, 3284, 3285, 3298, 3299, 3300, 3301, 3306,
            3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 
           3318}], LineBox[{3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 
           3336, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 
           3362, 3363, 3364, 3365, 3366}], 
          LineBox[{3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389,
            3390, 3391, 3392}], 
          LineBox[{3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416,
            3417, 3418, 3419, 3420}], 
          LineBox[{3424, 3425, 3426, 3430, 3431, 3432}], 
          LineBox[{3436, 3437, 3438, 3442, 3443, 3444}], 
          LineBox[{3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3479,
            3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 
           3491, 3492, 3493, 3494}], 
          LineBox[{3498, 3499, 3500, 3503, 3515, 3516, 3517, 3518, 3519, 3520,
            3521, 3522, 3523, 3524, 3525, 3526}], 
          LineBox[{3530, 3531, 3532, 3535, 3547, 3548, 3549, 3550, 3551, 3552,
            3553, 3554, 3555, 3556, 3557, 3558}], 
          LineBox[{3564, 3583, 3584, 3591, 3630, 3631, 3632, 3633, 3634, 3635,
            3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 
           3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 
           3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 
           3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 
           3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 3690, 
           3691, 3692}], 
          LineBox[{3710, 3711, 3712, 3719, 3720, 3721, 3722, 3723, 3724, 3727,
            3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 
           3739, 3740, 3741, 3742}], 
          LineBox[{3746, 3747, 3748, 3757, 3758, 3771, 3772, 3773, 3774, 3775,
            3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 
           3787, 3788}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.1046392715392375`, 0.}, {0.30731963576961885`, 
         0.7645320913100637}, {
         0.30731963576961885`, -0.7645320913100637}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], PointBox[{{0., 0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.18015537345975, 
     1.3828357376901312`}, {-1.8400481932305763`, 1.8400481932305763`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.6747127295668488`*^9, 3.674712794844452*^9, 
  3.674737783914847*^9, 3.674836935939034*^9, 3.6748989297732973`*^9, 
  3.674903127366358*^9, 3.674903432337468*^9, 3.674904227301445*^9, 
  3.674904518940111*^9, 3.674945594196939*^9, 3.674945884720042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"S", "[", 
    SubscriptBox["s", "2"], "]"}], ".", 
   RowBox[{"W", "[", "f", "]"}], ".", 
   RowBox[{"S", "[", 
    SubscriptBox["s", "1"], "]"}], ".", 
   RowBox[{"(", GridBox[{
      {"1"},
      {"0"}
     }], ")"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6749480590365887`*^9, 3.6749481094297047`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    SuperscriptBox["\[ExponentialE]", "f"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "f"}]], " ", 
      SubscriptBox["s", "1"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "f"], " ", 
      SubscriptBox["s", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6749481097829323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Delta]", "2"], "+", "x", "+", 
        FractionBox["3", 
         RowBox[{"4", 
          SuperscriptBox["x", "2"]}]]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "/.", 
      RowBox[{
      "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"zeros", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"potential", "[", 
      RowBox[{
       RowBox[{"line", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunks", "=", 
   RowBox[{"sqrt", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "2"}]], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{"a", "-", "b"}], ")"}], 
    RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "f", ",", "zeros", 
    ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6747129000557423`*^9, 3.6747129471146708`*^9}, {
   3.674712996112567*^9, 3.674712996268598*^9}, 3.6747130369751167`*^9, {
   3.6747153621419897`*^9, 3.6747153768876963`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.3888319054150047`"}], ",", 
   RowBox[{"0.1944159527075024`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7086780604876255`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.1944159527075024`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.7086780604876255`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6747129479466667`*^9, 3.674712996761018*^9, 
  3.674713038490831*^9, 3.67471539486935*^9, 3.674737784052299*^9, 
  3.674836935998698*^9, 3.674898929839404*^9, 3.674904227339327*^9, 
  3.6749045189736423`*^9}],

Cell[BoxData[
 RowBox[{"0.804430691884789`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.5593915113911367`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.6747129479466667`*^9, 3.674712996761018*^9, 
  3.674713038490831*^9, 3.67471539486935*^9, 3.674737784052299*^9, 
  3.674836935998698*^9, 3.674898929839404*^9, 3.674904227339327*^9, 
  3.6749045190159073`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13c81d8fB3CjSCVJGVFGVmWUFSWvjIZRIqRBIiUlohSJhLKTVMjKXlmV
svce91oZKVwj+upe7r0pKX6f31+fx/OP8znvzznv836fj7its6k9GwsLiyor
C8v/nwb2013VM+ZaoptjB8iK+/Etz8J2REgF7NmcwpNbssC/ri/8rZAezpsc
W6itKERJpff1O9IncHElgxRY9h4KGpvT4oXMEGicc89JqAQsfDPPVkTP4EOa
Jasqbzm6ZiseXpS2xpMqQ2Hv6krsJysXRApdwuUb6JiurcGOgwkZdXGXIUJZ
fprSX4v12WsSmaJXcdFtM/ejL3X44vclzEL6BmT3H//D3tCA6ld1qmFCt2Ad
3trGItsCle67hVLnbsM2mSTrSmtB1hoF+co4d4gV0gdVC1sReTtakibqgSP5
pmkBUu2wM3biM5H2Bk/5wwSRz53w8w25GyzkD6+eWjnt/i5Uilwutij1h8xG
csvM9m78/nCIKXEuAN/45Mce23fjOvWnc1ncI5QXf2jtpnXD7JzNlVnRICiP
8UyXL/ZAWlXV4oR0OGTNqt92zPTh0i2aUJBQFHwLmCI5FwahzB7pWeQSBd2t
LGzZLwfBFqny+XNTFA7JWbFpkAaRmO8Rp+D+HIXb7h7ZdHAIQ9/ZRXu7X2CR
ken/m+8zjC8KSoqGxuClSdHM/YJh7D+hrfB+OQGW96RmUTCCNVH6r+fmUzHJ
lcrZ40fBkvrY0uutaTD3PpPj9oIC6pe7Fqd00/Bq3dtK9iwKemQy1xVHpcG5
p3ua3kFBQhmH+7196fD5NMm1SWAcKuN1Bhz3MxAa3D3knj4OGyUtpvCabDyY
kvHpKp3AB7LS0aPb85FyZ7q5uWoKln7DQ3Uh79BabmwUcuw7nAvd5KOZJYip
WFiejv8BesSnZlbWKhjcjRQc2jmH8uuFmOCvgiFb9YiJ4hweHwstbpSrQtDr
VPVGlTmIsOikhlhWYUZ7V1Iq5nDY+Y3PloIqZDT56qubz6FdWudVlGI1SgoZ
m8t85iC2Wsg082s1Yj/K2yl0z6G5prGKpFmL0GSTczXX55He/nci7GgtXGvb
zY/enEdAv9JaI9NaXFbCz5bb89D5kWDWfKUWbf3K4g3e8ygXvDNTHVmLbVEK
Ys8i5lHgLMNXNF2L/It2RmFv5xG9LfByVFQdFn25cxYW5uEuWxlimliH2D0h
RzcuzcNcmVmwMbsOfmxjd6RX5rFJ32YptKoOoeXZT49x0hF6Sz0i4HsdGta/
jrYToONB23SJ+6F65Kb/cWCq0XHVQ5/7zGw9BBqsYrzc6MgW5rWyXqjHvRt9
ntPudMxWDOTasTRgw2PxkyaedNxgczC6sbkBiz1cvUK+dNwKeRTip9kA++re
vY/C6fCJr+PKC23Axl8FrW2ZdDyvOcjBLt+I7AviMRyf6fhkt9pizb5GHI6/
OsnzlQ5Bjo40bu1GRHj/5eMfoyPW4PxhQfNGKNf1bhH6RkdSj6e//P1GWOmL
xC/S6ciZ/MBm2dEIwXsK2pJrGajhUlrJdWpCeeNaWRE1BnEu9nwIvtuEXCXu
5EV1BiISFJwd/Jogf1PVuucAAzbKu0d2xDRBQ8Ax9p42A8vnJati65tAbszf
mGjEwP4Cfp9A4Wa8ffby6l5bBt5ZLC3btTTjZ1zOa59gBkReLxZr9zbDS8Zf
eSKUAb//ft0QHWnGo7Jypt4TBkwfML8OMZsRxaHBvvSMgbmsH5UmYi04Ks2t
oxHPgPy/EW/cacGsWczAvzwG0lPql7dKtYImN6meSmLAJcBsDIqtCHYwsnPq
YuDAlYm6SxqtuL+ipKDcwwB516qgvOOtaPE8k/ruEwOLhbp8Ou6tCIwyWvvk
CwNG1bUyV5taIaPW+vD1dwb4k03Xhne1Yutr8+cqswyM+VFmiz63IkborF79
Dwbcj7IV/aW1gt3vt/vgHANJndqaEYJtMHX6K/t5gQHGcPXJD1fbsOHdqugD
bExUVp5UHnZrg3xY97lodiYCk0a3sHq3YYbPqmR+FRMil1g+G0S2gZ0qqx3L
ycSR/2D/tbQN2fouD2rXMxG7WOmxen07fpZuznLmZ+LS5xPnd/G3I1Wk5O9z
ASYUK75qGYu14+JQ3fRHQSbqHyyzx6i0w0XrexBzKxM/OLXC5azaocUcoemI
MnGIvyL5VF47njx6ZaApw8Sq51ucD39sx5txg1syskw08904sK+2HWz8XpY8
O5kw5hXt3fqpHQ2lSSf7djFhvd53NeVfOwRiqaz7FZiQCBns6uHsAC97Aus6
RSZR55QSGng7YCPsXD5A+DrnuFqWVAe2+VPsHPcycY/tsIPL8Q5YB5++f1mF
CS3feBXb0x1IMTl1ZpsqE2wsCyxmFzvgYuwyTyYc/C89Zt/tDtwOyrZQ2MdE
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
qG/xxEvRdT9XVojvfanWqF3Ohf8Bb4K/mQ==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FMR+/fvHRe1t1it1BU38H3xuzqg=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {0., 1.2841175033936392`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
eOCV1MqfS0sMBBTa1uqU8OF/FAm/bg==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
KC/y898/LlwM7IrV5DXxfzyDzws=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {0.000038794201159414065`, 1.2841175033936392`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.6747129479466667`*^9, 3.674712996761018*^9, 
  3.674713038490831*^9, 3.67471539486935*^9, 3.674737784052299*^9, 
  3.674836935998698*^9, 3.674898929839404*^9, 3.674904227339327*^9, 
  3.674904519093995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Constructing", " ", "ab", " ", "function", " ", "for", " ", "\[Beta]"}], 
    "\[Equal]", "0"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]begining", "=", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"\[Delta]end", "=", "2"}], ";", 
    RowBox[{"\[Delta]nstep", "=", "300"}], ";", 
    RowBox[{"IabList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"potential", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Delta]"}], "}"}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", 
          RowBox[{"4", " ", 
           SuperscriptBox["x", "2"]}]]}], "-", "x", "-", 
        SuperscriptBox["\[Delta]", "2"]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ProgressIndicator", "[", 
    RowBox[{"Dynamic", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "-", "\[Delta]begining"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Delta]end", "-", "\[Delta]begining"}], ")"}]}], "]"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Delta]", "=", "\[Delta]begining"}], ",", 
      RowBox[{"\[Delta]", "<", "\[Delta]end"}], ",", 
      RowBox[{"\[Delta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Delta]end", "-", "\[Delta]begining"}], ")"}], "/", 
        "\[Delta]nstep"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"zeros", "=", 
        RowBox[{
         RowBox[{"NSolve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"potential", "[", 
             RowBox[{"z", ",", "\[Delta]"}], "]"}], "\[Equal]", "0"}], ",", 
           "z"}], "]"}], "//", "Quiet"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"z", "/.", 
         RowBox[{
         "zeros", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"z", "/.", 
         RowBox[{
         "zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", 
          RowBox[{"potential", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"line", "[", 
              RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], ",", 
            "\[Delta]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chunks", "=", 
        RowBox[{"sqrt", "[", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", 
            RowBox[{"1", "-", 
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sqrtf", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ab", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", "b"}], ")"}], 
           RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"IabList", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "ab"}], "}"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IabFunc", "=", 
     RowBox[{"Interpolation", "[", "IabList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Delta]", ",", "a", ",", "b", ",", "ab", ",", "f", ",", "chunks", ",", 
      "sqrtf", ",", "potential", ",", "zeros"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6749155652975683`*^9, 3.67491569089636*^9}, {
  3.6749157225900087`*^9, 3.674915827871497*^9}, {3.674915868810689*^9, 
  3.67491594727135*^9}, {3.674916315018353*^9, 3.6749163227808104`*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Delta] - \
$CellContext`\[Delta]begining)/($CellContext`\[Delta]end - $CellContext`\
\[Delta]begining)]]], "Output",
 CellChangeTimes->{{3.674915942163357*^9, 3.6749159492371073`*^9}, 
   3.674950213937621*^9, 3.6750581775822887`*^9, 3.6756109691934834`*^9, 
   3.6813598487675257`*^9, 3.681368397777751*^9, 3.681452537606853*^9, 
   3.681556170869933*^9, 3.681556419877152*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Constructing", " ", "ac", " ", "function", " ", "for", " ", "\[Beta]"}], 
    "\[Equal]", "0"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]begining", "=", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"\[Delta]end", "=", "2"}], ";", 
    RowBox[{"\[Delta]nstep", "=", "300"}], ";", 
    RowBox[{"IacList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"potential", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Delta]"}], "}"}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", 
          RowBox[{"4", " ", 
           SuperscriptBox["x", "2"]}]]}], "-", "x", "-", 
        SuperscriptBox["\[Delta]", "2"]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ProgressIndicator", "[", 
    RowBox[{"Dynamic", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "-", "\[Delta]begining"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Delta]end", "-", "\[Delta]begining"}], ")"}]}], "]"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Delta]", "=", "\[Delta]begining"}], ",", 
      RowBox[{"\[Delta]", "<", "\[Delta]end"}], ",", 
      RowBox[{"\[Delta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Delta]end", "-", "\[Delta]begining"}], ")"}], "/", 
        "\[Delta]nstep"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"zeros", "=", 
        RowBox[{
         RowBox[{"NSolve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"potential", "[", 
             RowBox[{"z", ",", "\[Delta]"}], "]"}], "\[Equal]", "0"}], ",", 
           "z"}], "]"}], "//", "Quiet"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"z", "/.", 
         RowBox[{
         "zeros", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{"z", "/.", 
         RowBox[{
         "zeros", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", 
          RowBox[{"potential", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"line", "[", 
              RowBox[{"a", ",", "c"}], "]"}], "[", "t", "]"}], ",", 
            "\[Delta]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chunks", "=", 
        RowBox[{"sqrt", "[", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", 
            RowBox[{"1", "-", 
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sqrtf", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ac", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", "c"}], ")"}], 
           RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"IacList", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "ac"}], "}"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IacFunc", "=", 
     RowBox[{"Interpolation", "[", "IacList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Delta]", ",", "a", ",", "c", ",", "ac", ",", "f", ",", "chunks", ",", 
      "sqrtf", ",", "potential", ",", "zeros"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6813681695319843`*^9, 3.681368233694284*^9}, {
  3.681368334462036*^9, 3.681368394028371*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Delta] - \
$CellContext`\[Delta]begining)/($CellContext`\[Delta]end - $CellContext`\
\[Delta]begining)]]], "Output",
 CellChangeTimes->{3.6813683618346357`*^9, 3.6813684267965317`*^9, 
  3.681460825684366*^9, 3.681556439351252*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dissipation", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"begining", "=", 
   RowBox[{"-", "2"}]}], ";", 
  RowBox[{"end", "=", "2"}], ";", 
  RowBox[{"nstep", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProgressIndicator", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Delta]", "-", "begining"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"end", "-", "begining"}], ")"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"\[Delta]", "=", "begining"}], ",", 
     RowBox[{"\[Delta]", "\[LessEqual]", "end"}], ",", 
     RowBox[{"\[Delta]", "+=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"end", "-", "begining"}], ")"}], "/", "nstep"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"IabFunc", "[", "\[Delta]", "]"}]}]], " ", 
           SubscriptBox["s", "1"]}], "+", 
          SubscriptBox["s", "2"]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "1"], "\[Rule]", 
            RowBox[{"2", "\[ImaginaryI]", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", 
               RowBox[{"IabFunc", "[", "0", "]"}]}]]}]}], ",", 
           RowBox[{
            SubscriptBox["s", "2"], "\[Rule]", 
            RowBox[{"-", "\[ImaginaryI]"}]}]}], "}"}]}], "//", "Quiet"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Dissipation", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Dissipation", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", 
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "R", "]"}], "2"]}]}], "}"}]}], "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"R", ",", "\[Delta]"}], 
    RowBox[{"(*", 
     RowBox[{
     ",", "a", ",", "b", ",", "ab", ",", "ab0", ",", "f", ",", "chunks", ",", 
      "sqrtf", ",", "potential", ",", "zeros"}], "*)"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Dissipation", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Interpolation", "[", "Dissipation", "]"}], "[", "x", "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<\[Delta]\>\"", ",", 
        RowBox[{"FontSize", "\[Rule]", "40"}], ",", "Black"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<A\>\"", ",", 
        RowBox[{"FontSize", "\[Rule]", "40"}], ",", "Black"}], "]"}]}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", 
      RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvaCwuu5rwmvHoA/t9SCaxU27BURLW+9vBdGdS/cu
+gakL31QWQmiPeXV1oHoU1q8G0D0lQCbgIjE145V6nvB9DQfs2gQva/sLJg+
4+/dDaIXKmyeAqJF5FvcMoE0k6WlO4je9vy7D4iu0rnpD6LT/zsXgOg3D31L
QfS5roVs84D076/1QiBarU/AYSGQPs8i4AGirz35/nx10mvHmSmqr0B0atKn
TyB6jsT7nyA6ySCHcXHua8cfXYZsIFqgKVQcREtsuwumrdR4dq8A0guuLd0H
ouOyXp4D0VdflV8G0YJ/TR6C6NCNso9A9JNz2c9A9HstmVcgOuieh8xRIP1i
z1pZEA0A1OOxQw==
  "]],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Delta] - $CellContext`begining)/($CellContext`end - \
$CellContext`begining)]]], "Output",
 CellChangeTimes->{
  3.674713138104527*^9, 3.674715475158476*^9, 3.6747155218452253`*^9, 
   3.674737784218617*^9, 3.674836936199213*^9, 3.6748989300309973`*^9, 
   3.6749042274923477`*^9, 3.674904519121258*^9, 3.674915462486817*^9, {
   3.674915988059938*^9, 3.674916007605633*^9}, 3.6749502037708693`*^9, {
   3.674950239986745*^9, 3.6749502713613777`*^9}, 3.674950571009899*^9, {
   3.675058265848441*^9, 3.675058324706602*^9}, {3.67506488867828*^9, 
   3.675064897869624*^9}, {3.675611046456299*^9, 3.675611088783877*^9}, {
   3.6813599148946466`*^9, 3.6813599222315197`*^9}, {3.681360050324432*^9, 
   3.6813600637204323`*^9}, 3.681371641653447*^9, 3.6813719264920473`*^9, {
   3.681371958597423*^9, 3.681371985354973*^9}, 3.681429742457632*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], Thickness[0.005], Opacity[1.], 
    LineBox[CompressedData["
1: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
q/8DtXaDPQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     StyleBox["\"\[Delta]\"", FontSize -> 40, 
      GrayLevel[0], StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"A\"", FontSize -> 40, 
      GrayLevel[0], StripOnInput -> False], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->{FontSize -> 20},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {4.796748405582786*^-7, 0.9142419681540419}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.674713138104527*^9, 3.674715475158476*^9, 3.6747155218452253`*^9, 
   3.674737784218617*^9, 3.674836936199213*^9, 3.6748989300309973`*^9, 
   3.6749042274923477`*^9, 3.674904519121258*^9, 3.674915462486817*^9, {
   3.674915988059938*^9, 3.674916007605633*^9}, 3.6749502037708693`*^9, {
   3.674950239986745*^9, 3.6749502713613777`*^9}, 3.674950571009899*^9, {
   3.675058265848441*^9, 3.675058324706602*^9}, {3.67506488867828*^9, 
   3.675064897869624*^9}, {3.675611046456299*^9, 3.675611088783877*^9}, {
   3.6813599148946466`*^9, 3.6813599222315197`*^9}, {3.681360050324432*^9, 
   3.6813600637204323`*^9}, 3.681371641653447*^9, 3.6813719264920473`*^9, {
   3.681371958597423*^9, 3.681371985354973*^9}, 3.681429742872517*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "0.5"}], ";", 
  RowBox[{"\[Delta]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "5"], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox["\[Beta]", "4"], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "6"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "6"], " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "-", 
       
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StokesGraph", "[", 
  RowBox[{"potential", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Beta]", ",", "\[Delta]", ",", "potential"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.674544170356062*^9, 3.6745442692012367`*^9}, {
   3.6745443349557533`*^9, 3.6745443350649533`*^9}, {3.6745447786899548`*^9, 
   3.6745447807959585`*^9}, {3.674545450795561*^9, 3.6745454509575615`*^9}, {
   3.6745458663811283`*^9, 3.674545890769972*^9}, {3.674546137058609*^9, 
   3.674546164769258*^9}, {3.6745472934476814`*^9, 3.674547294648883*^9}, 
   3.6745555859959393`*^9, {3.6745556737824965`*^9, 3.674555693263935*^9}, {
   3.674555730444801*^9, 3.6745557309752016`*^9}, {3.674555761665456*^9, 
   3.674555762305057*^9}, {3.674556587797*^9, 3.6745565882494*^9}, {
   3.6745569310320096`*^9, 3.6745569361352186`*^9}, {3.6745573398607464`*^9, 
   3.6745573424191513`*^9}, {3.6745642986633368`*^9, 
   3.6745643009721413`*^9}, {3.6745762939443274`*^9, 
   3.6745763379298134`*^9}, {3.6745764096165433`*^9, 
   3.6745764160633545`*^9}, {3.674712814948949*^9, 3.674712829670068*^9}, 
   3.67489907248208*^9, 3.67489913476031*^9, {3.674900022612542*^9, 
   3.674900058680545*^9}, {3.674900929485424*^9, 3.6749009829927893`*^9}, {
   3.674901107401928*^9, 3.674901121059504*^9}, {3.674903500588253*^9, 
   3.6749035006990623`*^9}, {3.674903556176386*^9, 3.674903556288048*^9}, {
   3.674903615343217*^9, 3.674903633580159*^9}, {3.6749037100622063`*^9, 
   3.6749037101731367`*^9}, {3.674903781918785*^9, 3.674903850805203*^9}, 
   3.674903884039955*^9, {3.67490399369001*^9, 3.674903997129931*^9}, {
   3.674904439256669*^9, 3.674904441335742*^9}, {3.674904486090357*^9, 
   3.67490448738435*^9}, {3.674905076330832*^9, 3.674905154036186*^9}, {
   3.6749051972049103`*^9, 3.6749052767574177`*^9}, {3.674914348814907*^9, 
   3.674914363495038*^9}, {3.674951415422606*^9, 3.674951435098222*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzkvHlUzW37N1yhEMpQSEikUCRTEgcZkyFpMqWEIqmoJKlQMiSkSCMVQpoV
Go5SGjSoNM/tdvO052o3ve3rfe/rXevsWcu61/3c6/7dz3P9c63POvZ5fs/j
MxzndyeWnLHQOifAx8dHmcHHx/u/zet169yOCqRaBijIVtQMIYHB+0CZ376P
I/CPOoFBuEVhOu/zQR56Nbt+cLHnRKINr65C69qzewzveyYjyqunSiifjP7U
j4y4tYq8+hVR0T4e7vl9YsFf9dvdaouec/Da9ovavHrzLZU0Hj7yVns5r54n
/0rzoSMLrds+GfPq0xpHbXh4JaVanFe3fWSZ13eegR+vhbry6sbO1+z6x3Cf
sP9fdQXPLs+zh2ko/1rJglffkUqdfW4MH/loNoFXFxESLQy26MJWu9gTvLpe
YFZwyBg+eAEm8eotOesCHLa3IYu5SpNXp4neSrk5hr3vC0/m1eObntzWnUlF
11lqG3j1UK94C70xTNUpE+LVxczzNhpm1OPxpq5bvPon0WD3M2NYW9lyNa/u
aXiOM+t8OeZoj2rx6o6zGJJiY7jV8oIwry6a0tb7UKQALf21/uJPO3TmFM8x
PHFU6q/z3UjenUN98w0lX559xqtfMj9oTxvDy0foI3fH6lozk2uVD/rBzLiF
D3j1F1XH74uM4cpRz1W89WaB609tX54By2cP6fPqpsu07m0Zw+YJNgq8+nC/
EM3MqhjS9PW28eoTZtxdxMNuGbMFeXX3GUM+X35VQUPz00e8ukGR3BUenjRJ
l49X9zgunyLwohGClUPdefWqzGAdHk46T/mLf8kKc7cVmc2Q/Oz1Gl5dtdDH
SG4Mv5JaO5VXP9FlNkWT3Q6t1DYrXh1V/ZQOj+Hp3kH8vLqyt94222U9MMDc
58Crr3j7zsJmDPeaqS/l1V3ZBlcLVtBhkwLlGq/+fJSvIH8M73M7vYxXH/0g
ZWO0gwlOrxb8df7HvuFKPHzS8//lz7x+/T2WPhuWvXzxlz++pn6S42Ev50mz
eOtXli2tdLPsg98fNirz6tnzKX48nG329q/+La8pNUjcGwCpww3nefWbYnMe
8LDSb5zCq8e6XNwXETQIegMLLf/KR8GStE9j+PUS6vPkvfypOkG/i8vH8le/
tzCEh2/JdXPGMIgsCG1jbuFLlVoctJCXz7o3BUqsMRwonzWJl09bm4YL2oYj
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
fjM3x/8AFY5s/4rhVnyp+ulvknZhC3wr0NM7/IIvNYrPoOv7mrHvT2ZJUouR
L7Xw1Hb9uYGdIDavdYFkO19qfNUBPrWpPfDBqu5J4Hr+1F2T1wq/FKVDXOqM
xLJD/Kkvq9c9sksZ81H9z982r/hT7fcuTZuYw4RJ+pQmpWv8qbSfk0SnZTDG
fZ6sk+tJfsnnZ9lCjpDXGJ95e7dnKubhW/q0CXPjR/FjyZp3U/b9RtXsyzfv
NY6i83k96wNXK3DnTSXJ1cJ8qeF+vm6rfGtRpFM10nQFXyr1a46mgkEjapYs
ePRsP1+qcp95WmZXE07a/OtzxGW+1OJJ38Qodi24Zr7eim/efKnRzZ8OOgm0
j73fmA6rjPH14VPNpx/3O/FcYcLe+A6+VC/rSvuaGT3oeW/3ZPl5/KkbF2pV
Ne6joa3jTPDfy5/q6xT4aet9OpL+mPbGnWF+mT/1pHaFo/1dBvbueee44Dl/
arnlrY5ld5h/++3QgaHJGtNYSPqN1IvUk9Sb9APpF9JPpN9IP5J+Jf1M+n1c
Hoj8kfkk8/unfP63++Of9YNdv6+LlenY98i3S3SvyObApzwF60ed/bCFeXN3
yo4cWKiTpPXucj+UUfC9zbEc6F9fbOdh3geTTpi0zb+TA9W5stLmlzgQnNV4
zMwvBxrC7eOWynPg5Sb5wtWBORDTvEasaux73rtL5wK1gnLAmI/ytKCRDZw9
zWKn/heY/Dy5X1WZ8xI+HS48HFYSPtGRDVWbbw/c3zEISjYLLtmEZUO0vOmc
2auHoPDrxbSl57Ohn2+3hK/EMCxqpTF6l2SPOy/Zzz/mf0SmQbGJSPa4/kl+
SP7+1fORzzffqaj97m4S5oS9ORh6oR7OZ1+Rnh/zGbdtuhHx0a4eFLRkzmYP
xWKQqHd+tn09+H10bjLeG4Ofliqe2XejHgJX+pnFpUSj4Ce8bDaGV35Y+dLb
9juGz6TupArWQ8Szlh26zzKx0+Q3n/PVOpgfbn5zuXMBqvR81aC21wBzDVWk
sKIYt2Wv4f/4pgos7p1lHhwuxVCbBYsZmeUwGh2+Z+vkOkzLeko3q/4O7ubU
xtsedZgp2z1f6VXKuOd/CPy+dLVuBcbD6FUvegkcjnKabHKsCidEKQjOrC2C
0Ee+a64J16Bhvpep0+p86BGcJVtrWYuZQoyvtBOZ4/oj+yf5Ifn7393/v9rP
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
ir25UxqZ05joq3TK5MIvKpbOnu99PpKJ7IP38lnKNAxbdDj7x34WUooXz4t1
peH5jh82HAYL6cGG8L6HhpJX9sVIvmCP44/kl+Sf1MfJ22Cg7ggdc4y/yxwe
e+/V37XPcF4WHR+b/XL2ncrFHekGVw+tZeCupy7MqgwuXhY6pOkTwECJ/IET
8+zG/ClqklomxsTWFUM5Rhv4uKf6LH/OPSZS3ket8WHwsemQA5NSzvzjT9J/
pD9J//7Nj//p+v2/zf/LrIk79vsw4OgDieBjP/j40SXraPlEJiSmbn4a4shH
yrwplYm3mGB+/eHN7wf4f+73+R/UZIwK2Rj89uIaj5XD8KBY3fN3PRt7VdlV
nruGoPpH2OgKRQ5qJEXtvF5NB5kpvToKCwdxU3gWLWIRHVjs3ydW2g0iZ6f3
5WVC9D+/RyevJ+uT5+cZ7u9J3cuCI/NCbxzp4+Fw/NsL/OVs8HB3Ca15ysMj
QNM/M4kD4qUqktpKPKzr2/V2qJkDVW3eCe6FXHRO+2CUlcqF/qwET4oFF01/
TLamBPJgr6VfUOVCLp5suDqh5yEfWIwt3aW5HHRcVsvSOTsIHRB0Ic56/Jrc
T9YjzyPxkHjJfsh+SX1I/Uh9/6ke12+rXunyqEeNMNOB/YZj72OvB6kTB+ux
wl4zo+xyC6r4+fQ7XmnAudp75m9yaMb3xlumrn75Gz1eWB6ZodiIvow5bfEH
GpEfe/3Wu+e1Y88btrFJh+rxgsUSpe71bVjwOODSjb31Y7nvqDRY1D5uP1mP
PI/EQ+L923l7Tv2a3FlXhs95q5uDi5rwwjqDxZ1LKlC5q+2uzsom3F6/MqVj
byWGB/mkOd5rxPv2pz7cWVKD7IJPt+yG6rBH4mnqoEkdXlui/25CUBX2acSI
eks2oO6eY94zxMpw5siD2uHbpRgt/P6j7a5mPLm629yMXYy7XjxbcO5zM6as
7esU/1KAggUyaw7sbBl3PVmfPJ/ER+In+/uneFgztGfMlkPYfussfY4xBeOX
PYizep0G60pkcrc7/kDtJVteBIVmgmF9hEjOpSQsue9dH5mbC0dMiktti+Mx
II1qXCBSCC8kD3zb/TMGhT4u2fzcoBTePVC2+5wXjnuXr2hq4yVA1bfsPqvS
VEw5f0K4yysKfu2z1fzKThu3n6xHnkfiIfGS/fzt/P8DAqqYcg==
       
       "], {{{}, {}, {}, {}, {}}, {{}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{138, 139, 140, 157, 158, 159, 160, 161, 162, 163, 164, 165,
            166, 167, 168, 169, 170, 187, 188, 189, 190, 191, 192, 193, 194, 
           195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 
           208, 209, 210, 211, 212, 213, 214, 215, 216}]}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
            261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 
           274, 275, 276, 277, 278, 279, 280}]}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 
           304}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{363, 364, 365, 370, 371, 372, 373, 374, 388, 389, 390, 391,
            392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 
           405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 
           418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 
           431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 
           444, 445, 446, 447, 448, 449, 450}], 
          LineBox[{454, 455, 456, 475, 476, 489, 490, 491, 492, 493, 494, 495,
            496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 
           509, 510, 511, 512, 513, 514, 515, 516}], 
          LineBox[{558, 559, 560, 567, 568, 569, 570, 571, 572, 589, 590, 591,
            592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 
           605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 
           618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 
           631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642}], 
          LineBox[{673, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
            689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 
           702, 703, 704, 705, 706, 707, 708, 709, 710}], 
          LineBox[{716, 732, 733, 740, 741, 754, 755, 756, 757, 766, 767, 768,
            769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 
           782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 
           795, 796, 797, 798, 799, 800, 801, 802}], 
          LineBox[{808, 809, 810, 831, 832, 834, 835, 836, 845, 846, 847, 848,
            849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 
           862, 863, 864, 865, 866, 867, 868, 869, 870}], 
          LineBox[{893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
            905, 906, 907, 908, 909, 910, 911, 912, 913, 914}], 
          LineBox[{922, 939, 940, 941, 962, 975, 976, 977, 978, 979, 980, 981,
            982, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 
           1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 
           1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
           1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 
           1036, 1037, 1038, 1039, 1040, 1041, 1042}], 
          LineBox[{1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
            1067, 1068, 1069, 1070}], 
          LineBox[{1078, 1101, 1102, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
            1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 
           1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 
           1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152}], 
          LineBox[{1156, 1157, 1158, 1178, 1189, 1190, 1191, 1192, 1193, 1194,
            1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 
           1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216}],
           LineBox[{1244, 1245, 1246, 1263, 1264, 1279, 1280, 1281, 1282, 
           1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 
           1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 
           1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 
           1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 
           1327, 1328, 1329, 1330}], 
          LineBox[{1334, 1335, 1336, 1341, 1347, 1348, 1349, 1350, 1351, 1360,
            1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370}], 
          LineBox[{1376, 1397, 1398, 1399, 1400, 1413, 1414, 1415, 1416, 1417,
            1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 
           1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 
           1440, 1441, 1442, 1443, 1444}], 
          LineBox[{1448, 1449, 1450, 1465, 1466, 1469, 1470, 1471, 1472, 1473,
            1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482}], 
          LineBox[{1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
            1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 
           1529, 1530, 1531, 1532}], 
          LineBox[{1538, 1539, 1540, 1561, 1562, 1582, 1583, 1584, 1585, 1586,
            1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 
           1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 
           1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 
           1620}], LineBox[{1626, 1643, 1644, 1645, 1649, 1662, 1666, 1667, 
           1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 
           1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 
           1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698}], 
          LineBox[{1707, 1708, 1709, 1714, 1715, 1717, 1718, 1719, 1720, 1721,
            1722, 1723, 1724}], 
          LineBox[{1737, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
            1751, 1752, 1753, 1754, 1755, 1756}], 
          LineBox[{1773, 1776, 1777, 1778, 1779, 1794, 1795, 1804, 1805, 1806,
            1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 
           1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 
           1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836}], 
          LineBox[{1849, 1850, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
            1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872}], 
          LineBox[{1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
            1899, 1900, 1901, 1902, 1903, 1904}], 
          LineBox[{1910, 1911, 1926, 1933, 1934, 1948, 1949, 1950, 1951, 1952,
            1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 
           1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 
           1975, 1976, 1977, 1978, 1979, 1980}], 
          LineBox[{1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
            2008, 2009, 2010, 2011, 2012, 2013, 2014}], 
          LineBox[{2018, 2019, 2020, 2026, 2027, 2028, 2029, 2030}], 
          LineBox[{2036, 2050, 2051, 2058, 2059, 2072, 2077, 2078, 2079, 2080,
            2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 
           2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 
           2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110}], 
          LineBox[{2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
            2138, 2139, 2140, 2141, 2142, 2143, 2144}], 
          LineBox[{2150, 2158, 2159, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
            2169, 2170, 2171, 2172}], 
          LineBox[{2199, 2200, 2201, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
            2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 
           2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234}], 
          LineBox[{2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252}], 
          LineBox[{2261, 2262, 2283, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
            2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 
           2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314}], 
          LineBox[{2318, 2319, 2320, 2344, 2345, 2346, 2350, 2351, 2352, 2353,
            2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 
           2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372}], 
          LineBox[{2377, 2378, 2379, 2386, 2387, 2392, 2393, 2394, 2395, 2396,
            2397, 2398, 2399, 2400}], 
          LineBox[{2409, 2410, 2411, 2412, 2413, 2426, 2429, 2430, 2431, 2432,
            2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 
           2444}], LineBox[{2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 
           2468, 2469, 2470, 2471, 2472, 2473, 2474}], 
          LineBox[{2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492}], 
          LineBox[{2504, 2505, 2506, 2511, 2514, 2515, 2516, 2517, 2518, 2519,
            2520, 2521, 2522, 2523, 2524, 2525, 2526}], 
          LineBox[{2539, 2540, 2541, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
            2552, 2553, 2554, 2555, 2556}], 
          LineBox[{2584, 2585, 2586, 2600, 2601, 2610, 2611, 2612, 2613, 2614,
            2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 
           2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 
           2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 
           2648, 2649, 2650, 2651, 2652}], 
          LineBox[{2658, 2679, 2680, 2681, 2682, 2703, 2704, 2705, 2722, 2723,
            2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 
           2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 
           2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 
           2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 
           2768, 2769, 2770, 2771, 2772, 2773, 2774}], 
          LineBox[{2780, 2781, 2795, 2796, 2797, 2798, 2799, 2800, 2814, 2815,
            2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 
           2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836}], 
          LineBox[{2842, 2843, 2844, 2865, 2866, 2867, 2868, 2869, 2883, 2884,
            2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 
           2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 
           2907, 2908, 2909, 2910, 2911, 2912}], 
          LineBox[{2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930}], 
          LineBox[{2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952,
            2953, 2954}], 
          LineBox[{2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970}], 
          LineBox[{2974, 2975, 2976, 2983, 2984, 2987, 2988, 2989, 2990, 2991,
            2992}], 
          LineBox[{2998, 2999, 3000, 3032, 3033, 3034, 3035, 3036, 3037, 3038,
            3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 
           3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 
           3061, 3062, 3063, 3064}], 
          LineBox[{3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3112,
            3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 
           3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 
           3135, 3136, 3137, 3138, 3139, 3140}], 
          LineBox[{3146, 3169, 3170, 3177, 3178, 3196, 3197, 3198, 3199, 3206,
            3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 
           3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 
           3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 
           3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 
           3251, 3252}], 
          LineBox[{3256, 3257, 3258, 3266, 3267, 3268, 3269, 3270, 3271, 
           3272}], LineBox[{3276, 3277, 3278, 3286, 3287, 3288, 3289, 3290, 
           3291, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 
           3318, 3319, 3320, 3321, 3322, 3323, 3324}], 
          LineBox[{3330, 3332, 3349, 3356, 3357, 3363, 3364, 3365, 3366, 3367,
            3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 
           3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 
           3390}], LineBox[{3396, 3401, 3402, 3409, 3410, 3423, 3424, 3425, 
           3426, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 
           3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 
           3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 
           3475, 3476}], LineBox[{3480, 3481, 3482}], 
          LineBox[{3488, 3489, 3490, 3517, 3518, 3531, 3532, 3533, 3534, 3543,
            3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 
           3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 
           3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 
           3577, 3578, 3579, 3580, 3581, 3582, 3583, 3584}], 
          LineBox[{3588, 3589, 3590, 3609, 3610, 3623, 3624, 3625, 3632, 3633,
            3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 
           3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 
           3656, 3657, 3658, 3659, 3660, 3661, 3662}], 
          LineBox[{3669, 3670, 3679, 3680, 3681, 3694, 3695, 3696, 3697, 3705,
            3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 
           3717, 3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 
           3728}], LineBox[{3732, 3733, 3734, 3749, 3750, 3751, 3752, 3753, 
           3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762}], 
          LineBox[{3770, 3771, 3772, 3773, 3774, 3775, 3776}], 
          LineBox[{3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794}], 
          LineBox[{3803, 3804, 3805, 3806, 3807, 3808, 3809, 
           3810}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.2090629622270728`, 0.}, {0.8350950368936221, 
         0.5272012520796961}, {
         0.8350950368936221, -0.5272012520796961}, {-0.3634026589311146, 
         0.7221948220318323}, {-0.3634026589311146, -0.7221948220318323}, {
         0.15043374943398566`, 0.}, {-0.13475554313192517`, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.5, 0.}, {-0.5, 0.}, {0.5, 0.}, {0.5, 0.}, {0., 0.}, {0.,
          0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.290785217297691, 
     1.9168172919642406`}, {-1.8039170771024509`, 1.8039170771024509`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzsvHdQlFnX9gsGQEwkAwpKMACCIqggAsuICiIKCAJixIgKks0ICCJgwIQo
oKiAYgIxA6tFJOecJefQie6mSV/3nPP6VW3qnKmp533OU3W+d/6Zumb13vde
6/pdu29GZuQPOpgeHicgIBA3TUCA/3fXp5qafmbjKI5haosraoaQ0HBvW9mj
LbEj8F91QsPkVrWp/M9H3LCs2fiLi7023135dR1qt8Emnt5yZ6EYv06Zo70n
7g0H6QnL1fl1JzExNl/3FtvM/avu1bN+3n0Wuq89Yc6vt1zR+cHXO6PMF/Hr
OapPdgRcYqJL+5tD/PqUhlFXvlZprJ7Jr7sFOeawj9Ax1v35VX79kKe7B4en
2ZMf/1VXC+4OtjOhoupTDQd+fR2lWfIwT++MtR/Pr08XFiuIdOjGNo8PNvy6
ZXh65DOeNj4OE/n11kzNsAtr25HJWLKDX6eKXUm+yNP3/CeL8Oufmm55WYg3
41WJ9Sv59ed3PzlY8nTzrjJhfn3GqZxV+1N/o3VT9xV+/Y1YZOBBnjbXdlzK
rwfvP8ySOFKOmeajpvz6JQm6zAyebnM8PplfF0tu7wuYnoeOj03/mp/5c/FJ
wTw9YVTur/OdT9qU2fziG8o8tLvDr588ZXyOytOLRmgjvry6qXhSrbbxIxBP
kL3Orz+osvafztOVo8FL+Ovtw1fYrl2UCoskh3bz68cWmF5bw9OnPruq8evD
HGGq/Zki+LHbUp9fHz/Ndx5f+6VKCvHrgdOGQr7kV0F9y+0gfn1voZITX0+c
aCHAr9+wVk0e96ABIrWfB/LrVWmRu/g68UjjX/OXqTjlp5zWAkl3ni7j13UL
Qg4o8fQTueWi/LpNt/2kHf0d0NbcfoZfR91HGiY8PfVehCC/rn3PUt9tQS8M
MLZc4NeVo6IdXHm6z36rIr9+tX+vc54yDbTUGt359fujAnm5PL3Fb98Cfn30
lZzrgXUMuPxk7l/nvxn6WoOv9wT/X/M79XvFNebufljw8MFffHylvFHi67ue
EyX461XKFCv9HNlQ/GqVNr+eId34iK8z7KP+6t/RXaN+zrUBkDOpP8KvX5wh
dZ2vNYpxEr/+wefElrcRg2A5IOv4Vz7y5H+84emn8s33kzYLUnZFFBeV8/L3
e3PBM76+otTD4mmYPvd5O2ONAEVufoQsP591L/I0mDwdrpo+kZ9PN9f64+b7
RzBt7+dh/vpM6Q/iu3g64unhLP56DPjh+GPLEH4/GP6dX1+2LPINX1/3nCHC
X++z0nbh0uVcVFmkM5W/f7CcVhhfOwtrtfLX276/qvpImoPT/IvS+OtPP5m6
ja9TBK1z+HWNCpsB4XEsPNRbMZ6//rvhp80iPF04kyHE39/T6Gi2SycDbxac
y+Ovz7q8WtiVp1dtWVbOX78/V+ZoQxENJW5mTuKvl7tsx+HrJaUd8/jrL7j9
ePvYrQ+nUC/k89fPjAu4GsbTwiu+ifHr1zMamK6bu3B/I7eMXz9Y/FjUnacX
BeyX5Nc13OeP2zG7DU/abJvD31/Kx1lgJ0+PP7tlOr8eEsa8pdzRiBuWFwvy
61M+LTylwtPmOZQk/vm0vpl6THSpxZNfev+av79E/g9hnr559+0s/vrnJ23u
fZ1RijOqllfxn+93bdehbzy9M3FkBr9+rXhdTcXpTPS566/IXx9pMuldDU9H
eMj+9fxnUQtHLtnFYRxnCr9fXNZy3ekqT8dsZ/LnBbt/z5SOk3oPLW21FP7+
gQ4+Na94+uWgAY1fT5WxCqanZYBHnCWdX8+N+rqLxtPnntf+5f+3F93v036U
wKnv4tP4+3PXiWmm8nTaimD8y9/JZ7Ik5GrBvnrfX/ORY2y3FOfpkIs7+TzC
r9A7OurYCPtrjf/icz9zeGgpT+ssV07k19sOH35s0dsKez/WtvPrlECn6F08
fZ/G/Kv/+9RNERdku+D25Lm9/HrxiMmT8zzdt1+hkb8+fuv6Zc+29cHWuaL8
82CEn/6uSJ7OGar8q/89KnW05iQaZCwtFeefT0P9YSBfw09dNr/+kZte617K
gKk5lVL8um1L6lO+nnMp4S9/ult3r5vc0w/tCeby/LraHevvojzd6KX6V35M
nPI1wydw4GnZYf55MW9DbEMYTy8/WJHN398inHtxuQwX6nWDF/HrE0Wvz+Tr
3PHPOv+af8nxplTNIVjq+r2Zf36DdWHGfP2o8eBf+ahLNxXebcTL+94Jdfx6
2O6KcEuePuXV89f5Dsx/eNR0NwMF/u+/ZpqK6Uh/7YSFrHHKpXX1QGi8WFex
enhdOWYzkndoy7QBobHJeMKP4+t+wn/t53NT2EkvDP/o9d5CB6M/f/mjexSF
L1eu/d/aZdtFiz1rP/3RL1sil7udTvij6y5lTLn1OP6PFkiaJxZtZ/1Hs65t
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
bOw5qUaPiKzEVK5nRsL1dBRYslFMtKsED+z45TbhcjJuj9YyjYn9gbUrtSw2
xX/Dwhn6Kw1qvo6Z3zT9LR43JqfikXvrPqbKFuCOlx7KtEoKOmrGb1bwTRsz
f9If0j/SX9J/kg+SH5Ivkj+ST5Jfkm+SfzJvZB7JvJL5I/NJ5p28D8j74l/l
9T/N49/l5Z/eT/+U77/j9e/4z52kpf99agomFf46eWsS731o7eeqW6b8/ZRr
1N/QMHTB23qt+2k47+KFsA87aMjpnW0duf4rnr73TG9RMx1DtB8nh/98jW6F
LH2LZAY+vRLpfFynCYWEzvUYRvHm2lgdnbkmG+uz10x9EUzFNW/8x9n/zkfd
2fcFc2L68InkpmKtzUUoNi6jJ3RpL3IHyp/PiC3B8GrPGruv3ZiyUTjlhn45
LijJEOrZ04WT39WwGhdUYc2cmBcs1U4sr9yWRbGoxd2bVA1hZQdKakYdsD9S
j0odB6/6XGlHNf2fBZ/zG7CgzKv5oXj7mPORdXI9uT/5fPJ85PnJ/sj+MzLD
ymnSETgrz1a6fz0T31/aKeSR64S0wwPwMp2JKrlNEy69vgcTHmbGO23rR/O9
LbKF42Jgx9G8MzsL+/Hr3IyY8ffjoaxA+OImCxb2a3/Noyp9hfulriXbq1lY
LZQmoP4NIch1tsep/Wz8st49on7BT0h+33f0aQsbTUc0pF6fSAO79pP3hew5
uKZq2VLzN5nw/aIg6wuVg45lp3oqunMgxfGN7xe3AfQ4y1IKkyoAjx+OWyYO
D+DvB2VqunGFUO9gtCbCm4snDCyvbt1WDOzzevt8RQdx/P10ofyqkj9/nk7y
QPJF8kfy+Xf8/Z82T8axl+Ett2th1+WcDW/3NgDLSpa2Rr4G9r/yf34urx4+
mr3J8/9UBTcpXO51nXrIP75gefDhX7B/uvSs9QvTIVvNDZMoKfBL85u6xN0f
UJViFr85FOHtg2Vpl62/gH/QZYMvP8rhlcd8WmBTLezeGRyjyy6BhKLX2/QX
VIPGzWfWZ/cXQc3XIzeVVlaAstaZlAKhAvixe+ZaQ6lS+ORkn766JBvOnN2V
4JtRCDmTLX0cpDKgPfu8t1dcDhzz0pq8xLsemlY5ub0Kb4SCfjmtYe1G8GnW
S3ve3ASTBaav7bnVBBd01k34MtgMdzwLdsaWNsPOkpedHUqtY85L9kP2u2vJ
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
+r65c8jyTBA0ErqEaQPo/y4i44h+IbRbrQRr7MfcB9eD3dYXg0GO92aZBUPI
/2uX1vZtH+G4Cnd2+i8KKq4XOb5NJPGvn5Pnua/ZGf7rWx9+aHv7ypG7FDK3
R1t/9e/FnTdSx6N/lYGc3tIwIfsezBqsbfE1qwCz+azSLYrd6JrHfuJeRiXQ
folICtA7cf6Sp8kXmFWQUmI+X/x9B4r96lgN1GpYKjEn5bpJGUbL67M/oZaC
/gOHB263i/GMSkDOXJMiSH/6ObNMsx3XOhzcrh1bAzHsXr4TTa34oFPdQkiy
Fj5bflexdGrBse6V5m9MauFX3w/nJL5mnK0hRX0tXgt5JnkNjQaNaCfCvXLu
xxqYF8bbax48/Z7lcDy3Jrcaxn8v963kr0ERu6sa475VoPIj3XxzQiWWWLtm
HuKtBH7dfie7i4WYxnxj+CQje4Y/pH9/8+ffred/t15/85PUU7Zfs0pANA1X
Dq8LeZHdhTFWG9c8X/ID01aGZNg3d+LVzzXG3hk/UE/iQBU/swMjGnbqLduT
jqEhEaC3uQO1uzP8bPzTcZvT018TRu3ImL3E4n16Oo4qrK0rv9WGjevZ641+
pWPe2J5LS9XasPn83ej302uJOVrUn5vbMGR7tGtISjLev2n97WJ/N/ZcbE3f
FxaPtCnJOXG8vfi69YjRWGQE+pje11y1qx83L0xu/PHMF+OzbTQUjgzibW/N
Uu0l3mC8Vf5S8jfKjP3J88n6NGOCGoc+R8CDQKX98xOm3z/eHffLlEyCxh0q
d7cnDOP7wQq9h0cyQDk+11znOxUXVNksPyWWA54lFhtOx9JQ+eGu8fMTheDS
WFq6MYqOYxoNorwnSyByO/3SinDGDH1I/TS848vXXymDN5/3adZZM1F6r1PK
ffcK+PlcVDJUYARNvSwon+5XwWtnnsT64hE8/jT2Wv+zGnjVctqhwWMUr38r
LN3wsg5mCQjdOaEyhsorBYse+zWAqrL6qnWjYygi9O5Z44qmP+8LpJ+k3yQP
/9n+/Lv1/q/WUy8w3P2WYB+UX4r7seFWNz7pSnkqG9oL8YojZlsju/BywrWb
g1t64RzFRWBZUyc+Eo59JKLZDzW8e9ZdrejFLDnplg/WAzBSU7lSQ3IAvYKW
vIrh/Q1Lle+oR/IVoUhDa5v2xh5w1WEFyO7vQKfFTzbGU7qAN8/n3a36NjQ5
+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
FV+f5X+snfj3VSx2rAQfkTcxwo00mF/WERX9qgPW/3z31E+IDrO4j25c3NE1
43pyP/I8sh6y3s4l0nN1jelw3ZbLuyumB4KqQjbAUzp8dv8qePdGHxgt4Wk6
X0gHTw39zB6tAWDPNFauW8iAJUec1Xm5KZDft6bEx5gB7yJ2f4rsoUDDE6pk
+BsGHDnO88ArfwiUvpYZru9mgOrVn+1fvw5DvUa6OnU7Ew4OXEme7UmF5ZSg
wbjbTHBx92+NsaWBgpaRDmc5EyIon6RLdeigott4uGrTCPQqBQdbizNAakp5
hZzzCGy1vrfTZi5zhh+kX6SeYqGnXH7mjcDK38ujehqm60j0kNNcMwoZO6Xm
L4wdgaDtgdrfLo6CZFjBgXKPUVglEBa7LGsUjghSXRSPjkHayYgrJ1aNgc7T
QE/YyoLtmesrlFX/8DLDr//p+v679dq+rCNVf6IJejnSbQ6yp2INy2DxKacm
mDxgc89cMhUdjn063t/ZCJQ7vkoTOSnIGRrxvqejHvTuHA863J6Eh0/Eexeu
rIPVUW9PyXR+x7hHmSaF72rAMC9Va6lgNH7z13LXvtoMcu7dAVUpyehpcYXD
baAZPjkxMmtpiWi6lT1Y6GcL7Ao9ne/sGIdyWdc6Vtq2Qk2RjFKzQSTekxp5
51wz/Rx7c2l/2Ox3qHm5LOwusxXuv6nozhZ7MeM8sh6yXrIfsl9Sj393/Y+K
dd3bGU3ApnYzXc2fghmNOa4DZ5vggIXeRXcFCqKc3a0z2AjFCgtvHA8bxJxz
GvyKX8ogrNfeP2BuF3I93sc26FMGkxrHbxezOvHhQTuL205lEJg8LiHY2Ymm
1gnfVI+XgWyLw6RudSdWsIn0chwoA29nxePX8jqRKSaopDO7Huaxfglw/ezH
56eEJPfsqYG4hwtpixp78fngVbMjdyrhd083j8dYN46iaJYHloHRCkPzU8u7
kGNjk5/j3VJYJpfQx6HaiaCrsqAgtQSeJ+cJ1HzrwJ4jYw7HRovhpfYqzQ7R
DlTyT2a/I1cMS7ymfHgD2nHDm/GWd6dbIOV3QmJi5BC2DLNlvihtBTOJn1HL
cobxZnKME3t4DERfLu6JlyxCsRfpAw5ecbDqtl/0r8oS5DhuX2j+NQGelKRI
ariW47umAOErCYWgxJ61LVyhDV03PTy5TTYPHKOqHp0paMEA18vaxZ2/gN3o
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
/eYffve6kZ4ye2pBPR3W5LzrmWvVhecP8aaG7WbATe0+k93H2dIKS14GP/3e
PcMP0i/ST9ElVSI3oBNDFi5QORM9cz+yvothbxf+lKn88+9hZD+k3yQPtnY2
hV9/tSPH7fDV/buYoCB8X93VsA0NAm3n78hngsdWdY+e9hZ8ZaWzWO/oCJi9
8H494tKMFQV7xSWGRiD+gLPbR/4m5G0+ZVJ6bxS2/ho42XW2HmVef3ypvm4M
xv2Xnc+IqcGDU5yDriljULr29JKGWVVow+NucsOMNcMP0i/ST9JvkkeSV5Jn
kneSJ5I3kkeSV5JnkncyD2ReyHyT+Sfnwz/LI8nTf7ffJK/xuXLit7maoF/3
sL3co7cg7aZgdf9hI2zrOkcrfho0Y01eT9uW4BBeMABK9B1Ny+9UA0eXwOkF
dwdgm16PrSzUQt6XA6HlGgPwbvOORWoTdXDS7lC4fV0/uPK6JW2e/vpYqc/T
tKm6H24FSxoq72kG/eIszyXnB8EBN1V2+peD2LnTXBysQXDSYHYvCimecT25
H3mes6G5SbQiBWZlfOU1fZMHsSEX22XPUCDT7fTQnYoM0BE/uLT6wfRcne97
pXDkO+Sbtupd8KeAgA3jDsM4aEY/ZL9/q/dfPb/9lnm7wu4RFK7gmPujsQa/
iFYnTSWPYOmrPScCDGrwwuTxdn3ZUbRoehax/nc17nnAWOIow8RfJ753sp2p
Qxb/ea38jQy8HES7qLa2AbdWLg4SHmnD4Y3611ULu9HbJW79o/etyO+fZeFp
1oMU09W3HQxbkIdHa17jcA86f7O89XrNGIZxLfiwo7IKBWC9wjYeFu6cdXme
NqMSDfw/ci5lsnBxdWb7AYlK3Jg70K7aPo5b7kxKH7xagQqyHTf1yybw29PO
KLmqctyp5nS9LmMSS25pSgyol6Mk7X1VY8wU3jq2IuhKchlyC8dpSeqzpeUI
WcwvVS3Dp2t7Zodks6U9DdJ1mSopRSEH1U/ywJ6Wv1l7o/LZ0j/vY8qRSo5X
F5ciB9t8987ldOS7pCEU1NaIkW/Hfjzio2FqkhnvqvYmpJ+Vy347h4rzHn6h
hrc0Y0YhHpjHMYyvjix8Fj+dO+XfNLa34xQcSTaSsu9unX4PODF+qm8Qo5V3
L+XvbptxHlmPx0evXvvX/TgsPsAuObsD4Uygn/TeXhxsMbpStaoT+V5Opl+n
duFTkyReJ5EuLPAXFFP06UB0NzO+sKl7Rr+sSNFd5bzN6Lyl0XLQtxf1yza5
1b1qROajUPGh/X3Ip2fDzJKvx+MNQ9Yiq/tRZeGPlChqDYZUcs+unuhHoWSx
wbrcKtx777h1CGUAG4efhXgkVGAVy6VUnjKIhhOhpvKvSnFx1RJbs2wKck7k
89z3LsLkx+aHTd8MzfCD9Iv0k/Sb5IHkheSJ5I3km+SfzMff+P938/Gv+v/P
5vO/m49va7RZMt/HIeR3Ptvkeho8VL6olPB8HHZ7LksVCqOC6P4BtnL76XUP
x44V22euyevJ/dT2W9eV08ahzCZj1r1eGqh42rlTZSZgwY226tcx9D+/D580
f1m071bGP339/wPjwiQW
       
       "], {{{}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
            153}]}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{157, 158, 159, 181, 182, 184, 185, 186, 211, 212, 213, 214,
            215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 
           228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 
           241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251}], 
          LineBox[{255, 256, 257, 277, 278, 279, 307, 308, 309, 310, 311, 312,
            313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 
           326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 
           339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349}], 
          LineBox[{378, 379, 380, 381, 382, 391, 392, 393, 399, 400, 401, 402,
            403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 
           416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 
           429, 430, 431}], 
          LineBox[{460, 461, 462, 463, 464, 473, 474, 475, 481, 482, 483, 484,
            485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 
           498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 
           511, 512, 513}], 
          LineBox[{523, 524, 525, 538, 539, 541, 542, 543, 552, 553, 554, 555,
            556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 
           569, 570, 571, 572, 573}], 
          LineBox[{583, 584, 585, 598, 599, 601, 602, 603, 612, 613, 614, 615,
            616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 
           629, 630, 631, 632, 633}], 
          LineBox[{664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
            676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 
           689, 690, 691, 692, 693}], 
          LineBox[{745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
            757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 
           770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 
           783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795}], 
          LineBox[{806, 807, 808, 809, 810, 811, 812, 813, 814, 815}], 
          LineBox[{833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
            845, 846, 847, 848, 849}], 
          LineBox[{865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
            877, 878, 879}], 
          LineBox[{883, 884, 885, 890, 891, 900, 902, 903, 904, 905, 906, 907,
            908, 909, 910, 911, 928, 929, 930, 931, 932, 933, 934, 935, 936, 
           937, 938, 939, 940, 941, 942, 943}], 
          LineBox[{988, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 
           1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 
           1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
           1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 
           1034, 1035}], 
          LineBox[{1041, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1075,
            1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 
           1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095}], 
          LineBox[{1112, 1113, 1114, 1121, 1122, 1141, 1142, 1143, 1144, 1145,
            1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 
           1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 
           1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175}], 
          LineBox[{1198, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
            1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 
           1225, 1226, 1227, 1228, 1229, 1230, 1231}], 
          LineBox[{1249, 1250, 1251, 1258, 1269, 1270, 1271, 1272, 1273, 1274,
            1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 
           1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 
           1297}], LineBox[{1301, 1302, 1303, 1308, 1309, 1318, 1319, 1320, 
           1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1346, 1347, 
           1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 
           1359}], LineBox[{1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 
           1379, 1380, 1381}], 
          LineBox[{1394, 1421, 1422, 1431, 1432, 1441, 1446, 1447, 1448, 1449,
            1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 
           1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 
           1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 
           1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 
           1494, 1495, 1496, 1497}], 
          LineBox[{1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1551,
            1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 
           1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 
           1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 
           1585}], LineBox[{1591, 1592, 1593, 1598, 1599, 1600, 1629, 1630, 
           1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 
           1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 
           1653, 1654, 1655, 1656, 1657, 1658, 1659}], 
          LineBox[{1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
            1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697}], 
          LineBox[{1701, 1702, 1703, 1712, 1713, 1714, 1715, 1716, 1717, 1724,
            1725, 1726, 1727, 1728, 1729, 1730, 1731}], 
          LineBox[{1735, 1736, 1737, 1745, 1746, 1747, 1748, 1749, 1750, 1757,
            1758, 1759, 1760, 1761, 1762, 1763}], 
          LineBox[{1767, 1768, 1769, 1797, 1798, 1799, 1800, 1801, 1808, 1809,
            1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 
           1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 
           1832, 1833, 1834, 1835}], 
          LineBox[{1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
            1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 
           1879}], LineBox[{1883, 1884, 1885, 1910, 1916, 1919, 1920, 1921, 
           1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 
           1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 
           1944, 1945, 1946, 1947}], 
          LineBox[{1951, 1952, 1953, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
            1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 
           1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007}], 
          LineBox[{2019, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
            2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 
           2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065}], 
          LineBox[{2068, 2069}], 
          LineBox[{2090, 2099, 2100, 2101, 2102, 2114, 2115, 2116, 2117, 2118,
            2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 
           2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 
           2141, 2142, 2143, 2144, 2145, 2146, 2147}], 
          LineBox[{2160, 2161, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
            2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187}], 
          LineBox[{2193, 2214, 2215, 2218, 2219, 2240, 2244, 2245, 2246, 2247,
            2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 
           2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 
           2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 
           2281, 2282, 2283, 2284, 2285, 2286, 2287}], 
          LineBox[{2293, 2316, 2317, 2318, 2331, 2344, 2345, 2346, 2347, 2355,
            2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 
           2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 
           2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 
           2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 
           2400, 2401, 2402, 2403}], 
          LineBox[{2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
            2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 
           2448, 2449}], 
          LineBox[{2460, 2461, 2462, 2469, 2470, 2483, 2484, 2485, 2486, 2494,
            2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 
           2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 
           2517, 2518, 2519}], 
          LineBox[{2525, 2528, 2529, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
            2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 
           2565, 2566, 2567}], 
          LineBox[{2581, 2582, 2583, 2590, 2591, 2599, 2600, 2601, 2602, 2603,
            2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 
           2615, 2616, 2617, 2618, 2619}], 
          LineBox[{2625, 2640, 2641, 2642, 2643, 2656, 2657, 2658, 2664, 2665,
            2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
           2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
           2688, 2689, 2690, 2691}], 
          LineBox[{2703, 2704, 2705, 2706, 2707, 2710, 2711, 2728, 2729, 2730,
            2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 
           2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749}], 
          LineBox[{2758, 2759, 2760, 2761, 2762, 2764, 2765, 2766, 2783, 2784,
            2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 
           2796, 2797, 2798, 2799}], 
          LineBox[{2806, 2807, 2808, 2809, 2810, 2823, 2824, 2825, 2832, 2833,
            2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 
           2845, 2846, 2847}], 
          LineBox[{2857, 2858, 2859, 2860, 2861, 2874, 2875, 2876, 2883, 2884,
            2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 
           2896, 2897, 2898, 2899, 2900, 2901}], 
          LineBox[{2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923,
            2924, 2925}], 
          LineBox[{2944, 2945, 2946, 2957, 2958, 2959, 2960, 2961, 2962, 2979,
            2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 
           2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 
           3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 
           3013}], LineBox[{3022, 3023, 3024, 3025, 3026, 3035, 3036, 3037, 
           3038, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 
           3056, 3057, 3058, 3059}], 
          LineBox[{3063, 3064, 3065, 3071, 3072, 3073, 3074, 3075}], 
          LineBox[{3079, 3080, 3081, 3086, 3087, 3103, 3104, 3105, 3106, 3107,
            3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 
           3119}], LineBox[{3123, 3124, 3125, 3130, 3131, 3132, 3133}], 
          LineBox[{3137, 3138, 3139, 3143, 3144, 3159, 3160, 3161, 3162, 3163,
            3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173}], 
          LineBox[{3185, 3186, 3187, 3193, 3194, 3195, 3196, 3197, 3198, 3199,
            3200, 3201, 3202, 3203, 3204, 3205}], 
          LineBox[{3228, 3229, 3230, 3245, 3246, 3247, 3248, 3249, 3250, 3251,
            3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 
           3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 
           3274, 3275, 3276, 3277}], 
          LineBox[{3283, 3290, 3301, 3322, 3323, 3324, 3325, 3326, 3327, 3328,
            3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 
           3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 
           3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359}], 
          LineBox[{3363, 3364, 3365, 3390, 3391, 3400, 3401, 3402, 3403, 3412,
            3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 
           3424, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 
           3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445}],
           LineBox[{3455, 3456, 3457, 3460, 3461, 3462, 3463, 3464, 3465, 
           3466, 3467}], 
          LineBox[{3471, 3472, 3473, 3498, 3499, 3500, 3505, 3506, 3507, 3508,
            3509, 3510, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 
           3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529}], 
          LineBox[{3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547}], 
          LineBox[{3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568,
            3569}], 
          LineBox[{3573, 3574, 3575, 3604, 3605, 3607, 3608, 3609, 3618, 3619,
            3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 
           3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 
           3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649}], 
          LineBox[{3652, 3653}], 
          LineBox[{3661, 3662, 3663, 3668, 3669, 3670, 3671, 3672, 3673, 3674,
            3675}], 
          LineBox[{3701, 3702, 3707, 3716, 3717, 3718, 3719, 3720, 3721, 3722,
            3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 
           3734, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 
           3745, 3746, 3747, 3748, 3749}], 
          LineBox[{3753, 3754, 3755, 3759, 3760, 3761}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.2090629622270728`, 0.}, {0.8350950368936221, 
         0.5272012520796961}, {
         0.8350950368936221, -0.5272012520796961}, {-0.3634026589311146, 
         0.7221948220318323}, {-0.3634026589311146, -0.7221948220318323}, {
         0.15043374943398566`, 0.}, {-0.13475554313192517`, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.5, 0.}, {-0.5, 0.}, {0.5, 0.}, {0.5, 0.}, {0., 0.}, {0.,
          0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.290785217297691, 
     1.9168172919642406`}, {-1.8039170771024509`, 1.8039170771024509`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.674901626494658*^9, 3.674903143863595*^9, 3.674903445816263*^9, 
   3.674903502049872*^9, 3.6749035577269983`*^9, {3.674903617227302*^9, 
   3.6749036350858507`*^9}, 3.674903711492485*^9, {3.674903783485037*^9, 
   3.67490385200747*^9}, 3.674904248380031*^9, 3.674904539727919*^9, {
   3.674905077905952*^9, 3.674905155350131*^9}, {3.674905198453768*^9, 
   3.674905278050394*^9}, {3.674914351085289*^9, 3.674914364934512*^9}, {
   3.674951423618733*^9, 3.674951436348687*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]", "=", "0.001"}], ";", 
  RowBox[{"\[Beta]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "5"], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox["\[Beta]", "4"], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "6"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "6"], " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "-", 
       
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
     "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "/.", 
      RowBox[{
      "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"zeros", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"potential", "[", 
      RowBox[{
       RowBox[{"line", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunks", "=", 
   RowBox[{"sqrt", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{"a", "-", "b"}], ")"}], 
    RowBox[{"(*", 
     SqrtBox[
      RowBox[{"f", "[", "t", "]"}]], "*)"}], 
    RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "f", ",", "zeros", 
    ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6745698325272093`*^9, 3.6745698534102497`*^9}, {
   3.674569917850174*^9, 3.6745699364522085`*^9}, {3.674569989817911*^9, 
   3.6745700752046757`*^9}, {3.6746218993259897`*^9, 3.674621911606211*^9}, {
   3.674622362764021*^9, 3.67462254226054*^9}, {3.674622574237997*^9, 
   3.6746225800900073`*^9}, {3.6746226866282544`*^9, 
   3.6746226980086746`*^9}, {3.6746230555282564`*^9, 3.674623079203499*^9}, {
   3.674630191344767*^9, 3.674630213784864*^9}, {3.674630260980904*^9, 
   3.6746307658956833`*^9}, {3.674630854944923*^9, 3.674630915506773*^9}, {
   3.6746311786005287`*^9, 3.674631220058567*^9}, {3.67463131104191*^9, 
   3.6746313496087503`*^9}, {3.6746314477031593`*^9, 3.674631508692155*^9}, {
   3.6746315413639793`*^9, 3.6746315913995*^9}, {3.674631653037863*^9, 
   3.6746318269471903`*^9}, {3.674632294353447*^9, 3.674632307291277*^9}, 
   3.674713480709482*^9, {3.6747135297255363`*^9, 3.67471356968962*^9}, {
   3.674713620034906*^9, 3.674713625048163*^9}, {3.6747136597838182`*^9, 
   3.674713697696732*^9}, {3.674713904056275*^9, 3.67471406881924*^9}, {
   3.6747141976958103`*^9, 3.6747142006870213`*^9}, {3.674714437131072*^9, 
   3.674714437196405*^9}, {3.674714547734468*^9, 3.674714556678218*^9}, {
   3.674737960475657*^9, 3.6747379850567017`*^9}, {3.6747380182575703`*^9, 
   3.6747380928485928`*^9}, {3.6747381266014357`*^9, 
   3.6747381708949327`*^9}, {3.674899147139434*^9, 3.674899160751631*^9}, {
   3.6749057510480003`*^9, 3.674905751159912*^9}, {3.67490583115362*^9, 
   3.6749058516953278`*^9}, {3.674906295991721*^9, 3.674906338801784*^9}, {
   3.674906389709622*^9, 3.6749063939838247`*^9}, {3.67490652940211*^9, 
   3.674906538620612*^9}, {3.674906581869535*^9, 3.674906613594713*^9}, {
   3.6749075097186003`*^9, 3.674907541653768*^9}, {3.674907724579755*^9, 
   3.674907725994588*^9}, {3.674907780143928*^9, 3.674907783304734*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9085621457122293`"}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "+", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "-", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.00031171697817377047`", ",", 
   RowBox[{"-", "0.00031171697789562474`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67463231282607*^9, 3.674713628962058*^9, 3.674713662946259*^9, 
   3.674713698331954*^9, {3.6747139698849792`*^9, 3.674713997644226*^9}, {
   3.674714040275152*^9, 3.674714069314946*^9}, {3.674714193042343*^9, 
   3.674714202261915*^9}, 3.6747144385332947`*^9, {3.674714550430603*^9, 
   3.674714557181621*^9}, 3.674737806427273*^9, {3.674737961278553*^9, 
   3.674737985691721*^9}, {3.6747380443226223`*^9, 3.67473805438195*^9}, 
   3.674738093582716*^9, {3.674738127265416*^9, 3.6747381715018463`*^9}, 
   3.67483695713031*^9, 3.674898950931019*^9, {3.674899150118249*^9, 
   3.674899161145083*^9}, 3.674904248442429*^9, 3.674904539801716*^9, 
   3.674905752849414*^9, {3.67490583170653*^9, 3.674905852007999*^9}, {
   3.67490630409307*^9, 3.674906339387286*^9}, 3.674906394344993*^9, 
   3.674906539584276*^9, {3.674906589772007*^9, 3.674906613931275*^9}, {
   3.674907514929556*^9, 3.6749075419758797`*^9}, 3.6749077268461657`*^9, 
   3.6749077838061447`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4.8505128658648236`"}], "-", 
  RowBox[{"0.45345036723048493`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.67463231282607*^9, 3.674713628962058*^9, 3.674713662946259*^9, 
   3.674713698331954*^9, {3.6747139698849792`*^9, 3.674713997644226*^9}, {
   3.674714040275152*^9, 3.674714069314946*^9}, {3.674714193042343*^9, 
   3.674714202261915*^9}, 3.6747144385332947`*^9, {3.674714550430603*^9, 
   3.674714557181621*^9}, 3.674737806427273*^9, {3.674737961278553*^9, 
   3.674737985691721*^9}, {3.6747380443226223`*^9, 3.67473805438195*^9}, 
   3.674738093582716*^9, {3.674738127265416*^9, 3.6747381715018463`*^9}, 
   3.67483695713031*^9, 3.674898950931019*^9, {3.674899150118249*^9, 
   3.674899161145083*^9}, 3.674904248442429*^9, 3.674904539801716*^9, 
   3.674905752849414*^9, {3.67490583170653*^9, 3.674905852007999*^9}, {
   3.67490630409307*^9, 3.674906339387286*^9}, 3.674906394344993*^9, 
   3.674906539584276*^9, {3.674906589772007*^9, 3.674906613931275*^9}, {
   3.674907514929556*^9, 3.6749075419758797`*^9}, 3.6749077268461657`*^9, 
   3.674907784329496*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]], 
      LineBox[{{0.9999876656422945, 7.780169246817496}, {0.9999999795918367, 
       1.5851510612584503`}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVx3k41GsfgPExhGxp0jA6OCYp9aIslSVfHSIclLVFC0oqW7ZsUUTZsk3e
7Fsq6kiy1JF5HkvkIEv2FKKJmd9QmLIU73n/uK/PdSu6eNucJ5NIpMJ/+7/m
56e68bS9gVy+Zv7Ae3n0pczBZZSmBQ5Un8u2SYmIKtp35znNGAqWZkhFXxjo
JTPc46qyFSSFVKidzMpAajpSxTk0OygSPOKbnZqDSJum09YUjsOG4Guddbfz
UTdRF+msfBq4rUE/feQKkW6XZnkq7RyoP3ZjXiPuo60Hch82ZruBlt+FQ2Ya
D5BYqXDegsJF8JSPeJHq9hB9iPqQ6KDsBWvdqTEn75cgnNWonUjzh7Xl9Qm3
8v9CWj1Bz7adDIB8i5zLO+LLUImwmiozOxAWM+T2Ub2fotSAe0qzCsFgX9DR
Hp5ajlytPTcdVQ6Ho4qd/BY7K1DUjfigONpNYIzwO54kVSHmb27VDn/fBJXr
8v7JdlVoscZwgX4yGrbcumwe/7AKeczwvGuzY6DaznBA2Lwa2Z08e4FQiIWm
YHt+n8gapKyt7WClfAfchokQudaX6Jz/LC2WxoCofBmlqKE6pMmfGlLhwwAZ
s1TCdAsTkVO13r9vYYDGI15VrBMT5T0NzlYLvAuuyzJHUj4w0TCbX6G3Jx3m
TfYxBYYRsnaWUVJIyICSJNkjLqMY6VodVKtazQWLyvTSz4UNSJhhVvD1232I
cKy1r2h9jVb2j68UyBZD6VzHEhp9jWY+BDnYGhWD86ZHB2p5r9G77Y9EqxnF
UHA8/GaoYjPKrRUMDN33AKROWS/sCGpGWhON5oLXHsKyVnKAK70FndUwWNgi
XArOYe0nEy+/QTVdGqam8k8hulponevgP+hY1MhwY3wllF4PstXe3Ym8n/mp
3lt4Cb4TW3+/zexGc8n9b/j4ENjv8jDUyH+H3tQ3o079BmiO21knktaHLgab
iR8nmmDi6jjlsOcAql+vsfbEswWaEdpHyA+hB0VNq7Lb/oH6LY92fZ0dRobU
ukLbsnawPDWf5pk/glRbRl407+yE56RBgxizj6jX0HamZKYLEioXP9iJjyEP
kcs9fbt7wONKiLjj9BhqG3Ssk7jzDs5AV/TpkXFka3JsfHKyF86pPuMf7PqE
9ubHO+Yr9QPbqM/FtHYCja2m9bpHDEDdyD897PpJ9Nmss4jaOAic1ixDA/wZ
lWeMBncrDkPjwqfegFEWKr7NH6sS8h6WOGp71gtNIZ7rCbZb7QjoCF4/+HLH
NBI1jrF5Jv0RnCc6R/T92ShM8rPYuNMobDw7Hxf0ioPEmLtIA5ZjEK57UM2a
wkUHAq1/NS6PAf8d2/KR3BmUfT+haGv2OIyl5hRZU7+i0/ZaHestPoG/f4Oi
3dpXVNV3Po35/ROc/smbKVj8hnTay8ms9AmA1ZkYxvc59PshN16a8SRcWhGg
e2xbQNpa2imVrEk4ftPJJeY0D43OJbYWRX+GV3x7+Gyff0eE5tFomgYLGmUu
LeXYLCJljiqb7x0LnKV8ZzrXL6MmpYAenxtfYLtN3NXYXT9RUm+fq43SFBR0
7gt9ErKKZm1xCrlpCqoZ+5vjkkj4+8Noj5rmKRA09fRouEvCqyvmph6tU5Dt
WcNYzSJhsft9P/veTgFb93nEzUckvGOBfaFkaAqiW1YtW+pJ+Cxjs8GR2Sl4
Qn19QpVHwl29l9g5stPwcX7oaMEZPlxhv9lI58o0aJBeJQUak3Hqhogp5DcN
c7GPqaEWZOzbOpVoEjgNi+tbP960IeM9B14N2oZOA12kxPzRWTIuV3L18oqe
BpoT0lO/RsZl8+UZRRnTsExyXPyjhoxLU/78Kt4wDda7bsc/VefHRR1ROZ8o
bMjzknRR0xTACXtWnPI2s2Hip5SXj74ADrzr+5uTDBsakwre/n1IAB8+5ZzV
J8eGIj3xWvdjAniGMMh4s4MNuUaj0TvDBfB+sWVGmQEb9P7stj7SJoA7zH0S
Qi6xgSXf1BLmsQ5Xl32x2OfJBh2bevXxwHU4n3JGdMGbDXPVxdHWN9Zh32HL
OM8ANpw7+kXLPH0dlrm06/bZ62zoN23Te4nXYZdYVpRJOhsMNeny8dKC+EeL
UyilgQ3tn9zlvDoEsbytSUBDExtW6ucifwwKYpOP6t6+LWyQVNTySZgUxOkL
ZNeedjbsvcDaPrQiiLUUS8xTB9jAvLtpdW2nEPYN4dEoXDbE2zOs0uKFMPGf
Oy82ynAg11i565iDMJZ6cbWiXpYDwQ1DX666CmM9I+cnV+Q48FpXjVzsI4zj
jmvld9M5IJkWmaESL4xVYoZvpahywLxFbugjFsZuo8qOG404cNjqcYCE+no8
loJ4kl4cmBr2+V1LWgSPRVr+nerDAdHO3d9gmwge93sfLuXHgVm+J40nNEXw
J/sfQjJBHFBqXH5bZy2CJ2jqsgqRHDC9kaKhHyuCWQW5BqrpHOhWcb+2e00E
c55du2XG5ADLMSS96ocoJgpF/2zDHJg01x/uFRLDRFqGpGUjB+60K9wTlPn3
A6oyjrzhQP1/wsiF+8XwjA73sWMPBzxXNba+ChHDX+udus6zOKCcNKiQRRbH
37v1aJESBGiFhnjx0SUwyXPgh85GAhI6XiQd3iuBRYT9+r9tIsDqVc7HUnMJ
LG9QmuZMI0Ago3W83k8CHyqVkTioREBwS0IxtEhgRiSPTNIlwDYz4Nxffhuw
puZT4tp5AjrD9dyEfCWx/lvzNm13AqwNy41o4ZLY5CKrhHuJgCtJ/u36cZL4
RJ7chVM+BDzUPR72slASR4omjOuHElD9XKI6sVcS90y4968kE+BkcH9bs95G
7MOg4+BXBMy/69xQQ6Ngm7suF/kRATan/UJObKdg7fRCSmI9AYxv3Rcp2hS8
/F/6+fxmAgbFTVPwEQqOzqKLtHQRsPnXkt6WWArOLKTbSX0mAMaFn/N+UXBT
OX2qTJwLnpn6EcylTfjBM5eU/ZJcyOSFRRwTkcKxFYW6DRQuPF34SpHYIoWt
KumJfdJceBOlKNyhL4WHaugaPxW5cEIlebbghhSeYdLDzPZyIfnu1pUpyc1Y
uoMuOXmaC2d28AWpHabi/bze+bPOXLivSLAuO1HxMblbAx9cudBmdVn2rQ8V
Z3pycgfcudDDinQhZ1KxvESlapsvF8r7/ujSnqFiZetDFhUxXIh4WfVze640
Nr36Q009lgtrnpWKk5XS2D2vhPIkngtKq5oS7W3SuHRWfLg4mQsa6u26isvS
WC253z0jkwsz90z0Zo/JYO3uCzHXy7ig89sB7zQFGnZYol36Vc4FiQO+3yx0
aDhQsd0y5DkXSN4RW3VsafjFld2b/V9woZ86RK+8RcP6lKWiCw1ceJztxzOY
p2Fj27h6q34u5FGDrhj3yeJalaf0+c9cUGU5LppkbsH/Ayi1Jzs=
       "]], 
      LineBox[{{0.9987522977908647, -6.900661354412972}, {0.9989431914422024, 
       0.09667541568310752}, {0.9989703368833786, 1.0917100454391657`}, {
       0.9991269007077702, 7.780169246817496}}], 
      LineBox[{{0.9999089335719238, 7.780169246817496}, {0.9999999795918367, 
       0.4255978367558829}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-6.900661354412972, 7.780169246817496}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+EiMbX5tjQALr3mbBts/8D/DQBrj
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
GTmT
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-42.807451252874365`, 217.57845213884727`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67463231282607*^9, 3.674713628962058*^9, 3.674713662946259*^9, 
   3.674713698331954*^9, {3.6747139698849792`*^9, 3.674713997644226*^9}, {
   3.674714040275152*^9, 3.674714069314946*^9}, {3.674714193042343*^9, 
   3.674714202261915*^9}, 3.6747144385332947`*^9, {3.674714550430603*^9, 
   3.674714557181621*^9}, 3.674737806427273*^9, {3.674737961278553*^9, 
   3.674737985691721*^9}, {3.6747380443226223`*^9, 3.67473805438195*^9}, 
   3.674738093582716*^9, {3.674738127265416*^9, 3.6747381715018463`*^9}, 
   3.67483695713031*^9, 3.674898950931019*^9, {3.674899150118249*^9, 
   3.674899161145083*^9}, 3.674904248442429*^9, 3.674904539801716*^9, 
   3.674905752849414*^9, {3.67490583170653*^9, 3.674905852007999*^9}, {
   3.67490630409307*^9, 3.674906339387286*^9}, 3.674906394344993*^9, 
   3.674906539584276*^9, {3.674906589772007*^9, 3.674906613931275*^9}, {
   3.674907514929556*^9, 3.6749075419758797`*^9}, 3.6749077268461657`*^9, 
   3.674907784461046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]", "=", "0.001"}], ";", 
  RowBox[{"\[Beta]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "5"], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox["\[Beta]", "4"], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "6"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "6"], " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "-", 
       
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
     "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "/.", 
      RowBox[{
      "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"zeros", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"potential", "[", 
      RowBox[{
       RowBox[{"line", "[", 
        RowBox[{"b", ",", "c"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunks", "=", 
   RowBox[{"sqrt", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{"b", "-", "c"}], ")"}], 
    RowBox[{"(*", 
     SqrtBox[
      RowBox[{"f", "[", "t", "]"}]], "*)"}], 
    RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Delta]", ",", "\[Beta]", ",", "b", ",", "c", ",", "f", ",", "zeros", 
    ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6745701741886644`*^9, 3.674570213594739*^9}, {
   3.674714113541958*^9, 3.674714139787716*^9}, {3.674714443464588*^9, 
   3.6747144475468884`*^9}, {3.674714529553709*^9, 3.674714538519815*^9}, {
   3.6747145873355427`*^9, 3.674714596741329*^9}, {3.674714826794375*^9, 
   3.674714866956509*^9}, {3.674737855869584*^9, 3.674737949640643*^9}, {
   3.6748374257768507`*^9, 3.674837436763728*^9}, 3.6748990958595657`*^9, {
   3.674899176267618*^9, 3.674899183083973*^9}, {3.674905788017476*^9, 
   3.674905788252966*^9}, {3.674906235611176*^9, 3.6749062865295467`*^9}, {
   3.674906359098114*^9, 3.674906385703314*^9}, {3.674907499634858*^9, 
   3.674907504954337*^9}, {3.674907548506731*^9, 3.6749075559644537`*^9}, {
   3.674907733510345*^9, 3.674907735062352*^9}, {3.674907766250244*^9, 
   3.6749077742143393`*^9}, {3.6749096299690332`*^9, 3.6749096343551292`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9085621457122293`"}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "+", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "-", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.00031171697817377047`", ",", 
   RowBox[{"-", "0.00031171697789562474`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6745702156891427`*^9, {3.6747141302437887`*^9, 3.6747141637071953`*^9}, {
   3.674714443935164*^9, 3.674714447862277*^9}, {3.6747145307817307`*^9, 
   3.6747145390445957`*^9}, {3.674714588113887*^9, 3.674714597193454*^9}, {
   3.674714828679791*^9, 3.674714867237482*^9}, 3.674737807053907*^9, {
   3.674737860017611*^9, 3.67473795008364*^9}, 3.674836957674769*^9, 
   3.674837332873701*^9, 3.6748374371109953`*^9, 3.674898951466859*^9, 
   3.674899096422235*^9, {3.6748991769191093`*^9, 3.674899183375578*^9}, 
   3.674904249065892*^9, 3.674904540411315*^9, 3.674905788925353*^9, {
   3.6749062404877768`*^9, 3.674906286832902*^9}, {3.674906363934142*^9, 
   3.674906386065336*^9}, {3.6749075002636127`*^9, 3.674907505303011*^9}, {
   3.674907549045142*^9, 3.674907556224615*^9}, 3.674907735560102*^9, {
   3.674907766874711*^9, 3.6749077747764177`*^9}, {3.674909630635334*^9, 
   3.674909658092268*^9}}],

Cell[BoxData[
 RowBox[{"4.8505160567203305`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.3603477089318103`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.6745702156891427`*^9, {3.6747141302437887`*^9, 3.6747141637071953`*^9}, {
   3.674714443935164*^9, 3.674714447862277*^9}, {3.6747145307817307`*^9, 
   3.6747145390445957`*^9}, {3.674714588113887*^9, 3.674714597193454*^9}, {
   3.674714828679791*^9, 3.674714867237482*^9}, 3.674737807053907*^9, {
   3.674737860017611*^9, 3.67473795008364*^9}, 3.674836957674769*^9, 
   3.674837332873701*^9, 3.6748374371109953`*^9, 3.674898951466859*^9, 
   3.674899096422235*^9, {3.6748991769191093`*^9, 3.674899183375578*^9}, 
   3.674904249065892*^9, 3.674904540411315*^9, 3.674905788925353*^9, {
   3.6749062404877768`*^9, 3.674906286832902*^9}, {3.674906363934142*^9, 
   3.674906386065336*^9}, {3.6749075002636127`*^9, 3.674907505303011*^9}, {
   3.674907549045142*^9, 3.674907556224615*^9}, 3.674907735560102*^9, {
   3.674907766874711*^9, 3.6749077747764177`*^9}, {3.674909630635334*^9, 
   3.674909658631756*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{2.040816326530612*^-8, 1.1604417554947883`}, {
       0.000010924318577395528`, 7.028367089203319}}], LineBox[CompressedData["
1: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
Ag==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{2.040816326530612*^-8, -1.1627788563061108`}, {
       8.571632704291597*^-6, -4.213792334885157}}], LineBox[CompressedData["
1:eJwVlWk81XkDR4USyXLJVqbEWLO3Un1/RaiUIkkkUVKZlokaTaVRpBA9pJgy
HkJxs5RKst57uZZ0s+U+1uzZ/n87Wafnxfmc9+fNUXG7YHtKUEBAwO8n/7eb
6t6O1sNFqHuuYiauvIp4d9BLc0OLINlaELqRs5KUFpUU8LaycCuo1/5JthJJ
+jTbGWrJwv4b4uzqF0okoN5IzNqWhSSeQMzqaCWyczD2UOlpFlp5m4WHfJVI
rsLV3sL/sMCzNrX13KpEMi5oyLz+zsLBqRChpxxF8kQ5yCMyko3Qj/1zFm0K
5IpmfrDtP2wIylmaPKpRIPbGYxlSKWw4DGoeGSlWIIzdrjMhBWyskDKs56co
kBDvzeEBfWw4U8/ND/kokFsV3z9cIRzw69SjhsQVyBnf3csdBziQumYYq24h
T1JWSh9zmeCghNubMWoiTwby+Ex3gWIIeDqeqNCXJ+cFPa3Pyxbj3sIrlxhF
eeIdHBh8e2sxgmP+1nw7KEf8nrFF00KK8bRyC6l6LEceFW1bIqRbgvhn+fJm
oytIkajRAvM3Lrolbtx04MgSzUMG7+//wUXoneuXEnJkSXis3gXP21wsjC63
nMqQJa7GOq2q0VyIb032zH0mS+ad1QpiOFyoeHcYvroqS0wy5PyCVpZC3qki
QF1XlmQdnpl3LytFtcH6PK1YGZKUwJlX+rUczU4qjaZRDHIx4FAb9Mvh1R+Y
MfSAQUxPd7JPbimHjw1fPvUug3zRFr6Xtq8cw/uP+hv4MsiPTDOZnVfKcWSi
VOaGM4NYF7I0znDLkXb7Xrq8GoOMNhUeeH+mAoYaG/s030sTIpcXb5f2Cdcr
qXVB/VJEl9uUXaLNg4mNn/c6eUlSS+yol9QXPDG3OC3wQJx4iZ2rrjOoRtyq
stKGO2Kkgu+QJ/GgBsO1pf07opcSO4sjbZ2dtfg8VnYzcmQJ2RgX7BCn9hU7
NUzD9SMXk2/zEbWefvVYcU09LR/CpGs3L0GOzccmf0XaWEWIZES3+lapNEBu
qpp7XESQJAYJ3dO61gg1kx1m+5ctIuPuR/s8Pjbhk/bn7eNGAmSZeaBtpnwL
CgcGgxlZ87gu1SXe5tyK+vkEoxzTOYjn6wjU7/uGwhyfHwbtM9h2xWaOPf0N
EVzZ4c3+03j6PCRB9Wkbmk1DJcKsf8DFfn2l6N52rDZV9qyUmMLbulMR+RPt
2MPZMhjTPYEtnzIEu6M6MOMX6vWoZRxrdnmMR5h3opzvlNRQMYYN6zc8zOru
hJWLrHtl7ShaR0LLEgK64JbcOKnZN4IB44MBikbd8LB+PsIcGYZ6v27foppu
hH29ZG0pPQyOmk/1xb964GRjuZCsMoSw2jp3W7Xv2BSXlWdznwJtV/hQkPMd
Vq5v1MqaB/DafoXZlku92FT1Iz5Moh8JlbeftTP6YGVr5Tjq3ItJrvOfDFYf
otPM4iT9e/DtYcG41Pl+cEpOM+2TujBRZaroLzGAx228E8LNHbgYubbQN3cA
XQfPdpR+bYN85VqpTpdB3HZPsjFOboVdHXN21fwgnPXu84qONuJmstc0T4BC
zsASnqRlI174rpvyF6IgUqFoZ2fciFll5uj3pRRmJrLu5ixrRJJHal+WDIUV
2iY9S3IbMD35km+tRcHgpeeNW0oNiFdKzrp+iEKxsqem9mc+Pg14vNZ3oNA2
pe4/ks3HZL56RrsjBe21DRHMBD6s3ZNSrY5T+Pre3nz8Dz4mUhPjZc9S6Ax6
eK12LR97tj0PZ/pR6MgkwomX6zFy/L9eTSkUsvcE0iZLv2L88eINJ15RqMkJ
jbg0Uocp3pm5rnQKOoftSFRTHRZg9IDOovBY40Pdi4w6iK9hpwsWULhrOBY7
4FCHX791jmjWUFhsPWWRHV+LI66avj4zFLKYNMtNowZOT0J2TM9R4LGGpL9K
1MDly5ConwAN9pOIPN2JapwiH2KCFtMQWy53KYhTjd/X7Mn9W5JG+2WRqJbj
1Qj5dm6hSJVGYcuXgmfhVShwTQ+QsKbRb3r4/momDzk8r70t+2kEKE30KJzj
4d12bem0gzS8rE+9jNLigbkq8ek+BxpXWK7NjMTPiOHHvAlxoxFmzPwl/VEl
fA4Eton50nA1b1Qbd6zAxQKz5IY/afSopG84K1kBL71Fv6XcpPEmnX9emVMO
N/HrU7vv0GCsGpdU0ynHgdJLkvfCaDAlpKY6qFLokGPbRJJoFA2pGIruKoF6
upJQ/Qsa4L9W2tVXjLW/8EuTUmnIyEyGyDwohsKs7SGLTBqtTnfKVlZxsCTb
6lxALo2cG2Sz886f39BYYmhfQGN69uSxd/9jYe4Re0KNRcNJ07u+6jwLY5e3
+3O4NESMqujkh0Vo018fLVTzs9/JtxEyngVoih12qamjIWo6e8PrdD74y9PV
Evg0dGauJhu75OFzv1bGzhYawY69eop6H1F+tMeH0UbDQ0tU7INwDorLnpu2
d9DYpDNamlyZjdzk1dy/emmU7NcLdNR9h2y55pCDAzRMMm2l2XlZeBMQY6tC
06jWXnxfzPgN0sYcFIaHaRiwPFgigZlIcV/RUjhGI1bzw63rDulIrK5OCJ+k
4SPTFn5MNRVxO8LPuE7TSPys/CZUIwlPM/bpG8zRUNX4PfKu3T94vHrZ+MIC
DcVnbNWeXj38Cw7F/eI=
       "]], 
      LineBox[{{0.0012221546689624985`, -4.213792334885157}, {
       0.001226810407675648, -3.316507849123661}, {
       0.0012430452337336773`, -0.047503490682081956`}, {
       0.0012781860642366771`, 7.028367089203319}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-4.213792334885157, 7.028367089203319}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
zg==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Ecs49GtSCv4HrBtqfA==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-110.59017156306648`, 351.598129893809}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6745702156891427`*^9, {3.6747141302437887`*^9, 3.6747141637071953`*^9}, {
   3.674714443935164*^9, 3.674714447862277*^9}, {3.6747145307817307`*^9, 
   3.6747145390445957`*^9}, {3.674714588113887*^9, 3.674714597193454*^9}, {
   3.674714828679791*^9, 3.674714867237482*^9}, 3.674737807053907*^9, {
   3.674737860017611*^9, 3.67473795008364*^9}, 3.674836957674769*^9, 
   3.674837332873701*^9, 3.6748374371109953`*^9, 3.674898951466859*^9, 
   3.674899096422235*^9, {3.6748991769191093`*^9, 3.674899183375578*^9}, 
   3.674904249065892*^9, 3.674904540411315*^9, 3.674905788925353*^9, {
   3.6749062404877768`*^9, 3.674906286832902*^9}, {3.674906363934142*^9, 
   3.674906386065336*^9}, {3.6749075002636127`*^9, 3.674907505303011*^9}, {
   3.674907549045142*^9, 3.674907556224615*^9}, 3.674907735560102*^9, {
   3.674907766874711*^9, 3.6749077747764177`*^9}, {3.674909630635334*^9, 
   3.6749096587829647`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Constructing", " ", "ab", " ", "and", " ", "bc", " ", "functions"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]begining", "=", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"\[Delta]end", "=", "2"}], ";", 
    RowBox[{"\[Delta]nstep", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]begining", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]]}], ";", 
    RowBox[{"\[Beta]end", "=", "1"}], ";", 
    RowBox[{"\[Beta]nstep", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"abList", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"bcList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"potential", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Delta]", ",", "\[Beta]"}], "}"}], ",", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["x", "3"], "-", 
             RowBox[{"x", " ", 
              SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["x", "7"]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["x", "5"], " ", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SuperscriptBox["\[Beta]", "4"], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["x", "3"], " ", 
           SuperscriptBox["\[Beta]", "4"]}], "+", 
          RowBox[{"4", " ", "x", " ", 
           SuperscriptBox["\[Beta]", "6"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["x", "6"], " ", 
           SuperscriptBox["\[Delta]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["x", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
          "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ProgressIndicator", "[", 
    RowBox[{"Dynamic", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Beta]", "-", "\[Beta]begining"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Beta]", "=", "\[Beta]begining"}], ",", 
      RowBox[{"\[Beta]", "<", "\[Beta]end"}], ",", 
      RowBox[{"\[Beta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}], "/", 
        "\[Beta]nstep"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"\[Delta]", "=", "\[Delta]begining"}], ",", 
         RowBox[{"\[Delta]", "<", "\[Delta]end"}], ",", 
         RowBox[{"\[Delta]", "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Delta]end", "-", "\[Delta]begining"}], ")"}], "/", 
           "\[Delta]nstep"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"zeros", "=", 
           RowBox[{
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"potential", "[", 
                RowBox[{"z", ",", "\[Delta]", ",", "\[Beta]"}], "]"}], 
               "\[Equal]", "0"}], ",", "z"}], "]"}], "//", "Quiet"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{"z", "/.", 
            RowBox[{
            "zeros", "\[LeftDoubleBracket]", "3", 
             "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"z", "/.", 
            RowBox[{
            "zeros", "\[LeftDoubleBracket]", "5", 
             "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"z", "/.", 
            RowBox[{
            "zeros", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"f", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{"potential", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"line", "[", 
                 RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], ",", 
               "\[Delta]", ",", "\[Beta]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chunks", "=", 
           RowBox[{"sqrt", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "10"}]], ",", 
               RowBox[{"1", "-", 
                SuperscriptBox["10", 
                 RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sqrtAB", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ab", "=", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"a", "-", "b"}], ")"}], 
              RowBox[{"sqrtAB", "[", "t", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"abList", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Delta]", ",", "\[Beta]"}], "}"}], ",", "ab"}], 
             "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"f", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{"potential", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"line", "[", 
                 RowBox[{"b", ",", "c"}], "]"}], "[", "t", "]"}], ",", 
               "\[Delta]", ",", "\[Beta]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chunks", "=", 
           RowBox[{"sqrt", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "10"}]], ",", 
               RowBox[{"1", "-", 
                SuperscriptBox["10", 
                 RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sqrtBC", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bc", "=", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"b", "-", "c"}], ")"}], 
              RowBox[{"sqrtBC", "[", "t", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"bcList", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Delta]", ",", "\[Beta]"}], "}"}], ",", "bc"}], 
             "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"abFunc", "=", 
     RowBox[{"Interpolation", "[", "abList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcFunc", "=", 
     RowBox[{"Interpolation", "[", "bcList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "c", ",", "ab", ",",
       "bc", ",", "sqrtAB", ",", "sqrtBC", ",", "f", ",", "chunks", ",", 
      "potential", ",", "zeros", ",", "abList", ",", "bcList"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.674909333282143*^9, 3.674909376831856*^9}, {
  3.674909548776291*^9, 3.674909621349751*^9}, {3.674909664823058*^9, 
  3.6749099199781313`*^9}, {3.6749099573825407`*^9, 3.6749101030583973`*^9}, {
  3.674910138032683*^9, 3.67491015002912*^9}, {3.674916117200366*^9, 
  3.6749161346941347`*^9}, {3.6749162966043253`*^9, 3.674916298390215*^9}, {
  3.6749200132698717`*^9, 3.674920015441043*^9}, {3.6749206256841707`*^9, 
  3.674920626897633*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Beta] - \
$CellContext`\[Beta]begining)/($CellContext`\[Beta]end - \
$CellContext`\[Beta]begining)]]], "Output",
 CellChangeTimes->{3.674910070025586*^9, 3.674910105575551*^9, 
  3.674910152695689*^9, 3.6749161703510447`*^9, 3.674916333263637*^9, 
  3.674920017294588*^9, 3.674920627822669*^9, 3.675611146119066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dissipation", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"begining", "=", 
   RowBox[{"-", "2"}]}], ";", 
  RowBox[{"end", "=", "2"}], ";", 
  RowBox[{"nstep", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ProgressIndicator", "[", 
  RowBox[{"Dynamic", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]", "-", "begining"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"end", "-", "begining"}], ")"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"\[Delta]", "=", "begining"}], ",", 
     RowBox[{"\[Delta]", "<", "end"}], ",", 
     RowBox[{"\[Delta]", "+=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"end", "-", "begining"}], ")"}], "/", "nstep"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"abFunc", "[", 
                RowBox[{"\[Delta]", ",", "\[Beta]"}], "]"}], "+", 
               RowBox[{"bcFunc", "[", 
                RowBox[{"\[Delta]", ",", "\[Beta]"}], "]"}]}], ")"}]}]], " ", 
           
           SubscriptBox["s", "1"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"bcFunc", "[", 
              RowBox[{"\[Delta]", ",", "\[Beta]"}], "]"}]}]], " ", 
           SubscriptBox["s", "2"]}], "+", 
          SubscriptBox["s", "3"]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "1"], "\[Rule]", 
            RowBox[{
             RowBox[{"-", "1.8"}], "\[ImaginaryI]"}]}], ",", 
           RowBox[{
            SubscriptBox["s", "2"], "\[Rule]", "0"}], ",", 
           RowBox[{
            SubscriptBox["s", "3"], "\[Rule]", 
            RowBox[{"-", "\[ImaginaryI]"}]}]}], "}"}]}], "//", "Quiet"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Dissipation", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Dissipation", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", 
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "R", "]"}], "2"]}]}], "}"}]}], "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"R", ",", "\[Delta]", ",", "\[Beta]"}], 
    RowBox[{"(*", 
     RowBox[{
     ",", "a", ",", "b", ",", "c", ",", "ab", ",", "bc", ",", "sqrtAB", ",", 
      "sqrtBC", ",", "f", ",", "chunks", ",", "potential", ",", "zeros"}], 
     "*)"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Dissipation", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Interpolation", "[", "Dissipation", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Delta]\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "40"}], ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "40"}], ",", "Black"}], "]"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", 
       RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{",", "lowField"}], "*)"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6745561626405725`*^9, 3.6745561991722374`*^9}, {
   3.6745562674373584`*^9, 3.6745564088154106`*^9}, {3.6745564487790813`*^9, 
   3.674556467611315*^9}, {3.674556510391263*^9, 3.6745565203314805`*^9}, 
   3.6745570102995505`*^9, {3.674557105167727*^9, 3.6745571167741475`*^9}, {
   3.674557661561326*^9, 3.6745576619835267`*^9}, 3.6745577275936427`*^9, {
   3.674557763198906*^9, 3.6745577635577064`*^9}, {3.674557801260977*^9, 
   3.674557905257967*^9}, 3.6745590486900024`*^9, {3.6745696966769505`*^9, 
   3.674569779164107*^9}, {3.6745702257525616`*^9, 3.6745702285625668`*^9}, {
   3.6745702623230305`*^9, 3.674570301605507*^9}, {3.6745703555362115`*^9, 
   3.6745703562080126`*^9}, {3.6745704014286985`*^9, 
   3.6745704036499033`*^9}, {3.674570437161771*^9, 3.6745704374445715`*^9}, {
   3.6745704910498734`*^9, 3.674570497384886*^9}, {3.6747142357787933`*^9, 
   3.674714310898448*^9}, {3.67471434599094*^9, 3.674714352446042*^9}, {
   3.674714607401494*^9, 3.674714607475264*^9}, {3.674714691463914*^9, 
   3.6747147068168983`*^9}, 3.674714799252129*^9, {3.674714876847096*^9, 
   3.6747148785221024`*^9}, {3.674714941922017*^9, 3.6747149426963053`*^9}, {
   3.674714994866788*^9, 3.67471499680058*^9}, {3.6747150542025948`*^9, 
   3.674715084791065*^9}, {3.674715204679673*^9, 3.674715204948304*^9}, {
   3.6747152622925262`*^9, 3.674715266329084*^9}, {3.674837258586597*^9, 
   3.6748372586686373`*^9}, {3.674837298001481*^9, 3.674837298517458*^9}, {
   3.674837351384487*^9, 3.674837352419024*^9}, {3.6748373934513397`*^9, 
   3.674837394158901*^9}, {3.674898981846828*^9, 3.6748990384467583`*^9}, {
   3.6749057946901627`*^9, 3.674905796163245*^9}, {3.67490586937757*^9, 
   3.6749058741408854`*^9}, {3.6749059252626753`*^9, 3.674906103967629*^9}, {
   3.67490662817689*^9, 3.67490670195772*^9}, {3.674906736397098*^9, 
   3.6749067384886*^9}, {3.674907286337512*^9, 3.674907286739621*^9}, {
   3.674907422963889*^9, 3.674907426988942*^9}, {3.6749074638140087`*^9, 
   3.6749074656798677`*^9}, {3.67490756699205*^9, 3.674907647668647*^9}, {
   3.674907810522503*^9, 3.674907833293454*^9}, {3.674910185508569*^9, 
   3.674910236422192*^9}, {3.6749102685285892`*^9, 3.674910269000538*^9}, {
   3.674910321800215*^9, 3.674910334826836*^9}, {3.6749105650508966`*^9, 
   3.674910661150069*^9}, {3.674910702937961*^9, 3.674910765116049*^9}, {
   3.67491206265594*^9, 3.6749120955848503`*^9}, {3.6749128471689577`*^9, 
   3.6749129505494843`*^9}, {3.674913004880579*^9, 3.674913004923685*^9}, {
   3.674913209697761*^9, 3.674913277749592*^9}, {3.674913340012858*^9, 
   3.67491335048573*^9}, {3.67491340699837*^9, 3.674913414637816*^9}, {
   3.67491344766996*^9, 3.6749134675352583`*^9}, {3.674913511730267*^9, 
   3.674913787839028*^9}, {3.674913818105341*^9, 3.674913830804823*^9}, {
   3.674913862444305*^9, 3.674913900288035*^9}, {3.6749139423344812`*^9, 
   3.6749139657889013`*^9}, {3.674914220583996*^9, 3.674914245916812*^9}, {
   3.674914285150762*^9, 3.674914328306706*^9}, {3.6749143908478622`*^9, 
   3.6749144680253963`*^9}, {3.674915402129744*^9, 3.674915440466902*^9}, {
   3.674919952598672*^9, 3.674919996866559*^9}, {3.674920601540307*^9, 
   3.674920618740548*^9}, {3.674951501038679*^9, 3.674951594070644*^9}, {
   3.674953355536446*^9, 3.674953358089993*^9}, {3.675611428177039*^9, 
   3.675611489279441*^9}, {3.67561156240381*^9, 3.675611568658733*^9}, {
   3.675611622216703*^9, 3.675611793478415*^9}, 3.6756119855186567`*^9}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Delta] - $CellContext`begining)/($CellContext`end - \
$CellContext`begining)]]], "Output",
 CellChangeTimes->{{3.6745563785213556`*^9, 3.6745564120134163`*^9}, 
   3.6745565211894817`*^9, 3.6745570111751523`*^9, 3.674557117647749*^9, 
   3.674557664792532*^9, 3.6745577306824484`*^9, 3.6745577641193075`*^9, {
   3.6745578019161777`*^9, 3.6745578486728654`*^9}, {3.674557880465523*^9, 
   3.6745579057415676`*^9}, 3.6745702306061697`*^9, 3.674570264978035*^9, 
   3.6745703022451086`*^9, 3.6745703567404137`*^9, 3.674570404180304*^9, 
   3.674570439138375*^9, 3.674570498274087*^9, {3.674714301320078*^9, 
   3.674714311431857*^9}, 3.674714353838546*^9, 3.6747146114247437`*^9, 
   3.674714712518735*^9, 3.6747148788536654`*^9, 3.674714943129938*^9, 
   3.674714998212201*^9, 3.674715055893313*^9, 3.674715089319626*^9, 
   3.674715206383542*^9, 3.67471526679611*^9, 3.674737807844298*^9, 
   3.674836958596162*^9, 3.6748372594052887`*^9, 3.674837299434018*^9, 
   3.674837353242426*^9, 3.674837394726984*^9, 3.6748989523262777`*^9, 
   3.674898982515472*^9, {3.674899014301527*^9, 3.674899038901173*^9}, 
   3.674904249727572*^9, 3.6749045410829563`*^9, 3.674905798237646*^9, 
   3.67490587753885*^9, 3.674905937138936*^9, {3.674905978533696*^9, 
   3.674906104627055*^9}, 3.674906400410857*^9, 3.674906706565954*^9, 
   3.6749067392838306`*^9, 3.674907287880481*^9, 3.674907427683852*^9, 
   3.6749074665078773`*^9, {3.674907567521474*^9, 3.67490759004572*^9}, {
   3.674907626435767*^9, 3.6749076490102453`*^9}, {3.6749078112557697`*^9, 
   3.6749078337813663`*^9}, 3.674910271444098*^9, {3.6749103244990997`*^9, 
   3.674910335296452*^9}, {3.674910748594226*^9, 3.67491076543722*^9}, {
   3.6749120633378468`*^9, 3.6749120960228148`*^9}, {3.674912855175288*^9, 
   3.674912950905654*^9}, 3.6749130054563093`*^9, {3.6749132139633827`*^9, 
   3.6749132785405493`*^9}, {3.6749133405592117`*^9, 3.674913351522428*^9}, {
   3.6749134078363047`*^9, 3.674913415175516*^9}, {3.674913449464951*^9, 
   3.6749134678858423`*^9}, {3.674913513234724*^9, 3.674913625116756*^9}, {
   3.67491365517689*^9, 3.6749137880892067`*^9}, {3.6749138187811747`*^9, 
   3.6749138310675497`*^9}, {3.674913863211537*^9, 3.6749139005059357`*^9}, {
   3.674913942825705*^9, 3.674913966002083*^9}, {3.674914221150524*^9, 
   3.6749142461942883`*^9}, {3.674914286133153*^9, 3.674914328685272*^9}, {
   3.674914403330385*^9, 3.6749144320487843`*^9}, {3.6749144622148447`*^9, 
   3.674914468452868*^9}, {3.674915417636306*^9, 3.674915440763929*^9}, {
   3.6749199388260117`*^9, 3.67491999720573*^9}, {3.674920592726295*^9, 
   3.6749206189899683`*^9}, 3.674921239293201*^9, {3.674951501695857*^9, 
   3.674951519441737*^9}, {3.674951558903618*^9, 3.674951595376794*^9}, {
   3.675611429767271*^9, 3.6756114617058783`*^9}, 3.6756114927130537`*^9, 
   3.6756115703875437`*^9, {3.6756117319829884`*^9, 3.6756117938512583`*^9}, {
   3.675611826031556*^9, 3.675611842771418*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      {RGBColor[1, 0.5, 0], Thickness[0.005], Opacity[1.], 
       LineBox[CompressedData["
1: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
jObBNzsw/wNIhtnX
        "]]}}, {{}, {
       {GrayLevel[0], PointSize[0.01388888888888889], AbsoluteThickness[1.6], 
        GeometricTransformationBox[InsetBox[
          StyleBox["\<\"\[FilledCircle]\"\>",
           StripOnInput->False,
           FontSize->10], {0., 0.}], CompressedData["
1:eJw9VW1MU2cUfmEggWzqImyBIaDohqgLDsaWaXfYzAJulSELkY9SkQEBBlmZ
kW+2i6WySATGhxG3ZJWvMUCDwrAYxgtCFUchxcJKHSsUChNBLQIC5Wvl7p6d
5P54c9vnfZ7nnPPcXZFfB0a/RAiJMj1mpsec/F/txGDF83IJAUHBnQU3wQYl
/HHNs65QkDlJpk/I1im52Zxh5x4Ottd9dem2pnPLvsO+wghI4tmoK0RrlHSU
xMnWI6FXsVmrlEjqOhPmYmAfC2g6exqZitoE2ERzkqxQJtR12ivlGzCBmRCN
lCwUzO/5LBVYOJ6RMosJR/uPMHClbLOWKXP+rHZeLoEXbpuAS5QkDjQNvncR
AlmCpnNHUnY0UwwsveuLdPT53+VH75YBC2ezSH20Nm8PDEkhhq0XNEKzN+xA
axV0LrCAVJo8npbySx04swQXqCF2ysYs6AZksILnqTSeWAXH/AYsnHqOysQu
cVmWt8GTrTl6OTdw+dReCqx9Bc9pw2TaM+ewOzCzKXd6lkYVuZ4O4cvBjxU8
S1erJ8cdg7qhchOuwkAN2myyQ9gD/7XDQAvVyle7j/dx/j+lo2m3jglylJzf
T+gjmWA4pqWf83eGKo0vN2pvPeD8fEy3DMRHZJxRcf5NUeVPzuoUnYrz6xEV
GF+fdzeqOH/+odVj31V1y1ScHxO0tuSV8FRHFadfT0ta2t7f7vaA0ztO+2S/
h3w1puT06egMv6Hm22t9nJ5RKrA+GGvY08Px11IFeahu9L/H8R2mhc2QH/55
J8dPQz261+cay9s4Pmoqjc6SZ681c/cPUNm0pueSRQN3Xz8lx5nEJ9aVHH4f
9ZnKrHH1KOXw7lPG6uagn4rh/t9FCdX6rFlHcb9vo0S/vYgnEXHvmyjjEBT2
1+E87lxJGbH84cmdPwMuiEGTW/w91ON7KPyg2O9IMPJrgtgRJ/XV3e2ID4r6
cne+Ro73gxJat+46qEB+UHjFkw/p/cgfmlNyZ0Xmg6gPAmzFa7rSIdQPFjuq
LUMdh9EfuPvmJd6pzBH0D94hhR+X+uvQX7DwDrHzbxpD/0EgSa1Q6cexP+Cw
6J1fptZj/4Dvz+RvOz+B/QW9TnouZ3oC+w+D9g5lU5aTOB/QJK5LqhmcwPmB
mU/nxvLCJ3C+YHKy6UJruR7nD1beOKTl14/jfILXeqrZJ+IxnF+w+aN1sPWQ
Ducb0p+e+Gi3ZATnH2Iu8MXe54ZxP0AUanufEWlwf6AyueStH6L+xP2CYPmi
vVykwv0D751jqxmVStxPuMzr2LL+mgL3F9x48z+eEd7D/YaljQLpnFsn7j/U
KOOGuhbaMB8gIM35QEC1DPMDRFMN5hMnGzFfoJAvuZH0+BrmD0hnEz907K/G
fIJ2O4utG/uvYn6B1L62aimvDPMNmIw2P0NvEeYf+Lh2Lgdl52E+QntuhYPv
thzMT2C+mGmOF2ZhvgJ51/N2cvNZzF8gkb0KfpQI8xnI+eyUlcw4zG8gbvMe
GcVRmO9ALoqH9h87jfkPhPm1IslPiN8HIC4pI8Ivw+Bf2l80aw==
         "]]}, {}}, {}}},
     InsetBox[
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"\[Beta]=\\!\\(TraditionalForm\\`0.1`\\)\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0],
         FrontFaceColor->GrayLevel[0],
         BackFaceColor->GrayLevel[0],
         GraphicsColor->GrayLevel[0],
         FontSize->25,
         FontSlant->Italic,
         FontColor->GrayLevel[0]], TextForm]], "InlineText"],
      Text[
       Style["\[Beta]=\!\(TraditionalForm\`0.1`\)", 
        GrayLevel[0], Italic, FontSize -> 25]]], Scaled[{0.9, 0.6}], 
     ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      StyleBox["\"\[Delta]\"", FontSize -> 40, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     FormBox[
      StyleBox["\"A\"", FontSize -> 40, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageMargins->0.,
   ImageSize->Large,
   ImageSizeRaw->Automatic,
   LabelStyle->{FontSize -> 20},
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-2, 2}, {-9.23164006087194*^-6, 0.9937571564441673}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Thickness[0.005]], 
         Line[CompressedData["
1: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
jObBNzsw/wNIhtnX
          "]]}}}, {{}, {{{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledCircle]", FontSize -> 10], {0., 
            0.}], CompressedData["
1:eJw9VW1MU2cUfmEggWzqImyBIaDohqgLDsaWaXfYzAJulSELkY9SkQEBBlmZ
kW+2i6WySATGhxG3ZJWvMUCDwrAYxgtCFUchxcJKHSsUChNBLQIC5Wvl7p6d
5P54c9vnfZ7nnPPcXZFfB0a/RAiJMj1mpsec/F/txGDF83IJAUHBnQU3wQYl
/HHNs65QkDlJpk/I1im52Zxh5x4Ottd9dem2pnPLvsO+wghI4tmoK0RrlHSU
xMnWI6FXsVmrlEjqOhPmYmAfC2g6exqZitoE2ERzkqxQJtR12ivlGzCBmRCN
lCwUzO/5LBVYOJ6RMosJR/uPMHClbLOWKXP+rHZeLoEXbpuAS5QkDjQNvncR
AlmCpnNHUnY0UwwsveuLdPT53+VH75YBC2ezSH20Nm8PDEkhhq0XNEKzN+xA
axV0LrCAVJo8npbySx04swQXqCF2ysYs6AZksILnqTSeWAXH/AYsnHqOysQu
cVmWt8GTrTl6OTdw+dReCqx9Bc9pw2TaM+ewOzCzKXd6lkYVuZ4O4cvBjxU8
S1erJ8cdg7qhchOuwkAN2myyQ9gD/7XDQAvVyle7j/dx/j+lo2m3jglylJzf
T+gjmWA4pqWf83eGKo0vN2pvPeD8fEy3DMRHZJxRcf5NUeVPzuoUnYrz6xEV
GF+fdzeqOH/+odVj31V1y1ScHxO0tuSV8FRHFadfT0ta2t7f7vaA0ztO+2S/
h3w1puT06egMv6Hm22t9nJ5RKrA+GGvY08Px11IFeahu9L/H8R2mhc2QH/55
J8dPQz261+cay9s4Pmoqjc6SZ681c/cPUNm0pueSRQN3Xz8lx5nEJ9aVHH4f
9ZnKrHH1KOXw7lPG6uagn4rh/t9FCdX6rFlHcb9vo0S/vYgnEXHvmyjjEBT2
1+E87lxJGbH84cmdPwMuiEGTW/w91ON7KPyg2O9IMPJrgtgRJ/XV3e2ID4r6
cne+Ro73gxJat+46qEB+UHjFkw/p/cgfmlNyZ0Xmg6gPAmzFa7rSIdQPFjuq
LUMdh9EfuPvmJd6pzBH0D94hhR+X+uvQX7DwDrHzbxpD/0EgSa1Q6cexP+Cw
6J1fptZj/4Dvz+RvOz+B/QW9TnouZ3oC+w+D9g5lU5aTOB/QJK5LqhmcwPmB
mU/nxvLCJ3C+YHKy6UJruR7nD1beOKTl14/jfILXeqrZJ+IxnF+w+aN1sPWQ
Ducb0p+e+Gi3ZATnH2Iu8MXe54ZxP0AUanufEWlwf6AyueStH6L+xP2CYPmi
vVykwv0D751jqxmVStxPuMzr2LL+mgL3F9x48z+eEd7D/YaljQLpnFsn7j/U
KOOGuhbaMB8gIM35QEC1DPMDRFMN5hMnGzFfoJAvuZH0+BrmD0hnEz907K/G
fIJ2O4utG/uvYn6B1L62aimvDPMNmIw2P0NvEeYf+Lh2Lgdl52E+QntuhYPv
thzMT2C+mGmOF2ZhvgJ51/N2cvNZzF8gkb0KfpQI8xnI+eyUlcw4zG8gbvMe
GcVRmO9ALoqH9h87jfkPhPm1IslPiN8HIC4pI8Ivw+Bf2l80aw==
           
           "]]}, {}}}, {}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {
        Style["\[Delta]", FontSize -> 40, 
         GrayLevel[0]], 
        Style["A", FontSize -> 40, 
         GrayLevel[0]]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Large, 
      LabelStyle -> {FontSize -> 20}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{-2, 2}, {-9.23164006087194*^-6, 0.9937571564441673}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Text[
       Style["\[Beta]=\!\(TraditionalForm\`0.1`\)", 
        GrayLevel[0], Italic, FontSize -> 25]]], {0.9, 0.6}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6745563785213556`*^9, 3.6745564120134163`*^9}, 
   3.6745565211894817`*^9, 3.6745570111751523`*^9, 3.674557117647749*^9, 
   3.674557664792532*^9, 3.6745577306824484`*^9, 3.6745577641193075`*^9, {
   3.6745578019161777`*^9, 3.6745578486728654`*^9}, {3.674557880465523*^9, 
   3.6745579057415676`*^9}, 3.6745702306061697`*^9, 3.674570264978035*^9, 
   3.6745703022451086`*^9, 3.6745703567404137`*^9, 3.674570404180304*^9, 
   3.674570439138375*^9, 3.674570498274087*^9, {3.674714301320078*^9, 
   3.674714311431857*^9}, 3.674714353838546*^9, 3.6747146114247437`*^9, 
   3.674714712518735*^9, 3.6747148788536654`*^9, 3.674714943129938*^9, 
   3.674714998212201*^9, 3.674715055893313*^9, 3.674715089319626*^9, 
   3.674715206383542*^9, 3.67471526679611*^9, 3.674737807844298*^9, 
   3.674836958596162*^9, 3.6748372594052887`*^9, 3.674837299434018*^9, 
   3.674837353242426*^9, 3.674837394726984*^9, 3.6748989523262777`*^9, 
   3.674898982515472*^9, {3.674899014301527*^9, 3.674899038901173*^9}, 
   3.674904249727572*^9, 3.6749045410829563`*^9, 3.674905798237646*^9, 
   3.67490587753885*^9, 3.674905937138936*^9, {3.674905978533696*^9, 
   3.674906104627055*^9}, 3.674906400410857*^9, 3.674906706565954*^9, 
   3.6749067392838306`*^9, 3.674907287880481*^9, 3.674907427683852*^9, 
   3.6749074665078773`*^9, {3.674907567521474*^9, 3.67490759004572*^9}, {
   3.674907626435767*^9, 3.6749076490102453`*^9}, {3.6749078112557697`*^9, 
   3.6749078337813663`*^9}, 3.674910271444098*^9, {3.6749103244990997`*^9, 
   3.674910335296452*^9}, {3.674910748594226*^9, 3.67491076543722*^9}, {
   3.6749120633378468`*^9, 3.6749120960228148`*^9}, {3.674912855175288*^9, 
   3.674912950905654*^9}, 3.6749130054563093`*^9, {3.6749132139633827`*^9, 
   3.6749132785405493`*^9}, {3.6749133405592117`*^9, 3.674913351522428*^9}, {
   3.6749134078363047`*^9, 3.674913415175516*^9}, {3.674913449464951*^9, 
   3.6749134678858423`*^9}, {3.674913513234724*^9, 3.674913625116756*^9}, {
   3.67491365517689*^9, 3.6749137880892067`*^9}, {3.6749138187811747`*^9, 
   3.6749138310675497`*^9}, {3.674913863211537*^9, 3.6749139005059357`*^9}, {
   3.674913942825705*^9, 3.674913966002083*^9}, {3.674914221150524*^9, 
   3.6749142461942883`*^9}, {3.674914286133153*^9, 3.674914328685272*^9}, {
   3.674914403330385*^9, 3.6749144320487843`*^9}, {3.6749144622148447`*^9, 
   3.674914468452868*^9}, {3.674915417636306*^9, 3.674915440763929*^9}, {
   3.6749199388260117`*^9, 3.67491999720573*^9}, {3.674920592726295*^9, 
   3.6749206189899683`*^9}, 3.674921239293201*^9, {3.674951501695857*^9, 
   3.674951519441737*^9}, {3.674951558903618*^9, 3.674951595376794*^9}, {
   3.675611429767271*^9, 3.6756114617058783`*^9}, 3.6756114927130537`*^9, 
   3.6756115703875437`*^9, {3.6756117319829884`*^9, 3.6756117938512583`*^9}, {
   3.675611826031556*^9, 3.67561184318159*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]\[Delta]StokesMinimum", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", 
        RowBox[{"-", "0.015"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.02", ",", 
        RowBox[{"-", "0.027"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.03", ",", 
        RowBox[{"-", "0.032"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.04", ",", 
        RowBox[{"-", "0.043"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", 
        RowBox[{"-", "0.048"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.06", ",", 
        RowBox[{"-", "0.057"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.07", ",", 
        RowBox[{"-", "0.066"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.08", ",", 
        RowBox[{"-", "0.07"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.09", ",", 
        RowBox[{"-", "0.08"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", 
        RowBox[{"-", "0.092"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.11", ",", 
        RowBox[{"-", "0.097"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.12", ",", 
        RowBox[{"-", "0.106"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.13", ",", 
        RowBox[{"-", "0.115"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"experiment", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[Beta]\[Delta]StokesMinimum", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "\[Delta]"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fittingFunction", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{"a", "*", "\[Beta]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"FindFit", "[", 
    RowBox[{"\[Beta]\[Delta]StokesMinimum", ",", 
     RowBox[{"fittingFunction", "[", "\[Beta]", "]"}], ",", "a", ",", 
     "\[Beta]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"fittingFunction", "[", "\[Beta]", "]"}], "/.", "fit"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "0", ",", "0.13"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"fittingFunction", "[", "\[Beta]", "]"}], "/.", "fit"}], 
         ",", "TraditionalForm"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"experiment", ",", "theory"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveData", "[", 
  RowBox[{
  "\"\<results/eta/zeroDissipationFromAnisortopism[Stokes].csv\>\"", ",", 
   "\[Beta]\[Delta]StokesMinimum", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveData", "[", 
  RowBox[{
  "\"\<results/eta/zeroDissipationFromAnisortopism[Stokes].png\>\"", ",", 
   "result", ",", "\"\<PNG\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "experiment", ",", "theory", ",", "fittingFunction", ",", "fit", ",", 
    "result"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.674913189028655*^9, 3.674913203865263*^9}, {
  3.674914384185975*^9, 3.674914384252247*^9}, {3.6749144771936626`*^9, 
  3.674914478464404*^9}, {3.674914514444508*^9, 3.6749146737348833`*^9}, {
  3.674914722010804*^9, 3.674914833712413*^9}, {3.6749148875267687`*^9, 
  3.674914992683123*^9}, {3.67491502695462*^9, 3.674915031677932*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[{{0., 0.}, {0.01, -0.015}, {0.02, -0.027}, {0.03, -0.032}, {
          0.04, -0.043}, {0.05, -0.048}, {0.06, -0.057}, {0.07, -0.066}, {
          0.08, -0.07}, {0.09, -0.08}, {0.1, -0.092}, {0.11, -0.097}, {
          0.12, -0.106}, {0.13, -0.115}}]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVkX840wkcxyO3es6PkZW6mNGKPOVMpJN8+sFFVOpSJJl1KuSS8uPyyK8c
yZZE0YiGUBo25sf23edbytOzDpkurU4lY13RdShcS+f+eD+vf17P65+3Fef4
7jDdOXPmbJ/d/4wyC2hgKla4h0TxMhcImHL7K1foTRo9kBWHdXqP6uIZpx3Z
mRoalHE3nmOMLsAV6SvJaA0TTCj2Gv1RazxtZxYUpnGCbXeZl3VGHZE5w60O
0XjAYUZZlHZkM04f8e4+oNkDsd3BqumR3ThoXsUJ0vwMn2+4XZga4aBt5+qh
iAexsGow1FDWchIXf2+sjbNPgfx+mv+YbxLWrWWrbA5mwA6Rm11mQDrarzTv
Zc9kw/wX59bHR2dhpLXjQXfLXGBgF5fD4qJ4uUFo7mQeuHj0TZmtuogZWT2G
V+8WACVHvDhBfAnffT3gWBBcCGeF+ip/6mW8f4we9tiBDxaeLAHzWiGueV9J
/eZxCRySKPVP6PCx4IiB6JNTGSiz2YOSgBJUKNmDBsXXYX+vtH30dSlu8yp8
tPSdALwTva17GNfxbMvbe757K2C8Y6mmPFyAaU8deaq2SmB5qDkna8vxoe5B
05B5VdAhfCtMVVVgp01FKSW6Go727kuez7iB3+3r1NwgayB0SJfR5VeFVqkm
LuGrb0F4A83TgF+NI/t9gjIv1YJenbnV1pc1qAtH118buA2fijidpOEtVFqU
Wff51MGkO3VG5F+Lcen9HL2d9bCjZ3pmMPM2DncP0R9O1MP6gmcSk0YhiosS
XwiqG8DZ1Hq8eboOK9/oauP8RLAFe5O78utxotHM4gBFDGM93l5JPzTg8sAq
279bxBD5xfWY3fMGTEyzzTsT0gi5lj5Tn06IZv9x+UqnNYH0Gq8jeaEYKf4u
CqmsCfJo/2hthGK8EyBKpnAk4FTexeva0ogqVds6zsJm+JP3ksMabsRFrxp3
tsmaweEEtVSc1IT1h9wilsW0QHZ9jMWYlQSPH2t6nbW0FXKHJ+b6SSVovL3G
s/hOK7CdxzxrdzWj0S27WjK2DVwGrBX3JpqRxSuJHrCQQmt6jESb04IN70vW
mT6Wwub0j+oPrFak2Sx5N/abDAr4478M9rZisTrjc9dqAvJvGod+jGjDVMsU
quw1AVcXhRa0G0nx/MvI1MrzcvD59RGroUqK8fHKfjcWQsdE28qSDTIkczo2
DKkRvDqfHvJ8JcMrpk++ePxIQlzxQophAoHDwx88pVtJKNpTRIpOE7i2TZ/H
8iYBDSwSA5IIfMLeRKf7kvBtEvNDeRqBNGGt++QuEkqC1zxz5RKY65WeXBNM
Qjt9l/CogMCsJAcdo1gSqNdz9t77ncCnfj7eZ+NIcA40NonoJtCGefjiv/Ek
BJrkP6QqCexQ8K00p0kQpPI3BvURqLd43mYyZdbn3LQbGyAwRdSfFpNDQtCy
BzOWkwQ+yphSvOGSkPrcp/X+NIGWgaamIRdIqLjUfTJSS6D8q1e5Tx4J7+f2
vZHoyFHr29jOLJz11UPK7QZy9GV06/OLSKgqDueOG8mRP/7XTyZ8EhR7RrcW
mcjR9aql+ksJCbT7EzL1IjlmR7muOlVKgmtSQnz2EjmqNvqfeltGQrCzluVg
LkdbWrSMLZjtjyaP/EGXY4ImW6+vfLZfObcq0UqO/wEzGIAa
         "]]}}}}, {
    ImageSize -> Large, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.13}, {-0.115, 0}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\[Beta]", TraditionalForm], 
       FormBox["\[Delta]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 0.13}, {-0.115, 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(TraditionalForm\\`\\(\\(\\(-0.9053724053724059`\\)\\)\\\\ \
\[Beta]\\)\\)\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.674914660293231*^9, 3.6749146743194513`*^9}, 
   3.674914754814124*^9, 3.674914788722208*^9, 3.674914835757845*^9, {
   3.674915009741683*^9, 3.674915035045127*^9}, 3.674915097276292*^9}],

Cell[BoxData["\<\"/Users/akutlin/Documents/private/VSHOPF/Egor/diplom/wolfram/\
others/experiments/exersices/results/eta/zeroDissipationFromAnisortopism[\
Stokes].csv\"\>"], "Output",
 CellChangeTimes->{{3.674914660293231*^9, 3.6749146743194513`*^9}, 
   3.674914754814124*^9, 3.674914788722208*^9, 3.674914835757845*^9, {
   3.674915009741683*^9, 3.674915035045127*^9}, 3.674915097574024*^9}],

Cell[BoxData["\<\"/Users/akutlin/Documents/private/VSHOPF/Egor/diplom/wolfram/\
others/experiments/exersices/results/eta/zeroDissipationFromAnisortopism[\
Stokes].png\"\>"], "Output",
 CellChangeTimes->{{3.674914660293231*^9, 3.6749146743194513`*^9}, 
   3.674914754814124*^9, 3.674914788722208*^9, 3.674914835757845*^9, {
   3.674915009741683*^9, 3.674915035045127*^9}, 3.67491509781316*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{
   "*", "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", " ", "Stokes", " ", "analysis", " ", "for", 
    " ", "electrical", " ", "field"}], ";", " ", 
   RowBox[{"not", " ", "working"}], ";", " ", 
   RowBox[{"just", " ", "a", " ", "memory"}], ";", " ", 
   RowBox[{
    RowBox[{"RIP", "!"}], "\[IndentingNewLine]", "*", "\[IndentingNewLine]", 
    "*", "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*"}]}], "\[IndentingNewLine]", " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.674915234881624*^9, 3.674915256102869*^9}, {
  3.674915295604662*^9, 3.674915365278543*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[Beta]", "=", "0.4"}], ";", 
   RowBox[{"\[Delta]", "=", "0.5"}], ";", "\[IndentingNewLine]", 
   RowBox[{"potential", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["x", "2"]], "-", 
         RowBox[{"4", " ", "x"}], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "x"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Delta]", "2"]}], "-", 
         FractionBox["3", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           RowBox[{"x", " ", 
            SuperscriptBox["\[Delta]", "2"]}]}]]}], ")"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StokesGraph", "[", 
     RowBox[{"potential", ",", "0.5"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Clear", "[", 
     RowBox[{"\[Beta]", ",", "\[Delta]", ",", "potential"}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.68142897439846*^9, 3.681428994193411*^9}, {
   3.681429848092317*^9, 3.681429858371892*^9}, 3.681432985738677*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[Beta]", "=", "0.1"}], ";", 
   RowBox[{"\[Delta]", "=", "1.1"}], ";", "\[IndentingNewLine]", 
   RowBox[{"potential", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["x", "2"]], "-", 
         RowBox[{"4", " ", "x"}], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "x"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Delta]", "2"]}], "-", 
         FractionBox["3", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           RowBox[{"x", " ", 
            SuperscriptBox["\[Delta]", "2"]}]}]]}], ")"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"zeros", "=", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"zeros", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"z", "/.", 
         RowBox[{
         "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "a"}], "=", 
     RowBox[{
     "zeros", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{"c", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"f", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", 
      RowBox[{"potential", "[", 
       RowBox[{
        RowBox[{"line", "[", 
         RowBox[{"a", ",", "c"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"chunks", "=", 
    RowBox[{"sqrt", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]], ",", 
        RowBox[{"1", "-", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "c"}], ")"}], 
       RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", 
           SqrtBox[
            RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
          RowBox[{"Im", "[", 
           SqrtBox[
            RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
          RowBox[{"Im", "[", 
           RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Delta]", ",", "\[Beta]", ",", "a", ",", "c", ",", "f", ",", "zeros", 
      ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}]}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Dissipation", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"begining", "=", 
    RowBox[{"-", "1"}]}], ";", 
   RowBox[{"end", "=", "1"}], ";", 
   RowBox[{"nstep", "=", "100"}], ";", 
   RowBox[{"\[Beta]", "=", "0.1"}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ProgressIndicator", "[", 
     RowBox[{"Dynamic", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "-", "begining"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"end", "-", "begining"}], ")"}]}], "]"}], "]"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Delta]", "=", "begining"}], ",", 
      RowBox[{"\[Delta]", "\[LessEqual]", "end"}], ",", 
      RowBox[{"\[Delta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"end", "-", "begining"}], ")"}], "/", "nstep"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"potential", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox["x", "2"]], "-", 
             RowBox[{"4", " ", "x"}], "+", 
             FractionBox[
              RowBox[{"4", " ", 
               SuperscriptBox["\[Beta]", "2"]}], "x"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Delta]", "2"]}], "-", 
             FractionBox["3", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 SuperscriptBox["\[Delta]", "2"]}], ")"}], "2"]], "+", 
             FractionBox[
              RowBox[{"2", "-", 
               RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               RowBox[{"x", " ", 
                SuperscriptBox["\[Delta]", "2"]}]}]]}], ")"}]}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"zeros", "=", 
        RowBox[{
         RowBox[{"NSolve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", 
           "z"}], "]"}], "//", "Quiet"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"zeros", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"z", "/.", 
           RowBox[{
           "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "zeros", "]"}], ">", "3"}], ",", 
          RowBox[{
          "zeros", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{
          "zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"-", 
           SuperscriptBox["\[Delta]", "2"]}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{
        "zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", 
          RowBox[{"potential", "[", 
           RowBox[{
            RowBox[{"line", "[", 
             RowBox[{"a", ",", "c"}], "]"}], "[", "t", "]"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chunks", "=", 
        RowBox[{"sqrt", "[", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", 
            RowBox[{"1", "-", 
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sqrtf", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ac", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "\[Equal]", "c"}], ",", "0", ",", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", "c"}], ")"}], 
             RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"bc", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"b", "-", "c"}], ")"}], 
             SqrtBox[
              RowBox[{
               RowBox[{"potential", "[", "s", "]"}], "/.", 
               RowBox[{"s", "->", 
                RowBox[{
                 RowBox[{"line", "[", 
                  RowBox[{"b", ",", "c"}], "]"}], "[", "t", "]"}]}]}]]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"R", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", "ac", ")"}]}]], " ", 
           SubscriptBox["s", "1"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "bc"}]], " ", 
           SubscriptBox["s", "2"]}], "+", 
          SubscriptBox["s", "3"]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "1"], "\[Rule]", "\[ImaginaryI]"}], ",", 
           RowBox[{
            SubscriptBox["s", "2"], "\[Rule]", "0"}], ",", 
           RowBox[{
            SubscriptBox["s", "3"], "\[Rule]", "\[ImaginaryI]"}]}], "}"}]}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"Dissipation", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Dissipation", ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "R", "]"}], "2"]}]}], "}"}]}], "]"}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "R", ",", "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "c", ",", 
     "ac", ",", "bc", ",", "zeros", ",", "f", ",", "chunks", ",", "sqrtf", 
     ",", "potential"}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Dissipation", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}]}], 
    "]"}]}], "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"x", "+", 
        SuperscriptBox["\[Delta]", "2"], "-", 
        FractionBox[
         SuperscriptBox["\[Beta]", "2"], "x"], "-", 
        FractionBox[
         RowBox[{"2", "\[Beta]", " ", "\[Delta]"}], 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          SuperscriptBox["\[Beta]", "2"]}]]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "-", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], 
       RowBox[{"Log", "[", "x", "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Im", "[", 
           FractionBox[
            RowBox[{"b", "[", "x", "]"}], 
            SuperscriptBox[
             RowBox[{
              RowBox[{"z", "'"}], "[", "x", "]"}], "2"]], "]"}]}], 
         RowBox[{
          RowBox[{"z", "'"}], "[", "x", "]"}], " ", "\[ImaginaryI]", " ", 
         "x"}], "/.", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], "+", 
          RowBox[{"\[Rho]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}]}]}], "//", 
       "ComplexExpand"}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "0"}], "}"}]}], "]"}], ",", 
   RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.681297556576357*^9, 3.681297616348794*^9}, {
   3.681297662797558*^9, 3.681297775516645*^9}, {3.68129792565069*^9, 
   3.681297927561295*^9}, {3.6812980472018147`*^9, 3.681298225368012*^9}, 
   3.681298263059421*^9, {3.6812983969331093`*^9, 3.6812984057768307`*^9}, {
   3.681298476424748*^9, 3.681298496569812*^9}, {3.681298555590686*^9, 
   3.681298560124525*^9}, {3.6813001698081512`*^9, 3.681300231693719*^9}}],

Cell[BoxData[
 RowBox[{"DirectedInfinity", "[", 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{"Sign", "[", 
    RowBox[{"\[Delta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "19"}], "+", 
       RowBox[{"20", " ", "\[Beta]", " ", "\[Delta]"}]}], ")"}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.681297730735162*^9, 3.681297750177723*^9}, 
   3.681297793423671*^9, 3.68129796831847*^9, {3.681298051854218*^9, 
   3.681298080789176*^9}, {3.68129820599148*^9, 3.6812982266441507`*^9}, 
   3.681298264818267*^9, 3.681298408787472*^9, {3.681298487909843*^9, 
   3.681298497962433*^9}, 3.681298560762011*^9, 3.681300329877963*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "-", 
           SuperscriptBox["\[Beta]", "2"]}], ")"}], "2"], "-", 
        RowBox[{"2", " ", "x", " ", "\[Beta]", " ", "\[Delta]"}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Beta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "\[Beta]"}], ")"}], " ", 
         SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], ")"}], "3"]]}], "/.", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], "+", 
     RowBox[{"\[Rho]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}]}]}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.681300643578227*^9, 3.681300686760744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["\[Rho]", "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SuperscriptBox["\[Rho]", "2"], "-", 
          RowBox[{"4", " ", "\[Beta]", " ", "\[Rho]", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], "3"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Rho]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[Beta]", "2"]}], "+", 
             RowBox[{"2", " ", "\[Delta]"}], "-", 
             RowBox[{"5", " ", "\[Beta]", " ", 
              SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"7", " ", "\[Beta]"}], "-", 
             RowBox[{"5", " ", 
              SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "2"]}], "+", 
          RowBox[{"6", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "\[Beta]"}], "-", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "+", 
          SuperscriptBox["\[Rho]", "6"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"16", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[Beta]", "2"]}], "+", 
             RowBox[{"2", " ", "\[Delta]"}], "-", 
             RowBox[{"5", " ", "\[Beta]", " ", 
              SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "5"}], " ", "\[Beta]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "5"}], " ", "\[Beta]"}], "+", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"8", " ", 
              SuperscriptBox["\[Beta]", "5"], " ", "\[Delta]"}], "-", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Beta]", "3"], " ", "\[Delta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}], " ", 
              SuperscriptBox["\[Rho]", "2"]}], "+", 
             RowBox[{"3", " ", "\[Beta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Beta]", "2"]}], "+", 
                RowBox[{"2", " ", "\[Delta]"}], "-", 
                RowBox[{"5", " ", "\[Beta]", " ", 
                 SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
              SuperscriptBox["\[Rho]", "4"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Beta]"}], "-", 
                SuperscriptBox["\[Delta]", "2"]}], ")"}], " ", 
              SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
          RowBox[{"\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"24", " ", 
                  SuperscriptBox["\[Beta]", "4"], " ", "\[Delta]"}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}], " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"2", " ", "\[Delta]"}], "-", 
                    RowBox[{"5", " ", "\[Beta]", " ", 
                    SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
                  SuperscriptBox["\[Rho]", "4"]}]}], ")"}]}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "+", 
             RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", "\[Rho]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"6", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}], " ", 
                    SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"5", " ", "\[Phi]"}], "]"}]}], "-", 
                RowBox[{"\[Beta]", " ", "\[Rho]", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"6", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}], "*", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Rho]"}]}], 
         ")"}], "2"]}], 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Rho]"}]}]], "*", 
     "\[ImaginaryI]", " ", "\[Rho]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]", ",", "0", ",", "0"}], "}"}]}], "]"}], "//", 
  "Normal"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", 
      RowBox[{"-", "\[Pi]"}], ",", "0"}], "}"}]}], "]"}], "//", 
  "Apart"}]}], "Input",
 CellChangeTimes->{{3.681300825748028*^9, 3.6813008498964453`*^9}, {
  3.681300943287244*^9, 3.6813009755252743`*^9}, {3.681313648338166*^9, 
  3.68131367178097*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Delta]", 
    " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"3", " ", "\[Phi]"}], "]"}]}], 
   RowBox[{"2", " ", "\[Rho]"}]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Delta]", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{
  3.68130085093379*^9, 3.681300979805519*^9, {3.6813136594872713`*^9, 
   3.681313672132875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["\[Delta]", "2"]}], "4"]}], "-", 
  FractionBox[
   RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Delta]"}], 
   RowBox[{"5", " ", "\[Rho]"}]]}]], "Output",
 CellChangeTimes->{
  3.68130085093379*^9, 3.681300979805519*^9, {3.6813136594872713`*^9, 
   3.681313672406281*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "-", 
           SuperscriptBox["\[Beta]", "2"]}], ")"}], "2"], "-", 
        RowBox[{"2", " ", "x", " ", "\[Beta]", " ", "\[Delta]"}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Beta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "\[Beta]"}], ")"}], " ", 
         SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], ")"}], "3"]]}], "/.", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"\[Beta]", "+", 
     RowBox[{"\[Rho]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}]}]}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{3.6813129963247843`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["\[Rho]", "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SuperscriptBox["\[Rho]", "2"], "+", 
          RowBox[{"4", " ", "\[Beta]", " ", "\[Rho]", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], "3"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "16"}], " ", 
        SuperscriptBox["\[Beta]", "6"], " ", "\[Delta]"}], "+", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Beta]", "6"], " ", 
        SuperscriptBox["\[Rho]", "2"]}], "-", 
       RowBox[{"76", " ", 
        SuperscriptBox["\[Beta]", "4"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "2"]}], "+", 
       RowBox[{"64", " ", 
        SuperscriptBox["\[Beta]", "5"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "2"]}], "+", 
       RowBox[{"80", " ", 
        SuperscriptBox["\[Beta]", "4"], " ", 
        SuperscriptBox["\[Rho]", "4"]}], "-", 
       RowBox[{"16", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "4"]}], "+", 
       RowBox[{"72", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "4"]}], "+", 
       RowBox[{"26", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "6"]}], "+", 
       RowBox[{"10", " ", "\[Beta]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "6"]}], "+", 
       SuperscriptBox["\[Rho]", "8"], "+", 
       RowBox[{"2", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"16", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           SuperscriptBox["\[Delta]", "2"]}], "+", 
          RowBox[{"72", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "2"]}], "+", 
          RowBox[{"29", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "6"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"7", " ", "\[Delta]"}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Rho]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "50"}], " ", "\[Delta]", " ", 
              SuperscriptBox["\[Rho]", "2"]}], "+", 
             RowBox[{"44", " ", 
              SuperscriptBox["\[Rho]", "4"]}]}], ")"}]}], "+", 
          RowBox[{"\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "\[Delta]", " ", 
              SuperscriptBox["\[Rho]", "4"]}], "+", 
             RowBox[{"5", " ", 
              SuperscriptBox["\[Rho]", "6"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{"8", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", "\[Delta]"}], "+", 
          RowBox[{"15", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", "\[Delta]", " ", 
           SuperscriptBox["\[Rho]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "+", 
          RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]", " ", 
           SuperscriptBox["\[Rho]", "4"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "-", 
          RowBox[{"2", " ", "\[Beta]", " ", 
           SuperscriptBox["\[Rho]", "6"]}], "-", 
          RowBox[{
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Beta]", "5"], " ", "\[Delta]", " ", "\[Rho]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"52", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "3"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"24", " ", 
        SuperscriptBox["\[Beta]", "4"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "3"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", 
        SuperscriptBox["\[Rho]", "5"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "5"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"10", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "5"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["\[Beta]", "4"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "3"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "*", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Rho]"}]}], 
         ")"}], "2"]}], 
      RowBox[{"\[Beta]", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Rho]"}]}]], "*", 
     "\[ImaginaryI]", " ", "\[Rho]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]", ",", "0", ",", "0"}], "}"}]}], "]"}], "//", 
  "Normal"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "0"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6813130555699043`*^9, 3.681313069675292*^9}, {
  3.681313602815793*^9, 3.6813136343080587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Delta]", 
     " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
    RowBox[{"2", " ", "\[Rho]"}]]}], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Delta]", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], "-", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{"12", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{
  3.6813130744880323`*^9, {3.68131360939113*^9, 3.681313635130986*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["\[Delta]", "2"]}], "4"]}], "+", 
  FractionBox[
   RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Delta]"}], 
   RowBox[{"5", " ", "\[Rho]"}]]}]], "Output",
 CellChangeTimes->{
  3.6813130744880323`*^9, {3.68131360939113*^9, 3.681313635437546*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.68145199631677*^9, 3.681451997892318*^9}, {
   3.681452786386909*^9, 3.6814527910606203`*^9}, 3.681452846419396*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SuperscriptBox["\[ExponentialE]", "i"], "0"},
       {
        RowBox[{"r", " ", 
         SuperscriptBox["\[ExponentialE]", "i"]}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "i"}]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SuperscriptBox["\[ExponentialE]", "up"], 
       RowBox[{"u", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "up"}]], " "}]},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "up"}]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"(", GridBox[{
      {"0", "1"},
      {"1", "0"}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.681459837732267*^9, 3.681459883607297*^9}, {
   3.681459995800397*^9, 3.681460100000946*^9}, {3.6814601343228493`*^9, 
   3.681460142319614*^9}, {3.6814601908226*^9, 3.681460205920444*^9}, {
   3.681460272675582*^9, 3.6814603108568277`*^9}, 3.681460394733536*^9, {
   3.6814604345474157`*^9, 3.681460440581068*^9}, {3.681460480880287*^9, 
   3.6814604931473703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"J", ".", 
     RowBox[{"P", "\[Conjugate]"}], ".", "J"}], ")"}], ".", 
   RowBox[{"(", 
    RowBox[{"Inverse", "[", 
     RowBox[{"J", ".", 
      RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ")"}], ".", "F", ".", 
   
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Inverse", "[", 
      RowBox[{"J", ".", 
       RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ")"}], 
    "\[Conjugate]"}], ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", "P", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "1", 
        RowBox[{"Log", "[", "\[Rho]", "]"}]},
       {
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "%%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
           
           RowBox[{
            RowBox[{
            "%%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox["4", "3"], 
              SuperscriptBox["\[Rho]", 
               RowBox[{"3", "/", "2"}]]}]]}]}], ")"}]}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "\[Rho]", "]"}], "-", 
           RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}]},
       {
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{
            "%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox["4", "3"], 
              SuperscriptBox["\[Rho]", 
               RowBox[{"3", "/", "2"}]]}]]}]}], ")"}]}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "\[Rho]", "]"}], "+", 
           RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}]}
      }], ")"}], "//", "Det"}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"D", "[", 
     RowBox[{"%", ",", "\[Rho]"}], "]"}], 
    RowBox[{"2", 
     SqrtBox["\[Rho]"]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["4", "3"]}], 
     SuperscriptBox["\[Rho]", 
      RowBox[{"3", "/", "2"}]]}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%%", "-", 
   RowBox[{"%", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["4", "3"], 
      SuperscriptBox["\[Rho]", 
       RowBox[{"3", "/", "2"}]]}]]}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.681460466212132*^9, 3.6814605223517923`*^9}, {
  3.681460561453185*^9, 3.681460662996882*^9}, {3.681461912329649*^9, 
  3.681461915852222*^9}, {3.6814620160726147`*^9, 3.681462035921715*^9}, {
  3.6814620820881968`*^9, 3.68146209071596*^9}, {3.681464122320801*^9, 
  3.681464125627022*^9}, {3.681464206933189*^9, 3.681464285118939*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"i", "+", 
    RowBox[{"Conjugate", "[", "i", "]"}], "-", 
    RowBox[{"Conjugate", "[", "up", "]"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"up", "+", 
      RowBox[{"Conjugate", "[", "up", "]"}]}]]}], ")"}], " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.681460666893591*^9, 3.681462037546872*^9, 
  3.6814620967834883`*^9, 3.68146413685506*^9, 3.68146428605112*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "\[ImaginaryI]"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "-", 
       RowBox[{"Conjugate", "[", "i", "]"}], "+", 
       RowBox[{"Conjugate", "[", "up", "]"}]}]], " ", "r"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "+", 
       RowBox[{"Conjugate", "[", "i", "]"}], "-", 
       RowBox[{"Conjugate", "[", "up", "]"}]}]], " ", 
     RowBox[{"Conjugate", "[", "u", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Conjugate", "[", "r", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "i"}], "+", "up", "+", 
         RowBox[{"Conjugate", "[", "i", "]"}]}]], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"i", "+", 
          RowBox[{"Conjugate", "[", "i", "]"}], "-", 
          RowBox[{"Conjugate", "[", "up", "]"}]}]], " ", "r", " ", 
        RowBox[{"Conjugate", "[", "u", "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.681460666893591*^9, 3.681462037546872*^9, 
  3.6814620967834883`*^9, 3.68146413685506*^9, 3.6814642861813307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"J", ".", 
     RowBox[{"P", "\[Conjugate]"}], ".", "J"}], ")"}], ".", 
   RowBox[{"(", 
    RowBox[{"Inverse", "[", 
     RowBox[{"J", ".", 
      RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ")"}], ".", "F", ".", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Inverse", "[", 
      RowBox[{"J", ".", 
       RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ")"}], 
    "\[Conjugate]"}], ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", "P", ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "1", 
         RowBox[{"Log", "[", "\[Rho]", "]"}]},
        {
         RowBox[{"\[ImaginaryI]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "%%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["4", "3"]}], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}], "+", 
            RowBox[{
            "%%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ")"}]}], 
         RowBox[{"-", "1"}], 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", "\[Rho]", "]"}], "-", 
            RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["4", "3"]}], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}], "+", 
            RowBox[{
            "%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ")"}]}], 
         RowBox[{"-", "1"}], 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", "\[Rho]", "]"}], "+", 
            RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}]}
       }], ")"}], "//", "Det"}], "//", "Simplify"}], "//", "Apart"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"D", "[", 
      RowBox[{"%", ",", "\[Rho]"}], "]"}], 
     RowBox[{"2", 
      SqrtBox["\[Rho]"]}]]}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["4", "3"], 
     SuperscriptBox["\[Rho]", 
      RowBox[{"3", "/", "2"}]]}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%%", "-", 
   RowBox[{"%", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "3"]}], 
      SuperscriptBox["\[Rho]", 
       RowBox[{"3", "/", "2"}]]}]]}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.6814622163949423`*^9, 3.681462254832161*^9}, {
  3.681462290514587*^9, 3.6814623010117817`*^9}, {3.681464290474677*^9, 
  3.681464298103773*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "i"}], "-", "up", "-", 
    RowBox[{"Conjugate", "[", "i", "]"}], "-", 
    RowBox[{"Conjugate", "[", "up", "]"}]}]], " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"Conjugate", "[", "up", "]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"up", "+", 
         RowBox[{"Conjugate", "[", "up", "]"}]}]]}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", 
     RowBox[{"Conjugate", "[", "r", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"Conjugate", "[", "up", "]"}]], " ", "u"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "up"], " ", 
        RowBox[{"Conjugate", "[", "u", "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.681462295744504*^9, 3.681462301537611*^9}, 
   3.6814642994654627`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "\[ImaginaryI]"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "-", "up", "-", 
       RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "r"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "-", "up", "+", 
       RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "u"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "i"}], "+", 
         RowBox[{"Conjugate", "[", "i", "]"}], "-", 
         RowBox[{"Conjugate", "[", "up", "]"}]}]], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"i", "-", "up", "+", 
          RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "r", " ", "u"}]}], 
      ")"}], " ", 
     RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.681462295744504*^9, 3.681462301537611*^9}, 
   3.6814642996157017`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "\[ImaginaryI]"}], "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"Im", "[", "i", "]"}]}], "-", "up"}]], "  ", "r"}], "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"Re", "[", "i", "]"}]}], "+", "up"}]], " ", 
    RowBox[{"u", "\[Conjugate]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Im", "[", "i", "]"}]}], "+", "up"}]], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"Re", "[", "i", "]"}]}], "+", "up"}]], " ", "r", " ", 
       RowBox[{"u", "\[Conjugate]"}]}]}], ")"}], 
    RowBox[{"r", "\[Conjugate]"}]}]}], " ", "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.681462484668511*^9, 3.681462570179736*^9}, {
  3.6814643606124287`*^9, 3.681464390340008*^9}, {3.681464435375965*^9, 
  3.681464459124216*^9}, {3.681465224725572*^9, 3.681465231260171*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"i", "\[Conjugate]"}]}]], " ", 
   RowBox[{"r", "\[Conjugate]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "up"}]], " ", "u"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "up"], " ", 
      RowBox[{"u", "\[Conjugate]"}]}]}], ")"}]}], "\[Equal]", "0"}]], "Input",\

 CellChangeTimes->{{3.6814623234084473`*^9, 3.681462324077115*^9}, {
  3.681462581495839*^9, 3.681462613915463*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "\[ImaginaryI]"}], "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"Im", "[", "i", "]"}]}], "-", "up"}]], " ", "r"}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"Re", "[", "i", "]"}]}], "-", "up"}]], " ", "u"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Im", "[", "i", "]"}]}], "+", "up"}]], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"Re", "[", "i", "]"}]}], "-", "up"}]], " ", "r", " ", 
       "u"}]}], ")"}], " ", 
    RowBox[{"r", "\[Conjugate]"}]}]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.681462349808127*^9, 3.681462351996814*^9}, {
  3.681462385189981*^9, 3.681462471907749*^9}, {3.681464487285775*^9, 
  3.681464516215173*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Im", "[", "i", "]"}]}]], "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", 
       RowBox[{"Im", "[", "i", "]"}]}]]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"r", "\[Conjugate]"}], 
      SuperscriptBox["\[ExponentialE]", "up"]}], "+", 
     RowBox[{"r", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "up"}]]}]}], ")"}]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.681464991291127*^9, 3.681465089476758*^9}, {
  3.681465289877987*^9, 3.681465313893124*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", "up"}]]}], "   ", "\[Equal]", " ", 
  FractionBox["r", 
   RowBox[{"r", "\[Conjugate]"}]]}]], "Input",
 CellChangeTimes->{{3.681463024313778*^9, 3.6814630310959463`*^9}, {
  3.68146306374649*^9, 3.681463091931299*^9}, {3.6814631220498943`*^9, 
  3.681463173212654*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"4", "\[ImaginaryI]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "up"], "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "up"}]]}], ")"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", 
      RowBox[{"Im", "[", "i", "]"}]}]]}], "+", 
   RowBox[{"2", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "up"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", 
         RowBox[{"Re", "[", "i", "]"}]}]], " ", "u", " ", "a"}], "-", 
      RowBox[{"r", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Im", "[", "i", "]"}]}]]}]}], ")"}]}]}], "\[Equal]", 
  "0"}]], "Input",
 CellChangeTimes->{{3.6814646338936234`*^9, 3.681464686114456*^9}, {
  3.6814647209950523`*^9, 3.681464897350477*^9}, {3.681465382096583*^9, 
  3.681465499300096*^9}, {3.6814656435855513`*^9, 3.681465668035468*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6814712533680964`*^9, 3.681471254525751*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"J", ".", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"1", "c"},
         {"0", "1"}
        }], ")"}], "\[Conjugate]"}], ".", "J"}], ")"}], ".", 
   RowBox[{"(", 
    RowBox[{"Inverse", "[", 
     RowBox[{"J", ".", 
      RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ")"}], ".", "F", ".", 
   
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Inverse", "[", 
      RowBox[{"J", ".", 
       RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ")"}], 
    "\[Conjugate]"}], ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", 
   RowBox[{"(", GridBox[{
      {"1", "c"},
      {"0", "1"}
     }], ")"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "1", 
        RowBox[{"Log", "[", "\[Rho]", "]"}]},
       {
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "%%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
           
           RowBox[{
            RowBox[{
            "%%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox["4", "3"], 
              SuperscriptBox["\[Rho]", 
               RowBox[{"3", "/", "2"}]]}]]}]}], ")"}]}], "1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "\[Rho]", "]"}], "-", 
          RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]},
       {
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{
            "%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox["4", "3"], 
              SuperscriptBox["\[Rho]", 
               RowBox[{"3", "/", "2"}]]}]]}]}], ")"}]}], "1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "\[Rho]", "]"}], "+", 
          RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}
      }], ")"}], "//", "Det"}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"D", "[", 
     RowBox[{"%", ",", "\[Rho]"}], "]"}], 
    RowBox[{"2", 
     SqrtBox["\[Rho]"]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["4", "3"]}], 
     SuperscriptBox["\[Rho]", 
      RowBox[{"3", "/", "2"}]]}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%%", "-", 
    RowBox[{"%", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["4", "3"], 
       SuperscriptBox["\[Rho]", 
        RowBox[{"3", "/", "2"}]]}]]}]}], "/.", 
   RowBox[{"i", "\[Rule]", 
    RowBox[{"i", "+", "u"}]}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.6814712681302433`*^9, 3.6814712740192423`*^9}, {
  3.681471397820965*^9, 3.68147143179185*^9}, {3.681471464300214*^9, 
  3.6814714907895517`*^9}, {3.681471545214294*^9, 3.681471556824286*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6814715241618767`*^9, 3.681471562175407*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "\[ImaginaryI]"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "+", "u", "-", 
       RowBox[{"Conjugate", "[", 
        RowBox[{"i", "+", "u"}], "]"}]}]], " ", "r"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "i"}], "-", "u", "+", 
       RowBox[{"Conjugate", "[", 
        RowBox[{"i", "+", "u"}], "]"}]}]], " ", 
     RowBox[{"Conjugate", "[", "r", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "+", "u", "+", 
       RowBox[{"Conjugate", "[", 
        RowBox[{"i", "+", "u"}], "]"}]}]], " ", 
     RowBox[{"Conjugate", "[", "c", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.6814715241618767`*^9, 3.681471562282914*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "\[ImaginaryI]"}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Im", "[", "i", "]"}], "+", "u"}], ")"}]}]], " ", "r"}], "-", 
   
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Im", "[", "i", "]"}], "+", "u"}], ")"}]}]], " ", 
    RowBox[{"r", "\[Conjugate]"}]}], "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", 
      RowBox[{"Re", "[", "i", "]"}]}]], " ", "c", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Abs", "[", "r", "]"}], "2"]}], ")"}]}]}], "\[Equal]", 
  "0"}]], "Input",
 CellChangeTimes->{{3.681471576609947*^9, 3.6814716893355827`*^9}, {
  3.681471736894493*^9, 3.6814717653849773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"J", ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", "J", ".", "A", ".", "P", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/", 
   RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "//",
   "Simplify"}]}], "Input",
 CellChangeTimes->{{3.681497331841271*^9, 3.681497373713789*^9}, {
  3.681543131965452*^9, 3.681543143931534*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Conjugate", "[", "r", "]"}]]], "Output",
 CellChangeTimes->{{3.681497362738895*^9, 3.681497379009014*^9}, 
   3.681543146501061*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Inverse", "[", 
     RowBox[{"J", ".", 
      RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ")"}], ".", "F", ".", 
   
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", ".", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Inverse", "[", 
        RowBox[{"J", ".", 
         RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ")"}], ".", "F"}], 
     ")"}], "\[Conjugate]"}], ".", "J", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "1", 
        RowBox[{"Log", "[", "\[Rho]", "]"}]},
       {
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "%%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
          RowBox[{
           RowBox[{
           "%%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "\[Rho]"}]]}]}], ")"}],
         "1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "\[Rho]", "]"}], "-", 
          RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]},
       {
        RowBox[{"(", 
         RowBox[{
          RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "+", 
          RowBox[{
           RowBox[{
           "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "\[Rho]"}]]}]}], ")"}],
         "1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "\[Rho]", "]"}], "+", 
          RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}
      }], ")"}], "//", "Det"}], "//", "Simplify"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"D", "[", 
     RowBox[{"%", ",", "\[Rho]"}], "]"}], 
    RowBox[{
     RowBox[{"-", "2"}], "\[ImaginaryI]"}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", "\[ImaginaryI]", " ", "\[Rho]"}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%%", "-", 
   RowBox[{"%", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], "\[ImaginaryI]", " ", "\[Rho]"}]]}]}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.681497821608707*^9, 3.681497827873303*^9}, {
   3.681497893515629*^9, 3.681497896225254*^9}, {3.6814979673314543`*^9, 
   3.681497968929134*^9}, {3.681498028426437*^9, 3.6814981279290943`*^9}, {
   3.681498498547694*^9, 3.681498499599104*^9}, 3.68149883349009*^9, 
   3.681498873339117*^9, 3.6814989277457237`*^9, {3.681498980657981*^9, 
   3.681499017043336*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.6814985002030163`*^9, 3.681498834183144*^9, 3.681498874449984*^9, {
   3.6814990084231367`*^9, 3.681499017839079*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "i"}], "-", 
    RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"i", "+", 
          RowBox[{"Conjugate", "[", "i", "]"}]}]]}], ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"i", "+", 
         RowBox[{"Conjugate", "[", "i", "]"}]}], ")"}]}]], " ", "r", " ", 
     RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6814985002030163`*^9, 3.681498834183144*^9, 3.681498874449984*^9, {
   3.6814990084231367`*^9, 3.6814990178509493`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", "+", 
           RowBox[{"Conjugate", "[", "i", "]"}]}]]}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"i", "+", 
          RowBox[{"Conjugate", "[", "i", "]"}]}], ")"}]}]], " ", "\[Rho]"}]}],
     "\[Equal]", "0"}], ",", "\[Rho]"}], "]"}]], "Input",
 CellChangeTimes->{{3.681498192744347*^9, 3.681498278040248*^9}, {
  3.681499037325165*^9, 3.68149904698929*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Rho]", "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "i"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Conjugate", "[", "i", "]"}]}]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"i", "+", 
          RowBox[{"Conjugate", "[", "i", "]"}]}]]}], ")"}], "2"]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6814982326532507`*^9, {3.681498267888761*^9, 3.681498278561739*^9}, 
   3.68149904910606*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1", "-", "\[Rho]", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{"Re", "[", "i", "]"}]}]]}], "/.", 
   RowBox[{"\[Rho]", "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "i"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Conjugate", "[", "i", "]"}]}]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"i", "+", 
          RowBox[{"Conjugate", "[", "i", "]"}]}]]}], ")"}], "2"]}]}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.681498385081913*^9, 3.681498414773336*^9}, 
   3.681499080427005*^9, {3.6814993466926737`*^9, 3.681499350194623*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "i"}]], "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "4"}], "i"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "i"}]]}], ")"}], "2"]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.68149910360159*^9, 3.681499127254827*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "4"}], " ", "i"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "i"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.681499127683301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], "i"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "i"}]]}], ")"}]}], "/.", 
      RowBox[{"i", "\[Rule]", " ", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"a", "/", "2"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "i"}]]}], "/.", 
      RowBox[{"i", "\[Rule]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"a", "/", "2"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681499149134124*^9, 3.681499188450584*^9}, {
  3.681499221497961*^9, 3.681499233381757*^9}, {3.681499538675694*^9, 
  3.681499564825769*^9}, {3.681499622404189*^9, 3.681499633639175*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV0nk0lQkYBnBrTgtT3DLiajMtdw5HlorkQVpQluyMyaGmbMOYEI6lUbZR
7rTpDskWl5J9yXat1/1w7yeUrDkiy3AtKU3IfPPHe57zO+f56znvHjffC5fF
RERErKn7PzOmX17jxxzWL/GX8/eOM9OP/kG2rJi2FSq63C1pBocgqxf0NJG2
G/PHyfJ4fR04tObSw2nq2Bqps71E1wQrW5ocA2gGeL/KeKum6Qh+AbnsR7NE
PTds1FDFA0dE33B/pblis9zws9sbgjF9yPGFD80PgyLFZkntsfAJ7Dl/uyES
HtJV0Y7WLFyUTuySHI/FWk4TfS0wA/lipqOkLxNa2u9dOfM5qHc6tPC86T6G
TVYj1LLzwZSWlUrmP0LsN4dxBbciBKT0aiioPYb6da+x65tLMaeavolWm4ZT
JosFwQnlEDvuvL6vLgMBMb4amm2V2F0uvh46nYUnzup61crVSBlW/2NwIRvS
/MOzFlq1cH5S6Co5x4Zrj0KtBoMDFYGyaaD8MwxkekkMsuphlretYm5nPlom
NWcK/mhA2NKiWpFJAXQVs2pWf29EsJfcDXpFIZR9TwaI2zXBrcT3+YfyIvg4
6Kt77GqGpcbJIeuOYiTdOzs5NdeMWak+i1NkCdoNe7pCc1uQSPvQ2j9RitRe
qW8SHlxY+6T42KyUwdDPpLZCsRVcpe22F1bLES6mzbKraoW+uKTRkmwl/EXT
b3BdeLhsUOG3U/4lTowbdbOEPOQTsnyVHVWwobuPRgcQWIkbV+tmVGNIZvkT
RNrwJS2kS1K1Bse2Z97lhLThqzA6dNC4FlLZIlKqX9pAj9O7kGRfh8tn6PZ7
vNsxH1zq+caeg3/852blutox1mnVPHikHuGJA1Y7dDtwkMm4xqysR7b/fm/d
Bx0I+9SrW36U2qmUF6k61QGbzwYSLxoacOxemqm3Ph9Re/8UXjFqRKWcZNnT
WD60ppkDH/mN4CyfS43q5uPEUNCUoWUTiKIFLXuaAPaBmjJinU0YcXttYWoh
wMe8PO37Ts34UDSVi3gBJjaJh08ONEM9/cz9+hoBXDbIEzJXW7Ae0TlRKRRg
LGedkbPQgskgN529iiSarhH5ov5cdHf+YnTHgITKkLmm2hoXblVCz+lLJIb8
yvqUIlohiMObjVEksvPmH4Z9a8XF6gxtpcckFiMm7ApjeSg1Vk5nl5FYeufJ
KI3n4U6ixrY1yssQrlUk8MAwkzlvVU5idX0pi8PkwcpD5+C/lDdEin0UPOLB
xf1Hn9OVJBQj6YmzbB6uZo0d7a0iYRxp3cogeLhyq0S8i0PiYSTn6NONBGIc
z2xSI0hc7Nu3cXwzgcjZXZ/DKB/UiO1XkSFQYXMgk0+56r1lWJYsAQvjaQPv
NhLvTo82ZioS6Ppkm5DdTvWlJc0zVAkMzXl6fScgUc0yvfTEikDQeGhicReJ
m4svtN9ZE6g7e670K2VzMzmpXXYEzO2jk426SYysDuSmOhGoCvu56BVlCVef
ucfuBOKHC1Zmeqj+fmZICvV3Qlsnue97SchHLJkNBhGYqbF1/4nySK8DXSmE
gK+LXWAaZf+4PfXJ4QTsxO+MH3hLImmmWDI5hoAye3xKs4+E6yn53v44Audz
FawDKTNSQ9k7EwgUaqVFVFKusTA2+5tJgBbavlevn8QtNlup/y6Bm6FRrDDK
5qLSQoUHBCT/Ku2uoyzv9BvHMYmAgfPVV+uUR4pfM1ksAunX2XcNBkj8B6c8
mHU=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVjnk41Hkcx8cxkZYypmSiFHqwi6JUS33GmcaS0hJtZUvbtaIecq2jrZjZ
2jW1FaFI15jIUYwa+cw0ru+2syRHBjkaR36tK520dvrj/bzff7zez/Nauid8
6z51Go3mo8qXzht+EClPXblBNZN/5nlXpVgwykqZ84DWozlnsZsVMpyjb6Yx
TYHGZiWmuK3D7XX5JonMFUDz85ondN+EU1/JgqKYbKApZVLWxiCUFzW8j2D6
AW1iuE7/u4PoqNZae4QZArSYDCO9gFgctgq6G8aMgOSmzxWLDvEw7Hizz+/S
ZKCFJVcE52fibt20Jno/F2j2HFOrketYqM7pawjnQ27U1DQrXoiSYKvxAtkF
GDu/PLKmtRj5ugytLHkG9PD8qq+sv49R2W32RrZXQOJ7wjnvowhHba7pMB/l
wphJfREpFqO6044Zs6o8SC5wWRbqgGharjETP3wDTDM1XO1SpZj9YsWvneO3
wFKNyekMkuGOnOIQ+qgAGtWccrSsatD8n8Wc44Z34DltFVdteR16C/VFo6xC
yOW17NXRIpgwOWFbsqkI2OyXD9caPsHYwwYnTETFYLo3Be+Yy3HPvfCCgfIS
KF55LvIjswH97N26/P8uhVAx49zCrEb8V6t9s0fDPfASR6S3ZD/FNOZAnWLw
Pmgb2yWhqAn9w7LDtk2VQe5ojcT56TOsNZ7//dbpcvgltWGnY0czbtCgu04y
KkAQ0ZqxeaYF97FFESzDB9Bzq7fuT4M2LCQMufmChyAZ0b5Yb/Ecp3j9ts+s
xVCfsjqN4d+OH3Ljmug2leBlM53eGa7ATyMp8Z3uj6BeVNSXIuhAE57z1vTA
KuDyNPend3fiWOz9Q62BCM2FnKtH6S9Q2bilutNRAu6/lbPWenWjJd86kl8h
gYreNCORcw8mvG37tnyNFGbtcnb8urkHt71ja96VSsFYPDSTHdeLJ5edGdnv
+hgYYwnMIcM+XDXM73gjfwwxsZ5judV9uL4r+pWLnwzyCpQz6gdeYuBxBz31
Rhko3ur+YaejxDdC4eoLwdXgevKpzY5KJQ7qaCQOdVSDHneuxpPQftw5y5Do
HagB7QCmfqnJACpvz1jfHq+BSs85HvktAyiLJIVqx2rhPG/dq5iTg2je5etg
+7kWQkpyftjlOoRdEWXtxkl1MLZJnz74bghvCccuJfxXBxzJtYPzha9wImkw
oJhbD8NWS2Z/OjKMl5Jxzc3ZBGrLks0YVhTubjeb3T+HgCLKxz/gGwot7bkK
cz0CnLkeJZl2FD586Zdwg0GAS8P3Zo4Udnv2Pb6+iECMu0XRWjcVr0v3zbMh
cED7PTm0k0LxZU5ozhYCepkXpOPnKDw1cXd1tz+BxLNFYqeLFPp6G2gtCSBw
ym6j8nQGhT3THflXgwmUP3knYeVQqBkSNnplLwG2W47As0DFL+fHZUcRKFVs
c7hdS6Fh0qR3ZzQBTYvwBZNE9W/bbmIcR0DpYmfpIqfwGG+pJCuRQBX7TlvH
MwrTX5fSs1IJLIxV/GTQS2GIh2GbgkdAPeEw/qik0PpqvIB1lgBrotyzeJDC
ys3u3pl8An+dSO31GaHwtEBgrDhPoLpG/232uMpHTXfE6CKBPHnImteTKp/g
oxiUTiDCNlrg9EHlU9rCv3yZQHBCoNeZKQr/BxHgfkg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 0.2}, {-0.874456063549512, 0.24887854729690154`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.681499162152862*^9, 3.681499189040596*^9}, {
   3.681499222289435*^9, 3.6814992340969963`*^9}, {3.681499547043501*^9, 
   3.681499565244635*^9}, 3.681499634568129*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J", ".", 
  RowBox[{"F", "\[Conjugate]"}], ".", "J", ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.681499409761117*^9, 3.6814994286723967`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     RowBox[{"Conjugate", "[", "i", "]"}]}]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.681499429634058*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", ".", 
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/", 
   RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "//",
   "Simplify"}]}], "Input",
 CellChangeTimes->{{3.6815597976705017`*^9, 3.681559834469769*^9}, {
   3.6815598828117647`*^9, 3.681559901978303*^9}, 3.681560037362919*^9, {
   3.6815691501496267`*^9, 3.68156915235643*^9}}],

Cell[BoxData["r"], "Output",
 CellChangeTimes->{{3.681559826743469*^9, 3.681559834819066*^9}, 
   3.681559902313837*^9, 3.681560038396564*^9, 3.681569152794935*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", "A", ".", "P", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/", 
   RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "//",
   "Simplify"}]}], "Input",
 CellChangeTimes->{{3.681560880644897*^9, 3.681560881550864*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Conjugate", "[", "r", "]"}]]], "Output",
 CellChangeTimes->{3.681560882316361*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"Inverse", "[", "F", "]"}], ".", "A", ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", "A", ".", "P", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Inverse", "[", "P", "]"}], ".", 
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   RowBox[{"Inverse", "[", 
    RowBox[{"F", "\[Conjugate]"}], "]"}], ".", 
   RowBox[{"Inverse", "[", "A", "]"}], ".", "F", ".", 
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "1", 
         RowBox[{"Log", "[", "\[Rho]", "]"}]},
        {
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "%%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
            RowBox[{
             RowBox[{
             "%%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               FractionBox["4", "3"], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}]}], ")"}]}], 
         RowBox[{"-", "1"}], 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", "\[Rho]", "]"}], "+", 
            RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}]},
        {
         RowBox[{"\[ImaginaryI]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
            
            RowBox[{
             RowBox[{
             "%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               FractionBox["4", "3"], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}]}], ")"}]}], 
         RowBox[{"-", "1"}], 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", "\[Rho]", "]"}], "-", 
            RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}]}
       }], ")"}], "//", "Det"}], "//", "Simplify"}], "//", "Apart"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"D", "[", 
     RowBox[{"%", ",", "\[Rho]"}], "]"}], 
    RowBox[{"2", 
     SqrtBox["\[Rho]"]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["4", "3"]}], 
     SuperscriptBox["\[Rho]", 
      RowBox[{"3", "/", "2"}]]}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%%", "-", 
    RowBox[{"%", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["4", "3"], 
       SuperscriptBox["\[Rho]", 
        RowBox[{"3", "/", "2"}]]}]]}]}], "//", "Simplify"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"Inverse", "[", "F", "]"}], ".", "A", ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", "A", ".", "P", ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Inverse", "[", "P", "]"}], ".", 
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   RowBox[{"Inverse", "[", 
    RowBox[{"F", "\[Conjugate]"}], "]"}], ".", 
   RowBox[{"Inverse", "[", "A", "]"}], ".", "F", ".", 
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "1", 
         RowBox[{"Log", "[", "\[Rho]", "]"}]},
        {
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "%%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["4", "3"]}], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}], "+", 
            RowBox[{
            "%%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ")"}]}], 
         RowBox[{"-", "1"}], 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", "\[Rho]", "]"}], "+", 
            RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}]},
        {
         RowBox[{"\[ImaginaryI]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["4", "3"]}], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}], "+", 
            RowBox[{
            "%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ")"}]}], 
         RowBox[{"-", "1"}], 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", "\[Rho]", "]"}], "-", 
            RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}]}
       }], ")"}], "//", "Det"}], "//", "Simplify"}], "//", "Apart"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"D", "[", 
      RowBox[{"%", ",", "\[Rho]"}], "]"}], 
     RowBox[{"2", 
      SqrtBox["\[Rho]"]}]]}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["4", "3"], 
     SuperscriptBox["\[Rho]", 
      RowBox[{"3", "/", "2"}]]}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%%", "-", 
   RowBox[{"%", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "3"]}], 
      SuperscriptBox["\[Rho]", 
       RowBox[{"3", "/", "2"}]]}]]}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.681555687002882*^9, 3.681555720787979*^9}, {
   3.681555808239493*^9, 3.6815558164060707`*^9}, {3.681555925147224*^9, 
   3.681555934240823*^9}, 3.681555972393238*^9, {3.681556504584565*^9, 
   3.681556554822976*^9}, 3.681558819555484*^9, {3.681558912359304*^9, 
   3.6815589137114573`*^9}, {3.681560051551054*^9, 3.681560057613502*^9}, {
   3.681560102002757*^9, 3.68156011115096*^9}, {3.6815601558326283`*^9, 
   3.681560174767969*^9}, {3.681560236843309*^9, 3.6815602441073008`*^9}, {
   3.6815602838774233`*^9, 3.681560299118123*^9}, 3.681562389134678*^9, {
   3.6815625353742847`*^9, 3.68156253914011*^9}, 3.6815626720898743`*^9, {
   3.681565196555994*^9, 3.681565246880065*^9}, {3.681568103309639*^9, 
   3.681568142635923*^9}, {3.681568175724371*^9, 3.681568185304991*^9}, {
   3.681569103022702*^9, 3.681569128761097*^9}, {3.6815703498837233`*^9, 
   3.6815703584153557`*^9}, {3.681570456374261*^9, 3.681570494393001*^9}, {
   3.681570647161707*^9, 3.681570673798147*^9}, {3.6815707139061737`*^9, 
   3.681570717684136*^9}, {3.681570929135714*^9, 3.681571043419155*^9}, {
   3.681571336182741*^9, 3.6815713594058323`*^9}, {3.681571728403*^9, 
   3.681571767601982*^9}, {3.681571964474659*^9, 3.681571981164023*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "i"}], "-", "up", "-", 
      RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"i", "+", "up"}], ")"}]}]], " ", "r"}], "+", "u", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"Conjugate", "[", "i", "]"}]}]], "-", 
         RowBox[{"r", " ", "u"}]}], ")"}], " ", 
       RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}], 
   RowBox[{"r", " ", 
    RowBox[{"Conjugate", "[", "r", "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.681560412014312*^9, 3.681562405183753*^9, {3.6815626671165457`*^9, 
   3.681562672668738*^9}, {3.6815652313685904`*^9, 3.68156524850961*^9}, 
   3.681568143626668*^9, {3.681568176290436*^9, 3.681568186029111*^9}, 
   3.6815691301813602`*^9, 3.681570418417591*^9, {3.681570466509667*^9, 
   3.681570494934917*^9}, {3.681570652735876*^9, 3.681570674531081*^9}, 
   3.6815707210521803`*^9, 3.681570980568056*^9, 3.681571043928609*^9, {
   3.681571336875984*^9, 3.681571359964328*^9}, {3.6815717301462927`*^9, 
   3.681571737106976*^9}, 3.681571772612691*^9, 3.681571981938036*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "i"}], "-", 
      RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", "up"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "up"], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", "+", 
           RowBox[{"Conjugate", "[", "i", "]"}]}]]}], ")"}], " ", "r", " ", 
       RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}], 
   RowBox[{"r", " ", 
    RowBox[{"Conjugate", "[", "r", "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.681560412014312*^9, 3.681562405183753*^9, {3.6815626671165457`*^9, 
   3.681562672668738*^9}, {3.6815652313685904`*^9, 3.68156524850961*^9}, 
   3.681568143626668*^9, {3.681568176290436*^9, 3.681568186029111*^9}, 
   3.6815691301813602`*^9, 3.681570418417591*^9, {3.681570466509667*^9, 
   3.681570494934917*^9}, {3.681570652735876*^9, 3.681570674531081*^9}, 
   3.6815707210521803`*^9, 3.681570980568056*^9, 3.681571043928609*^9, {
   3.681571336875984*^9, 3.681571359964328*^9}, {3.6815717301462927`*^9, 
   3.681571737106976*^9}, 3.681571772612691*^9, 3.681571981944227*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "i"}], "-", "up", "-", 
     RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"i", "+", "up"}], ")"}]}]], " ", "r"}], "+", "u", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"Conjugate", "[", "i", "]"}]}]], "-", 
        RowBox[{"r", " ", "u"}]}], ")"}], " ", 
      RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}], 
  RowBox[{"r", " ", 
   RowBox[{"Conjugate", "[", "r", "]"}]}]]], "Output",
 CellChangeTimes->{
  3.681560412014312*^9, 3.681562405183753*^9, {3.6815626671165457`*^9, 
   3.681562672668738*^9}, {3.6815652313685904`*^9, 3.68156524850961*^9}, 
   3.681568143626668*^9, {3.681568176290436*^9, 3.681568186029111*^9}, 
   3.6815691301813602`*^9, 3.681570418417591*^9, {3.681570466509667*^9, 
   3.681570494934917*^9}, {3.681570652735876*^9, 3.681570674531081*^9}, 
   3.6815707210521803`*^9, 3.681570980568056*^9, 3.681571043928609*^9, {
   3.681571336875984*^9, 3.681571359964328*^9}, {3.6815717301462927`*^9, 
   3.681571737106976*^9}, 3.681571772612691*^9, 3.681571981962576*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"4", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "up"}], "-", 
      RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "i"], " ", "u"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"Conjugate", "[", "i", "]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "up"], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", "+", 
           RowBox[{"Conjugate", "[", "i", "]"}]}]]}], ")"}], " ", 
       RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}], 
   RowBox[{"Conjugate", "[", "r", "]"}]]}]], "Output",
 CellChangeTimes->{
  3.681560412014312*^9, 3.681562405183753*^9, {3.6815626671165457`*^9, 
   3.681562672668738*^9}, {3.6815652313685904`*^9, 3.68156524850961*^9}, 
   3.681568143626668*^9, {3.681568176290436*^9, 3.681568186029111*^9}, 
   3.6815691301813602`*^9, 3.681570418417591*^9, {3.681570466509667*^9, 
   3.681570494934917*^9}, {3.681570652735876*^9, 3.681570674531081*^9}, 
   3.6815707210521803`*^9, 3.681570980568056*^9, 3.681571043928609*^9, {
   3.681571336875984*^9, 3.681571359964328*^9}, {3.6815717301462927`*^9, 
   3.681571737106976*^9}, 3.681571772612691*^9, 3.681571981988089*^9}]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{97, Automatic}, {Automatic, 75}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3625, 115, 170, "Input"],
Cell[4186, 137, 10725, 271, 494, "Input"],
Cell[14914, 410, 3721, 95, 338, "Input"],
Cell[CellGroupData[{
Cell[18660, 509, 763, 22, 102, "Input"],
Cell[19426, 533, 115379, 1853, 1197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134842, 2391, 368, 12, 47, "Input"],
Cell[135213, 2405, 441, 14, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135691, 2424, 3688, 114, 323, "Input"],
Cell[139382, 2540, 587, 12, 28, "Output"],
Cell[139972, 2554, 370, 6, 28, "Output"],
Cell[140345, 2562, 27493, 476, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167875, 3043, 4458, 119, 422, "Input"],
Cell[172336, 3164, 441, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172814, 3177, 4361, 118, 422, "Input"],
Cell[177178, 3297, 294, 6, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177509, 3308, 4333, 118, 319, "Input"],
Cell[181845, 3428, 905, 14, 33, "Output"],
Cell[182753, 3444, 19649, 335, 413, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202439, 3784, 3717, 81, 114, "Input"],
Cell[206159, 3867, 117711, 1894, 1207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323907, 5766, 6847, 178, 346, "Input"],
Cell[330757, 5946, 1697, 30, 35, "Output"],
Cell[332457, 5978, 1126, 18, 28, "Output"],
Cell[333586, 5998, 21079, 370, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354702, 6373, 5843, 164, 346, "Input"],
Cell[360548, 6539, 1639, 29, 35, "Output"],
Cell[362190, 6570, 1071, 16, 28, "Output"],
Cell[363264, 6588, 26748, 462, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390049, 7055, 9393, 238, 634, "Input"],
Cell[399445, 7295, 379, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399861, 7307, 8026, 173, 301, "Input"],
Cell[407890, 7482, 3007, 42, 33, "Output"],
Cell[410900, 7526, 48015, 823, 413, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458952, 8354, 4078, 112, 233, "Input"],
Cell[463033, 8468, 4452, 88, 376, "Output"],
Cell[467488, 8558, 393, 5, 28, "Output"],
Cell[467884, 8565, 392, 5, 28, "Output"]
}, Open  ]],
Cell[468291, 8573, 1037, 20, 369, "Input"],
Cell[469331, 8595, 1483, 40, 108, "Input"],
Cell[470817, 8637, 4227, 122, 327, "Input"],
Cell[475047, 8761, 7403, 197, 506, "Input"],
Cell[CellGroupData[{
Cell[482475, 8962, 2213, 62, 138, "Input"],
Cell[484691, 9026, 672, 15, 28, "Output"]
}, Open  ]],
Cell[485378, 9044, 1082, 32, 61, "Input"],
Cell[CellGroupData[{
Cell[486485, 9080, 7678, 194, 250, "Input"],
Cell[494166, 9276, 1410, 39, 53, "Output"],
Cell[495579, 9317, 374, 11, 51, "Output"]
}, Open  ]],
Cell[495968, 9331, 1039, 31, 61, "Input"],
Cell[CellGroupData[{
Cell[497032, 9366, 7981, 197, 244, "Input"],
Cell[505016, 9565, 1619, 43, 53, "Output"],
Cell[506638, 9610, 348, 10, 51, "Output"]
}, Open  ]],
Cell[507001, 9623, 533, 8, 284, "Input"],
Cell[507537, 9633, 2173, 59, 130, "Input"],
Cell[CellGroupData[{
Cell[509735, 9696, 3357, 100, 229, "Input"],
Cell[513095, 9798, 690, 19, 36, "Output"],
Cell[513788, 9819, 1240, 32, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515065, 9856, 3342, 103, 229, "Input"],
Cell[518410, 9961, 1184, 34, 36, "Output"],
Cell[519597, 9997, 1037, 28, 36, "Output"]
}, Open  ]],
Cell[520649, 10028, 1141, 32, 36, "Input"],
Cell[521793, 10062, 577, 17, 36, "Input"],
Cell[522373, 10081, 1035, 31, 36, "Input"],
Cell[523411, 10114, 693, 21, 36, "Input"],
Cell[524107, 10137, 364, 9, 45, "Input"],
Cell[524474, 10148, 1044, 30, 36, "Input"],
Cell[525521, 10180, 341, 5, 199, "Input"],
Cell[CellGroupData[{
Cell[525887, 10189, 3353, 105, 266, "Input"],
Cell[529243, 10296, 94, 1, 28, "Output"],
Cell[529340, 10299, 1014, 29, 36, "Output"]
}, Open  ]],
Cell[530369, 10331, 906, 29, 36, "Input"],
Cell[CellGroupData[{
Cell[531300, 10364, 523, 12, 48, "Input"],
Cell[531826, 10378, 176, 4, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532039, 10387, 2894, 84, 177, "Input"],
Cell[534936, 10473, 171, 3, 28, "Output"],
Cell[535110, 10478, 894, 25, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536041, 10508, 717, 21, 36, "Input"],
Cell[536761, 10531, 668, 21, 36, "Output"]
}, Open  ]],
Cell[537444, 10555, 853, 25, 36, "Input"],
Cell[CellGroupData[{
Cell[538322, 10584, 516, 16, 36, "Input"],
Cell[538841, 10602, 307, 10, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539185, 10617, 1020, 29, 36, "Input"],
Cell[540208, 10648, 4660, 88, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544905, 10741, 213, 5, 30, "Input"],
Cell[545121, 10748, 213, 6, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545371, 10759, 576, 13, 46, "Input"],
Cell[545950, 10774, 164, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546151, 10781, 464, 11, 48, "Input"],
Cell[546618, 10794, 126, 3, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546781, 10802, 7358, 201, 462, "Input"],
Cell[554142, 11005, 1437, 33, 55, "Output"],
Cell[555582, 11040, 1347, 30, 55, "Output"],
Cell[556932, 11072, 1397, 32, 55, "Output"],
Cell[558332, 11106, 1412, 31, 55, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
