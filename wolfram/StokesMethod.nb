(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    432997,       8059]
NotebookOptionsPosition[    430771,       7988]
NotebookOutlinePosition[    431131,       8004]
CellTagsIndexPosition[    431088,       8001]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S", "[", "\[Alpha]_", "]"}], ":=", 
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {"\[Alpha]", "1"}
      }], ")"}]}], ";", " ", 
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {
        RowBox[{"-", "\[ImaginaryI]"}], "0"}
      }], ")"}]}], ";", " ", 
   RowBox[{
    RowBox[{"W", "[", "a_", "]"}], ":=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Exp", "[", "a", "]"}], "0"},
       {"0", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "a"}], "]"}]}
      }], ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Stokes", ",", " ", 
    RowBox[{"Antistokes", " ", "and", " ", "phase", " ", "operatoes"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Q", "[", 
     RowBox[{"a_", ",", "b_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"z", ",", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", 
          FractionBox[
           SuperscriptBox["a", "2"], "4"], "-", 
          FractionBox[
           RowBox[{"D", "[", 
            RowBox[{"a", ",", "x"}], "]"}], "2"]}], ")"}], "/.", 
        RowBox[{"x", "\[Rule]", "z"}]}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"From", " ", 
      RowBox[{"f", "''"}]}], "+", 
     RowBox[{"af", "'"}], "+", "bf"}], "\[Equal]", 
    RowBox[{
     RowBox[{"0", " ", "to", " ", 
      RowBox[{"y", "''"}]}], "+", "Qy"}], "\[Equal]", "0"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"U", "[", 
     RowBox[{"Q_", ",", "g_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"z", ",", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Q", "[", "g", "]"}], 
           SuperscriptBox[
            RowBox[{"D", "[", 
             RowBox[{"g", ",", "x"}], "]"}], "2"]}], "-", 
          RowBox[{
           FractionBox["3", "4"], 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"D", "[", 
               RowBox[{"g", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "2"}], "}"}]}], "]"}], 
              RowBox[{"D", "[", 
               RowBox[{"g", ",", "x"}], "]"}]], ")"}], "2"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            FractionBox[
             RowBox[{"D", "[", 
              RowBox[{"g", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "3"}], "}"}]}], "]"}], 
             RowBox[{"D", "[", 
              RowBox[{"g", ",", "x"}], "]"}]], ")"}]}]}], ")"}], "/.", 
        RowBox[{"x", "\[Rule]", "z"}]}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"From", " ", 
      RowBox[{"f", "''"}]}], "+", "Qf"}], "\[Equal]", 
    RowBox[{
     RowBox[{"0", " ", "to", " ", 
      RowBox[{"y", "''"}]}], "+", "Uy"}], "\[Equal]", 
    RowBox[{"0", " ", "with", " ", "variable", " ", "exchange"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"line", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"a", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "t"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.674476606646324*^9, 3.674476724517366*^9}, {
   3.674476763840727*^9, 3.674476913796777*^9}, 3.674479786775261*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StokesGraph", "[", 
    RowBox[{"Q_", ",", "l_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "zeros", ",", "zerosColor", ",", "poles", ",", "polesColor", ",", "z", 
       ",", "x", ",", "y", ",", "i", ",", "zerosPlot", ",", "polesPlot", ",", 
       "plotRange", ",", "streamPoints", ",", "stokes", ",", " ", 
       "antistokes"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"zerosColor", "=", "Blue"}], ";", "\[IndentingNewLine]", 
      RowBox[{"polesColor", "=", "Red"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"zeros", "=", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Q", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeros", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"z", "/.", 
          RowBox[{
          "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"zerosPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Re", "[", 
              RowBox[{
              "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{
              "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "zerosColor"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"poles", "=", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Q", "[", "z", "]"}], 
           RowBox[{"-", "1"}]], "\[Equal]", "0"}], ",", "z"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"poles", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"z", "/.", 
          RowBox[{
          "poles", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "poles", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"polesPlot", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Re", "[", 
              RowBox[{
              "poles", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}], ",", 
             RowBox[{"Im", "[", 
              RowBox[{
              "poles", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "poles", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "polesColor"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plotRange", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"Re", "[", "zeros", "]"}], "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{"Re", "[", "poles", "]"}], "]"}]}], "]"}], "-", "l"}], 
           ",", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"Re", "[", "zeros", "]"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{"Re", "[", "poles", "]"}], "]"}]}], "]"}], "+", 
            "l"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"Im", "[", "zeros", "]"}], "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{"Im", "[", "poles", "]"}], "]"}]}], "]"}], "-", "l"}], 
           ",", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"Im", "[", "zeros", "]"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{"Im", "[", "poles", "]"}], "]"}]}], "]"}], "+", 
            "l"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"streamPoints", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{
                "zeros", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{"Im", "[", 
                RowBox[{
                "zeros", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
             "zerosColor"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{
                "poles", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{"Im", "[", 
                RowBox[{
                "poles", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
             "polesColor"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "poles", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "Automatic", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stokes", "=", 
       RowBox[{"StreamPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], 
             RowBox[{"Arg", "[", 
              RowBox[{"Q", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], 
             RowBox[{"Arg", "[", 
              RowBox[{"Q", "[", 
               RowBox[{"x", "+", 
                RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}]}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         
         RowBox[{"StreamPoints", "\[Rule]", "streamPoints"}], ",", 
         RowBox[{"StreamScale", "\[Rule]", "None"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"antistokes", "=", 
       RowBox[{"StreamPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Arg", "[", 
                RowBox[{"Q", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}], "+", 
               "\[Pi]"}], "2"]}], "]"}], ",", 
           RowBox[{"Sin", "[", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Arg", "[", 
                RowBox[{"Q", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}], "+", 
               "\[Pi]"}], "2"]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"plotRange", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         
         RowBox[{"StreamPoints", "\[Rule]", "streamPoints"}], ",", 
         RowBox[{"StreamScale", "\[Rule]", "None"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{"stokes", ",", "zerosPlot", ",", "polesPlot", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
        RowBox[{"Show", "[", 
         RowBox[{"antistokes", ",", "zerosPlot", ",", "polesPlot", ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6745386292643237`*^9, 3.674538630652726*^9}, {
  3.674545626557875*^9, 3.674545627010276*^9}, {3.6745469345776377`*^9, 
  3.674546940386848*^9}, {3.674901344779477*^9, 3.674901361671092*^9}, {
  3.674901406354232*^9, 3.6749014868958397`*^9}, {3.674902856708682*^9, 
  3.674902991513502*^9}, {3.674903038123839*^9, 3.674903099488549*^9}, {
  3.674903161239295*^9, 3.674903191041003*^9}, {3.674903228333252*^9, 
  3.6749032320838213`*^9}, {3.6749032687370863`*^9, 3.6749032870191936`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sqrt", "[", 
    RowBox[{"f_", ",", 
     RowBox[{"{", 
      RowBox[{"x_", ",", "start_", ",", "a_", ",", "b_", ",", "end_"}], 
      "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"roots", ",", "chunks", ",", "cuts", ",", "i", ",", "t"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roots", "=", 
       RowBox[{
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", 
             RowBox[{"f", "[", "t", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{"a", "<", "t", "<", "b"}]}], ",", "t"}], "]"}], "//", 
        "Quiet"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cuts", "=", 
       RowBox[{"{", "start", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "roots", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Re", "[", 
             RowBox[{"f", "[", 
              RowBox[{"t", "/.", 
               RowBox[{
               "roots", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "]"}], "]"}], "<", "0"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"cuts", ",", 
             RowBox[{"t", "/.", 
              RowBox[{
              "roots", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}]}], "]"}], ","}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cuts", ",", "end"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"chunks", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "2"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "cuts", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"chunks", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "2"}], "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox[
                RowBox[{"f", "[", "x", "]"}]], ",", 
               RowBox[{
                RowBox[{"cuts", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "-", "1"}], "\[RightDoubleBracket]"}], "<", "x",
                 "<", 
                RowBox[{
                "cuts", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 RowBox[{"f", "[", "x", "]"}]]}], ",", 
               RowBox[{
                RowBox[{"cuts", "\[LeftDoubleBracket]", 
                 RowBox[{"i", "-", "1"}], "\[RightDoubleBracket]"}], "<", "x",
                 "<", 
                RowBox[{
                "cuts", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Piecewise", "[", "chunks", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.674714152816938*^9, 3.674714155868926*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "0"}], ";", 
  RowBox[{"\[Delta]", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Delta]", "2"], "+", "x", "+", 
        FractionBox["3", 
         RowBox[{"4", 
          SuperscriptBox["x", "2"]}]]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StokesGraph", "[", 
  RowBox[{"potential", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Beta]", ",", "\[Delta]", ",", "potential"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.674712709363482*^9, 3.6747127933870153`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ratnz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Solve was unable to solve the system with inexact \
coefficients. The answer was obtained by solving a corresponding exact system \
and numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.674836935217712*^9, 3.674898928999556*^9, 
  3.674903126642671*^9, 3.6749034318237257`*^9, 3.6749042267638903`*^9, 
  3.674904518442679*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzsu3k0V//aNy5FkoqKZiIVKkOiCZcUSSVpklIqKVIaVJQmESUkQ0hlnlIR
ktBlyDzPQ+Z59jGP8du753d3P+tt/VbrrO9z/866n+c5/5z1Otfe731d12vY
Nh3+s4bq55mZmJgy5zIx0f/tFNS6b+DqtLj8gpzTxVd/IYGBrSVPa/HKQfiP
OoHha2j0Ovr6VdO/qHQ/GsNrl+1l6Dqs/OpP42Z3dVG6rqu4fCabwwjOWFk/
uYiqu+pst6Vx/55lW+h6zU25Ffw+Q2jid5+Pvv/rnpvWNE448XEHXWd6p3tk
W8QAbnPNXU/Xpb9Mv0Vja07RTXT9ncSOuYeS+3BT/A0Vun5uxmkfGuecGJSk
6wmfd7EZlPRgGlZK03XP0BxjGp8L2LyKrpsFc/Oy53Xj1f3lq+n6WffBIhqv
KcgRpOvT5ixXkelrx5qI9GV0/djRF0qyFD4XK7+Wriu1K1pf4W7B7dqqM+j6
xPrNmoYU1lWb/7vOpuX/1GNzAwpoS+2m60PvH9h6UvitfbwyXf/oufNo/vEa
lOzfwUvXxzTvKBVQ2LBSXISuGy8/8IBtuBQ9iyd/729r922h2RR2Uo74H/2V
Bjw2kMnDRU9vHKXvV579htOQwpLNB/jouv3d50s8pyXiON8JVbreHOr72pfC
9jE7lOh66pzF3HsPuWOZyd1VdJ3jbkWOAYX9hpt20/Wg8/PeuJZFgpHpdg66
bvXyR7wzhZUEnq6m6xrMSQ4zdDIgLOzUQbruocusRuNrTk9W0vXcHSan314u
AqF9dmp0nVVqZuAbCl/a9e73/tfpNs/ZLlwJBzTP/54vEXnmbKWw8eGVwnTd
amT03aXrdaDivH0rfb/oiycN+hSOXefHT9d9SuJublVrguTjexTo+jdhnfgt
FO7QZgW67sW5L2SmaBt857kuR9e3LAixY6WwKufI7/rMoH7NotldEHx/6Hd/
jktGmwopLPj0f+xP8WCHfV4/A56Nxv/Wx+UxOzkaf9QbEKPrTds0gr/W98KQ
Wx0rXR8pqr9FY6/vmb/nt32378m7/H5YkOgmRtfnbV+zncbnbsYK0fX12uwR
T+IHYT/v+810vTx2XI7GPu++7KHrH07rpF4OGYYsnaD9dH2Hy4fDNF468VOa
ridv77I4/G4UgsJM2X7P13dNm8Yje+F3/y6Kjh7bbcdhkD18DV2fL2q4jsal
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
py4TofII7stfF6PzqHL6ZW8qj8BgUb0vnUfLdMftqDwCjn1HrOg8autK695u
PgB1vNtZTag8OvC2KIHKI3h53eQ8nUe/djEdpvIIOgTns0lQeRQUJtK1rHoQ
jMdzo9WoPDrcdtieyiOo8d5/h86j8Zb7slQeQcENp6d0Hvl8CuidrzQMCYLy
jnQeKcvlh1B5BAkNayo/UHnU5jh2m8ojaCkT3Ejn0bMwQWUqj4CPZZkGnT/v
T3aJU/kDhQYOAXT+iCqEFlL5A94sLPZ0/hy20uo0ZxmHS5ND00r+M3+m5AOZ
H6RfSD+RfiP9SOYFmSdk3pB5ROYbmX9kHpB5QeYJmTdkHpF5ReYZmXdkPpP5
TeY76fd/1c//12//Xr+R+fdP/Tf5y6ki3Sr1P35f8DA+zdi6SCYVdS4s8Lpv
54R2eg0zdX1T8NzI0Vl7tHwxpDq3e0NTEsa1r+7eVRuOmzvTOhIXJmLTzEDH
cK7v2OtWPVsl4DvKzn+hf7o5AZNPs8q0cKVC7fdnve4FHqja5nqw+0IqCHbO
7Rf9YIoTMSw7hi+lgmXmlyRzDXns65zcs90nHBO2lr1gWZ2MS7jFDFQSvPBo
Qk9J3cJUZJ6QZMv8+BiqMuJX1b1IxW2htZyD6sFQUNp6/JtzCgo1xMgGz4qC
4IpxtlCJJFTOMbGNkYyHVZdP6j18Ho/OY5vXeVX8gDcmySmyUVGorMph+H5/
CswPlXjdmPIB/6v38e+e71/lQyzJxiuyvA04pa4Iqp9pgCP5q3f7U1gkp3pD
snsDBDhbu/lR+MT+VHHv9w3g7NEzx6K7DVzF1Y5MzqoDJ72tS65xtoO9Zug+
Q91qePBAz+3193Y4kb6zaCtrOKhbr6xQ+NEOMffCnxrZesB5g0L7Xgrb+T1S
cdVygsunrr45mkTlmCu70m2Zx/ByQ07KOQpbNj8Rs466A0qNK+vtVrfDrLm2
S1NuV0C1qPJ73+3t4MzV+kbmaRmcV/p07bN6O8ieTyjOcSuGwnVHpb/ot8Mw
29Kkh8EFoBczsTf0UTv4f758den3XDhVpM/i49QO6uK34nLeZsCXW25nbf3a
Yez6DOH8uCQw8LA5dzW8HWw1OaSMfyDMc0iVNKD6YbXjMt7ffxm4IpfVGlK4
4dnFM3OK90zZD7k/cr9/29+/e97/1fz9bX+KSyKiHm0eQo9pHlnyG3phkV4F
p63vEBaNWdwu7+uBLc+PXV66cBiFhjdsM4ju+fPz6rnieWcMatvBtHfFlUUu
THGPz6/6GS1C/XxrM1CltIQpLihpg6hbWgewjgRWbLkziPc3P+8786oXnO57
b73+fQDHpUSjYEYfCB1nGTsgPYkP2n7VLrjWOeV+8nzy+VskF0mpFQ6jquvr
EskTPWCdXHq9ymkEPUxyVvNMMEBKyX1NksYoLndNE1zgwwDJz2fUZqwYw7ih
p4Ui+xlgxS7MeF03hoLr+PW/9XbDxgO9LM8Dx3Fp47fnhw92g9jDWPvCa7/w
7IpaTsEvXWD+5pnDze0TOK3QYVCIvwt45zpLL50xgJmfk/bfvtEHHeLiJzfv
pb6Dk196CjdOnY+838hpMyPkRx3+KNuiZVwxBrdLmrUm2mrxP94f5PPJ/mwP
iM+3fNOH87ZnFnkc6Idum0tLmHt68ZmvWnx5dD9wdtReC1DsxTWsK3VKhAeA
oeew7M7rHqw9ue27s+sA2M98yHO7l4EY+C5n8exB6P3hf/adCgO/dxxw0bo/
CPy7uJmadndj1eq9i8/3DUKt7MHK+vFO5Dtif0BMfwjsJGctkg3vQGad2Xbu
dUPgXKtwYfByO86U8Vprc3IYRndPZM0TaUPxyiNLppUOw1fd7XuftrTgnd1r
dIYPj0Cu7GjV2cBmbL6zgO1GwQjsytr21N2gCW/fXsFy7dAozOf+tUd6YyMK
ye460Vs4CjLcO/jFR+vxV4Yl+9CxsSn8kfyS/JP6IPVD6p30A+mXv+n7b/r4
P52/v+m/cmRFKL3vEaXIXGrfGKi3jY3m412W9R2KD3wSHqRD8yXKJCBL8fXn
9+m7zWxOUfmApo4mF+n8UAq7Vk3lB2qkryqj8+WcAI8klS+oIytfSPPHmfhp
kOIPl73UlaD5Kxg+EUPxh+cyZnXT/hVY/LyZ8u+U+8nzyeezzx5eR+trovpd
OaUv3PNRSY/Wn297jRClP9z11nk5rU/BVY1rKX3iYHmzIq3fu0+CSyj9oo7O
tkZa3+rrrlyl9I1222xHrSn/n/ac5UD5H69q1VvQ+bDYcN0iKh+QM2urJZ0v
Zo4F41S+UN8ZFqK0/r69H1Oj9IcLnFQO0/rr7872ofQ3ZT7y/qdMDxtofqpa
PmhT/GD+hx2a/xM/U55P9pe3wYCd1vfBaQvKKH3jj2upXLS+c1o9flD6xjbt
0/q0vq8EGl+g9I07x8QX0vreIO8WT+kbc+Vl59H6nvuRpYDSN76UMD9B63te
37fXlL5x7uvZvY2UvjfO+7aM0jeeFjbPofV9k3n6IUrfqLjWeBat70auBy8p
fWPXh87jtL5tzRato/SNJ2Ib4mh9Xz2cuZzSNz47oiVH69va8s0FSt9459ax
fFrf1cusZ1P6RrGVBaa0vg24nNgofaOfeq4srW/xi9GnKH1j1ZwD3LS+RVdO
zKH0PYU/kl+Sf1IfpH5IvZN+IP3yN33/TR//p/P3N/0/dI7h0mbUwBW1/gNj
Oeb4dndia1dTDUzkiHntNfJCiU+fUsKKa0C53196+sdPqDY2fabtL8QmhY6K
OMk6LNpuf8ukIAnvVuwfevyqFteKmhwImFWLr/L9t+QmJ+GykMzonANxEBzJ
3i3/ph4XvryR+9LzAxTu4jG997YeV8TzCF2KqAHp4sJyt4XfcOa23SlzzWuA
V/GmfMgK6ntoyQ7ftwo1sNg6XSlwdQrGxLOZS9VVA4es/sMtAplYIX3p+V2+
avihcffbiSe5aBfcG24uWwUv+GYVQ3c+Fgq8+6UmUwlt16tepu4twmDXq7o1
yyogR32MMfC6BIVdIraeKy+HjS/UvxaXleFJ35j4WbfKgHm8OMRk8icqxVtM
FHSVgKyzVXkVRxU2tXMy4ncVw41PYUunT6tB9/qMGelrC4Gxr833/Zxa9Hix
UWawKA88z+z1/TRQi29lI8/lumRD8tbTxhhSh+M3opkfc6aBG//H+9bS9Sgu
Fnir8vgT3PC42XVEuR6viS2d0T8zHOPCOdyav9Sh+AKBlVucarHKptujLCIG
PSzttERaatHftyhZpj0Iw07073Doq8UOlou/ZKS9US6swEd0rBYfS13WWTPi
jG5eeiMKuumYc2owXIa1Fl+uecyfXpSN3J9c+GV1a7Ci/srtmfZ56Oamd4fd
sBrZE2NCrHwLsOe60zyR/krc6fum7YNPEbqJ98QpalXgr4nph2KelSDriqh9
6e/LUTq3uzXsWBlKbun8HFldil2Lz3xynP0T+c1s+uaMFGMHp3/NK88K7Fki
31AyUoi93ZzRgwur8Afve82VDfnI+uWtXOj5anR+kX20OTIX7SUCIur31GB+
1eHQ422Z6FofuWNwohaZxY1SvjPdx5ClsZ6qk7Woolu+mJPjMmYPSKaco/CX
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
4Y5W2nH1Rtx1p7JDz74Kj0ZlXHRRoN538bPcxqxrUOzdmZwWoXrkVOZlrkqu
xcXr+X6psNThB6VGr18/6rBt/Z596rNr8a6znJ5idD3uzF9xnZO9Bu9sFjkS
EdiAylu2VbJPr8JA4QDd/S8akZvb9vHZ+p/oVzLEGnu5CUvqb/GzRJQhR7DG
uzD5Zry+f9O03NslWOGXLiYxqwUbDyYLJK4rwkWp+79KpbTgxp71T6py87Fa
PDE3LKcdtW0Sdy7fGIjOk5XnT5m3Y89yzdD1B6P+Wif5yLpqded0zDdYKfM6
UTaNgep69wJKlBPBlrtlt7d5D87hChI4V5kKVsZWm6xUevHZtbWHG/izIU5i
TcH0JX1ocTtK//HLPCh/ua9uaVcfNg+a80WPFoBp55OV+Sn9U/RA6qVymX9d
eXQRJHVqrFpnSH0XrTqqoni9BPwy05kfLR7E88rPgg7xl0HMnE+j7ImDqJK8
/djpzHLw3VSqxHRlCJ/Fflk2zagCuk+0SBxYMoxvrWath0VVIHB2h6dq0jC6
Rx0Y4YmshryrRV/zr1Hvx2vqowpBNWAV6uz+iXcUJ5a+iWLcroV9g4aWpRmj
yOO5RstuVx3Mr95trG4yhppcT+yPcNaDlgr7Vo6149h9TNlcXqj+j19Ifkj+
SH5J/kl9kPoh9UXqj9QnqV9S36T+Sf+Q/iL9R/qT9C/pbzIvyDwh8+Zv/v2v
1ut/dz1eZTj/vNb+BKqvDDPS9fPA6FzicWNWW6x/Jc5TvS8PKl+7POhx8sES
A4Hy/Sx5UGx+5XPN/Ri8bH+x6/TKHBicL77hrmQypgofvcybnwYZaiftBvQy
cTnb4eT3NgmQpXjw/hhzHjYUNapJaGiDwfyFVfvMveDRtCcV2tJ5YJIpFzKw
4BOov0xycC/Lhcs5UeFnZubi6fsXx42VvoDFW5mqRx25yJppKVwa6gJXVTVa
hEOiYWz+WNUtnxy4cLEh1VwnEbaGvvOOM8gEza6K+otSqZAZJVIZJ5YKq5lY
P/3alAsetl2KZvWfwa4++d3Ol7lQdKL23K5HAdDYklZzKiUXInluqa2f5QwG
wtNWxZzIhGAVPG6SSvV/Eg2DtHMg6Dq/0a0TUVPmIfsj+yf3Qe6L3Ce5b5IP
kq+/7fNf3dff5v9X91mTEcE7y78ZxpSGi/wjW+DDtRWNGzybIYGDKXRFSjOs
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
Accdw5huqP+1KTRkSr9knby/MCbzbdhAB77/+jSf63gZhJXNOy39uR3fVc3Q
TuWugNJQw87RC22Yrn98xZukKhB37GGRW9yKYv6rm80jaqb0R/Zf2h9p1tDa
jPZSyjeLG2vhJfPlM2u+NOFh+bfSDzjr4VQsp9f0e41omrJ23QOpBti+2nuX
qVwDzshoUC8+3Ahy+Sc0mMfqcPfnU8GeV5rg/snrHTPDatG9gVd6wqwZRhOb
mGx0a3Da2dWMdvsWOMt1fd2qdVV4S+R6uf7rVrBixL1Bs59YUdYc2ObRBh5x
AR6Pi0txLofegp/e7fDxkfAmwzXFOD9+gEfGpwNCJHdqmF0vwIZhm/A5Xp1g
OVF4O8MpF7XGqufXfOoCwW6uV7fvZ+DZ4jUbo+Op7wjZ735+lUk4skviac4l
Bji3fOQV3BOHrNZpZUnDDHiy122pq2sEPkpc5Cr3tAd4g9lm9Ob54gujY0WR
vL1Qyn3/xgSHNkq/tbKViOqFpWmy/JvkveGa/Psf7zX6IFSM+enb22EwbnTv
Suh4H/wYrO+TZokFuyOxZlk+1HtguVfANcFEWF+nP43p4ACcNLXPPeiZAoVL
n7QpTxuEhPVDbmHiWZBpnlbA2zQIXFIPbSpV88C0O7VgWfYQbHY7KrSpvwBq
Nc3bIGoYSpIm3mhZFcN48tgia/8RMKjqcGTnLIOOHUOGc1xG4SK7U1i73U9I
LZNjLXk6BmOzfhaNalX++T4i9UzqnfQD6RfST6TfSP+S/ib9/zd//1P9/199
/5+lb8GtWTvM2xh4gzfwxKtXueh8LXAmv3wPVg4vi3B7n42FTsOpd116MGv3
1zmS8pnYheZ5jiIMfFYlxbkxvgCnHzf3qyvrQmnlpiq9vmKsEis2l/06jsFv
R8eCTELxpGKS19V1vTh/cY6YgVMq2lx8dvpZai/ylLwyvKqZhCEiZfzMhn2Y
+HDrZ17vBGSPVODg4u3H6Vw/K448jsM09/Gh4fx+fHnhy/23cbG47JLM97Fn
AzhfROKQlVw09j/ympA8N4hLD9b5bmeJwj2Fw89eygxhqZvgp749kWhvVtYT
wjOMgnlpEwodEaj0oSpeqGcYi2O9BWMywpGVbX5KVcYINtd1sbSUh+F1pXtZ
kX6jeDCh2fIARxjGNW0K/DxzHHd5yEs96wtFhotBvPixMVwdbDc33uTzFExe
T+5j0831KU6anajxfbqwBH85csg7PVtR1o6GotXBzSqVeJS5Z8NP1Ta848zJ
FihRg7neZe7Tv7dg1ZUbXw0ia6f0JzVzX/S58xV/fl5o49D+FuPQjFdqns64
X1aH5+wuexbpNGHuvBSpF4P1KLeOWV1VohFZf4ns857biDdrVmSuGanHOQER
uyP5m9COS04oPaYOmRVEH4+KNeMs/pr73qa1yDR+4vjrrS3YOHdG7uctNTiz
WC7dVa4Vd345tJlRW4k8ucVFA3JtOG2DY+vO/T9xvVGD6lyZdrTw/lYRG1GK
CvuE2BQ2d2DukhTOU8uK8aSG1zR78U6ssYuyELxfgHdc1LePre1CXd4HMXu4
cnFGYSzLvKvdaGDfobNWOw0tzHhfxJ9moMcKuZwZEQmYwn0xad3sHqxNaDQ8
pvAVU7yjBZS+9WC6471grVw/tBQ//zb0Si8ql4zouB67CrPiQkTnifShWuuz
9zvnBME+9bcFpzr6UDJaoGXP669wsHmDjUdEP7aIiflwtMSDdMgnxnXzAfQN
iPz6UyMFllTdcDA6NoipKUES8z0yYezqnZu+okMYqGQ+s7QqF8ovJjqzsA/j
qblsR5LeFkBeGMfHlZPD6NOXoqalXgzBRkvNTg6O4J3BxNF3I6Wg+75jflT3
KDbwjKvbOP4EVo3H2tLtY1P0SOqV1DOpd9IPpF9IP5F+I/1I+pX0M5kPZH6Q
+fK3/Pin/vi/+v/vrX8yz869jtoTVjWBOsODsz9Fj+BwQxtbrNokLihKkgp7
MoI5tyMbVyROYvupemMj9ZE///5Tavs4X8adYdwWOnJMJJYp7qW8agnTi2F8
8M76w5IDTHHGQs8HO7qHseJDYQlH/y+cJyGy+pb4KPrtFHs+yP4LHU4vFjYM
GMUnuWfrn68aR8UiluqHq8am3E+eTz5f5rH9qWTZMQzjl/gU5jk2pV9yHnLe
vftWNma7j+L+q+bD7iNjeGxD++irNaN//v3Zv9o/2c/fzv/aJrmX7qd2NGXs
Y/QItJ02YKf77eH2X031C8/55JvpeR6uLbpIzfPn/5+w8VwLJzU/tK/L1KD3
YzD6IIXaD7AsOPaR3t9dhzdN1P7g22uVMrp/eZfihVT/wJHjYUP3byDvuZjq
H74tyW2g+285aJBN9T/lfvJ88vmX3o2epuetPnbrLTXvlH7Jech5zzz2bqL3
k7nOq5naD4SWz6j6n/bzL/dP9vO381vCOQNKf9TDWPDXhmzHGmCJ3tWU9rIe
rM5c1dK6Uwtsys38rOfq4X1zatJF7TrYwmLxbUNoHXg2abelaDTDeJJD+XJo
gI9u91+ub62A4k17bOZ8boDsg5M81r6loKkH+4xn1sOeXkmHE5oN0Kz4Wnl+
ch1sy1+ep6HRBPqN/KNs85ug/mn3joHbQVPOJ6/naRexblrTCLr21zmv9xbA
D53LWZlWjTBj9/Yrm65lw7U9105XFDSC6cdIyZM9PyBE/tU+iRnU+V38vGey
vkzph5yPnJ/cz9/m/af9kftQ+MxVPhjeC+UfN7pYXq3A9HmPC+tCe+Gd9rxp
R96VY+zN/Uv3f+qF4dO6K3iySzF365Fiq7heYK13tpm7pwaNiwsSZuf2gpFs
S8e143Uoalhvdta3F97Uz0jpvpKDFaObpV4F9kKliOKaXIXCKeeRdfJ+sh+y
X2aLTZxaDb0Q0lBdOsO7Ac/m9CxrmugFJtive7i9CV0iZjf58fXBuX3iTtob
W9Hr/2nvzKOxbNu2TypSaZCSRKWBSoMKUXZFSJFQqUSTTGWsqCgzhSKZU4YS
UgkpGXbzPM/zPI8XLvPQd17fWl/vu05/tO51r/t7vud73j+PdZ7ncez7tm+/
7bwuut1CVnpvpUagetlTDT7TXvzQJxhYajwCYqENbzbH92OO7lI96Q8jcFv2
B1P87CCyfPtVPNU0Agcmnp014xpCgyzWgv5NVHDPn47pPTKMNy5qtivfogIn
VaJly6URvLSBw/dmBBWe/ZywYL9Pxf/z817fIzuVs6RH/6jfv1s/ZjNxfUtl
q2Gf42OzT6GD8HmVxqL9RlUQ0Rl1qKB4ABLoz3TPeFaCpco1sJvqhwF5oaMt
acUQW56wyC26G4qrV2zoFMyDXdzZzhfzu8CqeDxef18a7Pm81Z5LqgsEvhh5
6W6ogNP10+aqr/rg3JuFJY+syyAmJux54aFe6GgcnTx98gesjvd48j21E36M
/RQ7F+QP8ofx0VuBTti/P7xyVZUfSt6Ii6Z73gG7SsfcmRjqschIds/cxTqI
3ibz/vG+RmSeKHeCsWqITrrgdu1tGw60NH+IdvoBavxPa+mnYtBO61qYcUk7
XGW/VLFjXSrGwf5vGnNtMBysq29gkYNjXxTSAle2wXL9yvU9lUUobdGeMUbk
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
XxEnPIk=
       "], {{{}, {}, {}, {}, {}}, {{}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138,
            139, 140, 141, 142, 159, 160, 161, 162}]}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{172, 189, 190, 203, 204, 205, 206, 207, 237, 238, 239, 240,
            241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 
           254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 
           267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 
           280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292}], 
          LineBox[{300, 317, 318, 331, 332, 333, 334, 335, 365, 366, 367, 368,
            369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 
           382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
           395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 
           408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420}], 
          LineBox[{438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
            450, 451, 452, 453, 454}], 
          LineBox[{475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
            487, 488, 489, 490, 491, 492, 493, 494}], 
          LineBox[{498, 499, 500, 517, 518, 521, 522, 539, 540, 541, 542, 543,
            544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 
           557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568}], 
          LineBox[{572, 573, 574, 591, 592, 595, 596, 613, 614, 615, 616, 617,
            618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 
           631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642}], 
          LineBox[{693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
            705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 
           718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 
           731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742}], 
          LineBox[{758, 759, 760, 765, 766, 774, 775, 776, 777, 778, 779, 780,
            781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 
           794}], LineBox[{809, 810, 811, 816, 823, 824, 825, 826, 827, 828, 
           829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 
           842}], LineBox[{865, 866, 881, 882, 887, 888, 889, 890, 891, 892, 
           893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 
           906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 
           919, 920, 921, 922}], 
          LineBox[{955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
            967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 
           980, 981, 982, 983, 984, 985, 986}], 
          LineBox[{1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
            1013, 1014, 1015, 1016, 1017, 1018}], 
          LineBox[{1022, 1023, 1024, 1029, 1036, 1037, 1038, 1039, 1046, 1047,
            1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056}], 
          LineBox[{1060, 1061, 1062, 1067, 1074, 1075, 1076, 1077, 1084, 1085,
            1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094}], 
          LineBox[{1129, 1130, 1131, 1132, 1133, 1148, 1149, 1150, 1151, 1152,
            1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 
           1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 
           1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 
           1186, 1187, 1188, 1189, 1190}], 
          LineBox[{1204, 1205, 1206, 1211, 1222, 1223, 1224, 1225, 1226, 1227,
            1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 
           1239, 1240, 1241, 1242, 1243, 1244}], 
          LineBox[{1248, 1249, 1250, 1267, 1268, 1283, 1284, 1293, 1294, 1295,
            1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 
           1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 
           1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326}], 
          LineBox[{1330, 1331, 1332, 1349, 1350, 1365, 1366, 1375, 1376, 1377,
            1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 
           1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 
           1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408}], 
          LineBox[{1412, 1413, 1414, 1424, 1425, 1426, 1447, 1448, 1449, 1450,
            1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 
           1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472}],
           LineBox[{1499, 1502, 1503, 1510, 1511, 1524, 1525, 1526, 1527, 
           1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 
           1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 
           1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 
           1561, 1562, 1563, 1564}], 
          LineBox[{1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
            1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602}], 
          LineBox[{1609, 1610, 1611, 1618, 1628, 1629, 1630, 1631, 1632, 1633,
            1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 
           1644}], LineBox[{1656, 1657, 1666, 1667, 1668, 1669, 1670, 1671, 
           1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682}],
           LineBox[{1701, 1702, 1703, 1704, 1705, 1718, 1719, 1720, 1726, 
           1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 
           1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 
           1749, 1750, 1751, 1752}], 
          LineBox[{1761, 1762, 1763, 1768, 1769, 1770, 1782, 1783, 1784, 1785,
            1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 
           1797, 1798}], 
          LineBox[{1804, 1816, 1817, 1822, 1823, 1855, 1856, 1857, 1858, 1859,
            1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 
           1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 
           1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 
           1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900}], 
          LineBox[{1906, 1919, 1920, 1928, 1958, 1959, 1960, 1961, 1962, 1963,
            1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 
           1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 
           1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 
           1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006}], 
          LineBox[{2010, 2011, 2012, 2020, 2021, 2022, 2025, 2026, 2027, 2028,
            2029, 2030}], 
          LineBox[{2034, 2035, 2036, 2044, 2045, 2046, 2049, 2050, 2051, 2052,
            2053, 2054}], 
          LineBox[{2064, 2065, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
            2078, 2079, 2080}], 
          LineBox[{2086, 2087, 2088, 2091, 2092, 2104, 2105, 2106, 2107, 2108,
            2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116}], 
          LineBox[{2154, 2155, 2156, 2161, 2162, 2163, 2165, 2166, 2183, 2184,
            2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 
           2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 
           2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 
           2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 
           2229, 2230, 2231, 2232}], 
          LineBox[{2236, 2237, 2238, 2253, 2254, 2257, 2258, 2267, 2268, 2269,
            2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 
           2281, 2282, 2283, 2284, 2285, 2286}], 
          LineBox[{2290, 2291, 2292, 2307, 2308, 2311, 2312, 2321, 2322, 2323,
            2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 
           2335, 2336, 2337, 2338, 2339, 2340}], 
          LineBox[{2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
            2367, 2368, 2369, 2370, 2371, 2372}], 
          LineBox[{2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
            2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 
           2420, 2421, 2422, 2423, 2424}], 
          LineBox[{2432, 2433, 2434, 2439, 2440, 2453, 2457, 2458, 2459, 2460,
            2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 
           2472, 2473, 2474, 2475, 2476}], 
          LineBox[{2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
            2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 
           2525, 2526, 2527, 2528, 2529, 2530}], 
          LineBox[{2536, 2537, 2548, 2555, 2556, 2559, 2560, 2593, 2594, 2595,
            2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 
           2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 
           2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 
           2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 
           2640}], LineBox[{2646, 2647, 2658, 2665, 2666, 2669, 2670, 2703, 
           2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 
           2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 
           2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 
           2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 
           2748, 2749, 2750}], 
          LineBox[{2754, 2755, 2756, 2771, 2772, 2773, 2774, 2775, 2776, 2807,
            2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 
           2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 
           2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 
           2841, 2842, 2843, 2844}], 
          LineBox[{2848, 2849, 2850, 2865, 2866, 2867, 2868, 2869, 2870, 2901,
            2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 
           2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 
           2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 
           2935, 2936, 2937, 2938}], 
          LineBox[{2964, 2965, 2966, 2970, 2971, 2972, 2973, 2974, 2975, 2976,
            2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 
           2988, 2989, 2990, 2991, 2992, 2993, 2994}], 
          LineBox[{3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022,
            3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030}], 
          LineBox[{3038, 3039, 3040, 3047, 3089, 3090, 3091, 3092, 3093, 3094,
            3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 
           3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 
           3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 
           3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138}],
           LineBox[{3144, 3163, 3164, 3171, 3172, 3205, 3206, 3207, 3208, 
           3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 
           3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 
           3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 
           3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 
           3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 
           3271, 3272, 3273, 3274}], 
          LineBox[{3280, 3282, 3283, 3284, 3285, 3298, 3299, 3300, 3301, 3306,
            3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 
           3318}], LineBox[{3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 
           3336, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 
           3362, 3363, 3364, 3365, 3366}], 
          LineBox[{3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389,
            3390, 3391, 3392}], 
          LineBox[{3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416,
            3417, 3418, 3419, 3420}], 
          LineBox[{3424, 3425, 3426, 3430, 3431, 3432}], 
          LineBox[{3436, 3437, 3438, 3442, 3443, 3444}], 
          LineBox[{3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3479,
            3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 
           3491, 3492, 3493, 3494}], 
          LineBox[{3498, 3499, 3500, 3503, 3515, 3516, 3517, 3518, 3519, 3520,
            3521, 3522, 3523, 3524, 3525, 3526}], 
          LineBox[{3530, 3531, 3532, 3535, 3547, 3548, 3549, 3550, 3551, 3552,
            3553, 3554, 3555, 3556, 3557, 3558}], 
          LineBox[{3564, 3583, 3584, 3591, 3630, 3631, 3632, 3633, 3634, 3635,
            3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 
           3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 
           3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 
           3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 
           3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 3690, 
           3691, 3692}], 
          LineBox[{3710, 3711, 3712, 3719, 3720, 3721, 3722, 3723, 3724, 3727,
            3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 
           3739, 3740, 3741, 3742}], 
          LineBox[{3746, 3747, 3748, 3757, 3758, 3771, 3772, 3773, 3774, 3775,
            3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 
           3787, 3788}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.1046392715392375`, 0.}, {0.30731963576961885`, 
         0.7645320913100637}, {
         0.30731963576961885`, -0.7645320913100637}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], PointBox[{{0., 0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.18015537345975, 
     1.3828357376901312`}, {-1.8400481932305763`, 1.8400481932305763`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
tufYriGsOHM0e7pnLeaJfIy2+jSEobt373w1oxGdOfdzKalwJD+ve/7doXEE
GrpmXI2dz5Fc6mp0VEttBHbdkjhHmzOMXMZXChbTmvBipZXM+vPDOBAfW6BT
34KKQi+7ZXKH8bwh165luW2o/3O/snvQGG6pN3z4zJAKFoP6FobdY/hC8aNb
OAcN0nQvWzorjqNz7qIjfh9oYJIVu2260zj2vXk6+8R+Omy9LNxXnzWOHV9W
vBwboYO5dsB5IYEJNOfP5rUOHoR8bd2Ed8cm0DLUyRB3McDBekHDo9AJnLip
69pCY4B5DkdlGXUCF/mtvN/ozwTfXfMCrdUn8Tt1oXX8NtZ9eFhT/dy9SWz2
FFE+1T0EmcXPPv6omMTnZ9ZVt3sPT9k/qQ/pF+nnS3gbW716BK+Bxbb3sR2o
/l2Eg+o5gtuUnqsJvezCsJ67+qIDI9jHuSM25FYPtlX0hxw4OIpOb29EHjjX
h70O+8ZffRvFoYcvns6XGUCbZpvzdUvHkNtL0MtblIKrpMWnjdwZw+LwWalx
fFScp6WfNNA3hgatV9den6CitBpvcKrhOD7bdLq4qZ+G5P7I/ZP6kPqR+pL6
k/6Q/pH+7lt54MvVD+Mo/7ozIyiMjrrWPz4+HR3HyZcKyzaeHsS5y7Z5LNCb
wGkq25r9ljIweH2XNuPNBKpYCfMV/2IgT0h0+2b6BAZtjfWvfsJEVQef8+06
k6jxaYF3/J4hVP3oXzLoP4kCSar9ZtzDyKOdLGYxMIlC5itjW5OHsWQp58oA
SY7kvWEVtSrXRvDuT4W1m/dwJP+4t8fKWGEUl8sOSs124Eg24r53xqBnFOcV
CYQ53Purf0jml8w3mX+y/+R8IOcHOV/I+UPOJ3L+kfORnG/k/CPnIzk/yflL
zmdyfpPznZz/5PlAnjfkeUSeV393HpHz8//teflP5+H/afPgv3v/JrPrbX90
U2Bgl7RkaHMNPJ6erth0iQKzP1sm3umpAZ4TmztnMAZgh+d0FzlqDdhoi1zf
MDAAxmaWC6xZeKhTh6lSMwAZPk1Ld9FqoNfS9f2TvAGI5m7h72NhFBHX7/s+
AKvc6Rec6TWwynp6v27YAFxQch2eNlgDT3meHwt3HoD+E5T7Iyy8dr9g2BzD
AUi1vbfdjVED6c9d1d7tHgDJwyPNT1mY5mqSq751ABrvfoHXLCzfNN2oUnkA
BI5bVgT9bzD5efJ5+vM8B75GUsEhXTb9Q3YN5Ia5Kodb0WDdw7j8Oe9rwGex
44T3ejq8O3ORautW89efX3fmzPyeYjx1veR+yP2SepB6kXqSepN+kH6Rfv7b
/T3e80OnpH0C/VU5f+fJ+QA8jo/f0TWBGbNSNn41fw+JEeqPhPomUO3GXnuz
6k8Qnta7hZPFW33+nGf8whfVadpWBwYm0DHcoeNkZcxf/31L+vSW3d/39oGi
qZ2kcBpHsvqjQ/PSDXvB+H5/6aMPHMmu3yv8dWb2gPcB0RS+iQlsubahaOW8
NLi2Tutw46JJ9B2+DvLh+WC7LeHQ002TaLwkVUt6aSm4eLp+W3l2EmUCVlam
tFTCzoyk7W2vJzExhdvj3dsasA71TZD6PYmHm7Zp34tuAGcRHi/aXI7k6WUl
A7dnNwMzViDuiQJHcl3cOq3MU61QGtkUlbKDIzlhqUohz7c2uCe8QyHUhCN5
v/ayB65zOkCUvh20WP0KWdVzQ+FkJ9zR+FXq+4gjOTzHN3Dx564p+yH3S+pB
fp98Pg72ZzycnMCEHYk2BddTMf/MKu4HwpNYwSG3chtXPp7dQdugx9LDfYuO
293UEvR6sWdHyZlJVDrWP1fkZiWaaXc8s33J0utriAW/cg3yqNiYPaqcRIZB
UnOxbQMmKttXe/NxJF96/WPh+bwmNGZEbHuxjiP51YadOw8sbcW6w6pnthpy
JC+ZKU1PutSOKg3X1PtvciQ/m81/pwk78azn5Zw3YRzJ07ZxciTx9fzld0ZJ
YmH0jj4k9SP1JfUn/SH9I/0l/SfzQeaHzBeZZzLvZB/+Lu//3f0SoVJPLHXq
QbeJox+m2wzj/YdjXbs6u1HaXqpEf94wrhk1fDD3YDfe46KNZ0QOoTwlZaG3
XyEOxxfJZnq0o8Mew7zFvHmoXBljnunTippXus84Bb/FrodNmtrnc5BafSuO
IlyGB4x1Px/52YW++xuXjmwuwd1jfOkXL3Wi0RnbdubnOhwaPVZcwxzAT/7u
Y3vSfyPv3shbpZwDmNEaprGmrgqfWzA4ni3qw6fbf8d6cVbgFcMHXrdW9qAw
c+9gPU8XavbMLEwsZeKtnqVol9CBv8VujsiPMPDC76yuwovteNjnqLPYMgaW
pek49C1twy+HX5rc0h3E728DzhQXtuDoKU1/s0t0FHcp/Orwf7X35tFUv1/f
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
BUwuXvnwaxwXzOod2f9lECdbuHJrp/FR8lLncKn6Qyhon317/lo+ymu/hW77
BoZw+tn7+reM+Sju0SLvfd6yca7OD4u5jnyUV5xWra/bh1FmkmNM+Vs+So7d
J/s3XcOo6Be0LyuNjyIprbPe2puDpF9IP5HzipxnpB9Jv5J+Jv1OzgNyXpDz
hJw35Dwi5xU5z8h5R85Dcl6S85Sct+Q8Juc1Oc/JeU++X8j3D/l++tv75/+2
efX/2jz47/avbYxVj71xC+o+tIoWX01Dpf1vAz+mNuO8pZXzmW/60fH81bys
Fc3oc+h0PKWuDzOKpxzaUpmJ2zrnHLa5WYl6NZW7g07kYrmV1q7jBTX4Xmhf
a+3CXzhVMXZguVgDfhNZZsjk552ju1307Y/1YmlwoTbGNOD7UHkrn9Zu9BLq
KPh+vg5fTxqv4xzvQvsp6b+qFWtwU56TjHVLB94ZyjBxlW1FzqlkrAunYbLI
HTfF3lZsqFxrl7+Bjjsvph8e6avE+LLyTU6WVJTSL76tnVqO72ueZjMq25Dx
rl891rcUu2oif+XqteIvqwWP9t4txnfl63X5kpvx8MrNz3ucC9H200blSrmm
CfWT/ZH9p+9W0lqS0Ia595784Eug47EnzLfOd9txUfNLi4sajAn5yfX7GWPK
M20Z6JyY3J86dwRXC6uVJtxl/Pn8jayf7G/Mnsr0tKbiA4dHv6sKGOjNXBbz
QbMDJU5pMj5YMnHhjG+NyTKdmBUenvWDwcS3qTeuNnM68ZlJrZ7WPRbOm/7y
6uzyLrxjlHFXRmIA79E5jTrh3fg0xOb8wa8D2HspKOaeRw9mHM4V7t06iHu8
PrDyeTzOP91+oKF4EMtKt2cvV+3DE05zzRRODSE2sA+8m9WPnhAk9oM7hFNC
U/3XtfXj3ZiPbt+esNHsfd4B2mEamtbxRVLlhvHIzq2J5Vk0HI/NfH6ZNyef
7lO7sWcdHV20aEqG+zjITk59u/c1HctvubjdpPLmsMfPBY38DJx04epT7k3u
BP5J/ZD6IvVH6pPUO+kH0i9/0+ff9PH/On9/03+xq+NUVxc+yvvFdpkZSn6Q
tPLb+vzbfJQXUUY+UQ9CYSS3zTjkDh/F69j2Ddp2MRC7QkZGnHedksaQro59
iJesXOSu866XuKhrHJn+/c//b1N3JvIUf2QdmBaGK6QU81GEuGPDzbPqoGLx
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
mTgW1GjJxL4wZP/5vuxTeXi+G7D/29f7X6dO9TU=
       
       "], {{{}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[CompressedData["
1:eJwNzkkiQgEAANAfERmKyBgqJTN1E1s7B+CGsVHkGGWIzEOm4i3e/qUPjvYO
Q0EQ7FPmmBNOqVDljHNqXFCnwSVXXHNDk1vuaHHPA4888cwLr7zxzgdtPvni
mx9+6dDlj0AyRA+9hOmjnwgDDBJliGFGGCVGnDHGSTDBJEmmmGaGWeaYJ8UC
iyyRJkOWZXLkWaHAKmuss8EmW2yzwy5FSvwDZGYqcw==
           "]], 
          LineBox[{313, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364,
            365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 
           378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 
           391, 392, 393, 394, 395, 396, 397}], 
          LineBox[{418, 419, 422, 427, 428, 429, 431, 432, 449, 450, 451, 452,
            453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 
           466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 
           479, 480, 481, 482, 483}], 
          LineBox[{519, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
            539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 
           552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 
           565, 566, 567, 568, 569}], 
          LineBox[{592, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
            608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 
           621}], LineBox[{625, 626, 627, 641, 642, 655, 659, 660, 661, 662, 
           663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 
           676, 677, 678, 679, 680, 681, 682, 683}], 
          LineBox[{693, 694, 695, 696, 697, 698, 699, 700, 701}], 
          LineBox[{707, 708, 709, 740, 741, 745, 746, 747, 748, 749, 750, 751,
            752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 
           765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777}], 
          LineBox[{782, 783, 784, 805, 806, 815, 816, 817, 818, 819, 820, 821,
            822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 
           835, 836, 837, 838, 839, 840, 841}], 
          LineBox[{858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
            870, 871, 872, 873}], 
          LineBox[{897, 898, 899, 900, 901, 915, 916, 917, 918, 919, 920, 921,
            922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 
           935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945}], 
          LineBox[{951, 972, 973, 974, 975, 996, 997, 1014, 1015, 1016, 1017, 
           1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
           1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 
           1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 
           1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 
           1062, 1063, 1064, 1065, 1066, 1067}], 
          LineBox[{1075, 1080, 1081, 1082, 1087, 1088, 1089, 1090, 1091, 1092,
            1093, 1094, 1095, 1096, 1097}], 
          LineBox[{1114, 1117, 1118, 1125, 1126, 1143, 1144, 1149, 1150, 1151,
            1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 
           1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 
           1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 
           1185}], LineBox[{1216, 1217, 1231, 1232, 1237, 1238, 1239, 1240, 
           1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 
           1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 
           1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 
           1274, 1275, 1276, 1277, 1278, 1279}], 
          LineBox[{1295, 1296, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
            1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 
           1325, 1326, 1327}], 
          LineBox[{1331, 1332, 1333, 1349, 1350, 1351, 1355, 1356, 1357, 1358,
            1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 
           1369}], LineBox[{1373, 1374, 1375, 1380, 1381, 1390, 1391, 1392, 
           1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 
           1412, 1413, 1414, 1415}], 
          LineBox[{1437, 1438, 1439, 1440, 1461, 1462, 1463, 1464, 1465, 1466,
            1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 
           1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 
           1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497}], 
          LineBox[{1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
            1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 
           1544, 1545, 1546, 1547}], 
          LineBox[{1577, 1578, 1579, 1586, 1587, 1592, 1593, 1594, 1595, 1596,
            1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 
           1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 
           1619, 1620, 1621, 1622, 1623, 1624, 1625}], 
          LineBox[{1631, 1651, 1652, 1659, 1660, 1661, 1662, 1663, 1664, 1673,
            1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 
           1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 
           1696, 1697, 1698, 1699, 1700, 1701}], 
          LineBox[{1707, 1726, 1727, 1735, 1736, 1765, 1766, 1767, 1768, 1769,
            1770, 1771, 1772, 1773, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 
           1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 
           1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 
           1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 
           1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 
           1837, 1838, 1839, 1840, 1841}], 
          LineBox[{1855, 1856, 1857, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
            1869, 1870, 1871, 1872, 1873, 1874, 1875}], 
          LineBox[{1881, 1882, 1883, 1899, 1900, 1913, 1914, 1915, 1916, 1917,
            1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 
           1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939}],
           LineBox[{1945, 1960, 1961, 1978, 1979, 1980, 1982, 1983, 1984, 
           1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 
           1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 
           2007, 2008, 2009, 2010, 2011}], 
          LineBox[{2017, 2026, 2027, 2034, 2035, 2048, 2049, 2050, 2051, 2075,
            2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 
           2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 
           2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 
           2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119}],
           LineBox[{2125, 2148, 2149, 2156, 2157, 2178, 2179, 2180, 2181, 
           2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 
           2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 
           2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 
           2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225}],
           LineBox[{2231, 2232, 2233, 2250, 2251, 2264, 2265, 2266, 2272, 
           2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 
           2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 
           2295, 2296, 2297, 2298, 2299, 2300, 2301}], 
          LineBox[{2306, 2307, 2333, 2334, 2343, 2344, 2345, 2346, 2347, 2348,
            2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 
           2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 
           2371, 2372, 2373, 2374, 2375}], 
          LineBox[{2383, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
            2403, 2404, 2405, 2406, 2407, 2408, 2409}], 
          LineBox[{2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
            2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 
           2455, 2456, 2457}], 
          LineBox[{2461, 2462, 2463, 2470, 2471, 2472, 2476, 2477, 2478, 2479,
            2480, 2481}], 
          LineBox[{2485, 2486, 2487, 2491, 2492, 2498, 2499, 2500, 2501, 2502,
            2503}], 
          LineBox[{2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534,
            2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 
           2545}], LineBox[{2550, 2551, 2552, 2557, 2559, 2560, 2561, 2562, 
           2563}], LineBox[{2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 
           2583, 2584, 2585}], 
          LineBox[{2591, 2592, 2594, 2595, 2596, 2597, 2606, 2607, 2608, 2624,
            2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 
           2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643}], 
          LineBox[{2661, 2662, 2663, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
            2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681}], 
          LineBox[{2687, 2690, 2691, 2692, 2693, 2719, 2720, 2721, 2722, 2723,
            2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 
           2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745}],
           LineBox[{2752, 2753, 2770, 2771, 2772, 2785, 2790, 2791, 2792, 
           2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 
           2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 
           2815, 2816, 2817, 2818, 2819, 2820, 2821}], 
          LineBox[{2827, 2828, 2846, 2847, 2848, 2861, 2862, 2863, 2870, 2871,
            2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 
           2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 
           2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901}], 
          LineBox[{2909, 2910, 2911, 2912, 2913, 2928, 2929, 2938, 2939, 2940,
            2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 
           2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959}], 
          LineBox[{2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997,
            2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 
           3009, 3010, 3011, 3012, 3013, 3014, 3015}], 
          LineBox[{3046, 3049, 3050, 3053, 3054, 3055, 3056, 3057, 3058, 3059,
            3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 
           3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 
           3082, 3083}], 
          LineBox[{3087, 3088, 3089, 3102, 3103, 3122, 3123, 3124, 3125, 3126,
            3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 
           3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 
           3149}], LineBox[{3153, 3154, 3155, 3159, 3160, 3161}], 
          LineBox[{3167, 3174, 3175, 3184, 3195, 3196, 3197, 3198, 3199, 3200,
            3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 
           3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219}], 
          LineBox[{3225, 3232, 3233, 3243, 3244, 3249, 3250, 3251, 3252, 3253,
            3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 
           3265, 3266, 3267}], 
          LineBox[{3279, 3280, 3281, 3284, 3285, 3286, 3287, 3288, 3289, 3290,
            3291, 3292, 3293}], 
          LineBox[{3298, 3299, 3300, 3305, 3306, 3308, 3309, 3310, 3311}], 
          LineBox[{3320, 3321, 3322, 3327, 3328, 3339, 3340, 3341, 3342, 3343,
            3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 
           3355}], LineBox[{3359, 3360, 3361, 3364, 3365}], 
          LineBox[{3371, 3396, 3397, 3398, 3399, 3434, 3435, 3436, 3437, 3438,
            3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 
           3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 
           3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 
           3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 
           3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 
           3501, 3502, 3503, 3504, 3505}], 
          LineBox[{3509, 3510, 3511, 3528, 3529, 3532, 3533, 3550, 3551, 3552,
            3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 
           3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 
           3575, 3576, 3577, 3578, 3579}], 
          LineBox[{3585, 3586, 3587, 3590, 3591, 3602, 3603, 3612, 3613, 3614,
            3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 
           3626, 3627, 3628, 3629}], 
          LineBox[{3635, 3656, 3657, 3658, 3659, 3674, 3675, 3684, 3685, 3686,
            3687, 3688, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3696, 3697, 
           3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 
           3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719, 
           3720, 3721, 3722, 3723}], 
          LineBox[{3727, 3728, 3729, 3733, 3734, 3735, 3744, 3745, 3746, 3747,
            3748, 3749, 3750, 3751}], 
          LineBox[{3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773,
            3774, 3775}], 
          LineBox[{3779, 3780, 3781, 3787, 3788, 3789, 3790, 3791, 3792, 3801,
            3802, 3803, 3804, 3805, 3806, 3807}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.1046392715392375`, 0.}, {0.30731963576961885`, 
         0.7645320913100637}, {
         0.30731963576961885`, -0.7645320913100637}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], PointBox[{{0., 0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.18015537345975, 
     1.3828357376901312`}, {-1.8400481932305763`, 1.8400481932305763`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.6747127295668488`*^9, 3.674712794844452*^9, 
  3.674737783914847*^9, 3.674836935939034*^9, 3.6748989297732973`*^9, 
  3.674903127366358*^9, 3.674903432337468*^9, 3.674904227301445*^9, 
  3.674904518940111*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Delta]", "2"], "+", "x", "+", 
        FractionBox["3", 
         RowBox[{"4", 
          SuperscriptBox["x", "2"]}]]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "/.", 
      RowBox[{
      "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"zeros", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"potential", "[", 
      RowBox[{
       RowBox[{"line", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunks", "=", 
   RowBox[{"sqrt", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "2"}]], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{"a", "-", "b"}], ")"}], 
    RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "f", ",", "zeros", 
    ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6747129000557423`*^9, 3.6747129471146708`*^9}, {
   3.674712996112567*^9, 3.674712996268598*^9}, 3.6747130369751167`*^9, {
   3.6747153621419897`*^9, 3.6747153768876963`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.3888319054150047`"}], ",", 
   RowBox[{"0.1944159527075024`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7086780604876255`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.1944159527075024`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.7086780604876255`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6747129479466667`*^9, 3.674712996761018*^9, 
  3.674713038490831*^9, 3.67471539486935*^9, 3.674737784052299*^9, 
  3.674836935998698*^9, 3.674898929839404*^9, 3.674904227339327*^9, 
  3.6749045189736423`*^9}],

Cell[BoxData[
 RowBox[{"0.804430691884789`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.5593915113911367`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.6747129479466667`*^9, 3.674712996761018*^9, 
  3.674713038490831*^9, 3.67471539486935*^9, 3.674737784052299*^9, 
  3.674836935998698*^9, 3.674898929839404*^9, 3.674904227339327*^9, 
  3.6749045190159073`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13c81d8fB3CjSCVJGVFGVmWUFSWvjIZRIqRBIiUlohSJhLKTVMjKXlmV
svce91oZKVwj+upe7r0pKX6f31+fx/OP8znvzznv836fj7its6k9GwsLiyor
C8v/nwb2013VM+ZaoptjB8iK+/Etz8J2REgF7NmcwpNbssC/ri/8rZAezpsc
W6itKERJpff1O9IncHElgxRY9h4KGpvT4oXMEGicc89JqAQsfDPPVkTP4EOa
Jasqbzm6ZiseXpS2xpMqQ2Hv6krsJysXRApdwuUb6JiurcGOgwkZdXGXIUJZ
fprSX4v12WsSmaJXcdFtM/ejL3X44vclzEL6BmT3H//D3tCA6ld1qmFCt2Ad
3trGItsCle67hVLnbsM2mSTrSmtB1hoF+co4d4gV0gdVC1sReTtakibqgSP5
pmkBUu2wM3biM5H2Bk/5wwSRz53w8w25GyzkD6+eWjnt/i5Uilwutij1h8xG
csvM9m78/nCIKXEuAN/45Mce23fjOvWnc1ncI5QXf2jtpnXD7JzNlVnRICiP
8UyXL/ZAWlXV4oR0OGTNqt92zPTh0i2aUJBQFHwLmCI5FwahzB7pWeQSBd2t
LGzZLwfBFqny+XNTFA7JWbFpkAaRmO8Rp+D+HIXb7h7ZdHAIQ9/ZRXu7X2CR
ken/m+8zjC8KSoqGxuClSdHM/YJh7D+hrfB+OQGW96RmUTCCNVH6r+fmUzHJ
lcrZ40fBkvrY0uutaTD3PpPj9oIC6pe7Fqd00/Bq3dtK9iwKemQy1xVHpcG5
p3ua3kFBQhmH+7196fD5NMm1SWAcKuN1Bhz3MxAa3D3knj4OGyUtpvCabDyY
kvHpKp3AB7LS0aPb85FyZ7q5uWoKln7DQ3Uh79BabmwUcuw7nAvd5KOZJYip
WFiejv8BesSnZlbWKhjcjRQc2jmH8uuFmOCvgiFb9YiJ4hweHwstbpSrQtDr
VPVGlTmIsOikhlhWYUZ7V1Iq5nDY+Y3PloIqZDT56qubz6FdWudVlGI1SgoZ
m8t85iC2Wsg082s1Yj/K2yl0z6G5prGKpFmL0GSTczXX55He/nci7GgtXGvb
zY/enEdAv9JaI9NaXFbCz5bb89D5kWDWfKUWbf3K4g3e8ygXvDNTHVmLbVEK
Ys8i5lHgLMNXNF2L/It2RmFv5xG9LfByVFQdFn25cxYW5uEuWxlimliH2D0h
RzcuzcNcmVmwMbsOfmxjd6RX5rFJ32YptKoOoeXZT49x0hF6Sz0i4HsdGta/
jrYToONB23SJ+6F65Kb/cWCq0XHVQ5/7zGw9BBqsYrzc6MgW5rWyXqjHvRt9
ntPudMxWDOTasTRgw2PxkyaedNxgczC6sbkBiz1cvUK+dNwKeRTip9kA++re
vY/C6fCJr+PKC23Axl8FrW2ZdDyvOcjBLt+I7AviMRyf6fhkt9pizb5GHI6/
OsnzlQ5Bjo40bu1GRHj/5eMfoyPW4PxhQfNGKNf1bhH6RkdSj6e//P1GWOmL
xC/S6ciZ/MBm2dEIwXsK2pJrGajhUlrJdWpCeeNaWRE1BnEu9nwIvtuEXCXu
5EV1BiISFJwd/Jogf1PVuucAAzbKu0d2xDRBQ8Ax9p42A8vnJati65tAbszf
mGjEwP4Cfp9A4Wa8ffby6l5bBt5ZLC3btTTjZ1zOa59gBkReLxZr9zbDS8Zf
eSKUAb//ft0QHWnGo7Jypt4TBkwfML8OMZsRxaHBvvSMgbmsH5UmYi04Ks2t
oxHPgPy/EW/cacGsWczAvzwG0lPql7dKtYImN6meSmLAJcBsDIqtCHYwsnPq
YuDAlYm6SxqtuL+ipKDcwwB516qgvOOtaPE8k/ruEwOLhbp8Ou6tCIwyWvvk
CwNG1bUyV5taIaPW+vD1dwb4k03Xhne1Yutr8+cqswyM+VFmiz63IkborF79
Dwbcj7IV/aW1gt3vt/vgHANJndqaEYJtMHX6K/t5gQHGcPXJD1fbsOHdqugD
bExUVp5UHnZrg3xY97lodiYCk0a3sHq3YYbPqmR+FRMil1g+G0S2gZ0qqx3L
ycSR/2D/tbQN2fouD2rXMxG7WOmxen07fpZuznLmZ+LS5xPnd/G3I1Wk5O9z
ASYUK75qGYu14+JQ3fRHQSbqHyyzx6i0w0XrexBzKxM/OLXC5azaocUcoemI
MnGIvyL5VF47njx6ZaApw8Sq51ucD39sx5txg1syskw08904sK+2HWz8XpY8
O5kw5hXt3fqpHQ2lSSf7djFhvd53NeVfOwRiqaz7FZiQCBns6uHsAC97Aus6
RSZR55QSGng7YCPsXD5A+DrnuFqWVAe2+VPsHPcycY/tsIPL8Q5YB5++f1mF
CS3feBXb0x1IMTl1ZpsqE2wsCyxmFzvgYuwyTyYc/C89Zt/tDtwOyrZQ2MdE
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
qG/xxEvRdT9XVojvfanWqF3Ohf8Bb4K/mQ==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FMR+/fvHRe1t1it1BU38H3xuzqg=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {0., 1.2841175033936392`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
eOCV1MqfS0sMBBTa1uqU8OF/FAm/bg==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
KC/y898/LlwM7IrV5DXxfzyDzws=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {0.000038794201159414065`, 1.2841175033936392`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.6747129479466667`*^9, 3.674712996761018*^9, 
  3.674713038490831*^9, 3.67471539486935*^9, 3.674737784052299*^9, 
  3.674836935998698*^9, 3.674898929839404*^9, 3.674904227339327*^9, 
  3.674904519093995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Constructing", " ", "ab", " ", "function", " ", "for", " ", "\[Beta]"}], 
    "\[Equal]", "0"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]begining", "=", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"\[Delta]end", "=", "2"}], ";", 
    RowBox[{"\[Delta]nstep", "=", "300"}], ";", 
    RowBox[{"IabList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"potential", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Delta]"}], "}"}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", 
          RowBox[{"4", " ", 
           SuperscriptBox["x", "2"]}]]}], "-", "x", "-", 
        SuperscriptBox["\[Delta]", "2"]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ProgressIndicator", "[", 
    RowBox[{"Dynamic", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "-", "\[Delta]begining"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Delta]end", "-", "\[Delta]begining"}], ")"}]}], "]"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Delta]", "=", "\[Delta]begining"}], ",", 
      RowBox[{"\[Delta]", "<", "\[Delta]end"}], ",", 
      RowBox[{"\[Delta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Delta]end", "-", "\[Delta]begining"}], ")"}], "/", 
        "\[Delta]nstep"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"zeros", "=", 
        RowBox[{
         RowBox[{"NSolve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"potential", "[", 
             RowBox[{"z", ",", "\[Delta]"}], "]"}], "\[Equal]", "0"}], ",", 
           "z"}], "]"}], "//", "Quiet"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"z", "/.", 
         RowBox[{
         "zeros", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"z", "/.", 
         RowBox[{
         "zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", 
          RowBox[{"potential", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"line", "[", 
              RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], ",", 
            "\[Delta]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chunks", "=", 
        RowBox[{"sqrt", "[", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", 
            RowBox[{"1", "-", 
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sqrtf", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ab", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{"a", "-", "b"}], ")"}], 
           RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"IabList", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "ab"}], "}"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IabFunc", "=", 
     RowBox[{"Interpolation", "[", "IabList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Delta]", ",", "a", ",", "b", ",", "ab", ",", "f", ",", "chunks", ",", 
      "sqrtf", ",", "potential", ",", "zeros"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6749155652975683`*^9, 3.67491569089636*^9}, {
  3.6749157225900087`*^9, 3.674915827871497*^9}, {3.674915868810689*^9, 
  3.67491594727135*^9}, {3.674916315018353*^9, 3.6749163227808104`*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Delta] - \
$CellContext`\[Delta]begining)/($CellContext`\[Delta]end - $CellContext`\
\[Delta]begining)]]], "Output",
 CellChangeTimes->{{3.674915942163357*^9, 3.6749159492371073`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dissipation", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"begining", "=", 
   RowBox[{"-", "2"}]}], ";", 
  RowBox[{"end", "=", "2"}], ";", 
  RowBox[{"nstep", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProgressIndicator", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Delta]", "-", "begining"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"end", "-", "begining"}], ")"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"\[Delta]", "=", "begining"}], ",", 
     RowBox[{"\[Delta]", "\[LessEqual]", "end"}], ",", 
     RowBox[{"\[Delta]", "+=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"end", "-", "begining"}], ")"}], "/", "nstep"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"IabFunc", "[", "\[Delta]", "]"}]}]], " ", 
           SubscriptBox["s", "1"]}], "+", 
          SubscriptBox["s", "2"]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "1"], "\[Rule]", 
            RowBox[{"2", "\[ImaginaryI]", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", 
               RowBox[{"IabFunc", "[", "0", "]"}]}]]}]}], ",", 
           RowBox[{
            SubscriptBox["s", "2"], "\[Rule]", 
            RowBox[{"-", "\[ImaginaryI]"}]}]}], "}"}]}], "//", "Quiet"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Dissipation", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Dissipation", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", 
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "R", "]"}], "2"]}]}], "}"}]}], "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"R", ",", "\[Delta]"}], 
   RowBox[{"(*", 
    RowBox[{
    ",", "a", ",", "b", ",", "ab", ",", "ab0", ",", "f", ",", "chunks", ",", 
     "sqrtf", ",", "potential", ",", "zeros"}], "*)"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Dissipation", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6747130758576202`*^9, 3.674713084248086*^9}, {
  3.674713121352297*^9, 3.674713133975965*^9}, {3.674715413926457*^9, 
  3.674715465154397*^9}, {3.674715505191319*^9, 3.6747155204114733`*^9}, {
  3.6749154578848667`*^9, 3.674915461911069*^9}, {3.674915545696849*^9, 
  3.674915550420745*^9}, {3.674915930353491*^9, 3.674916005597733*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Delta] - $CellContext`begining)/($CellContext`end - \
$CellContext`begining)]]], "Output",
 CellChangeTimes->{
  3.674713138104527*^9, 3.674715475158476*^9, 3.6747155218452253`*^9, 
   3.674737784218617*^9, 3.674836936199213*^9, 3.6748989300309973`*^9, 
   3.6749042274923477`*^9, 3.674904519121258*^9, 3.674915462486817*^9, {
   3.674915988059938*^9, 3.674916007605633*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdWHtUlXUWvWqJ01IxQ2C0jCzzsbRwGpVI21hMOpOaFTrWImBweujygbNM
TE3QIExtRG0IbVxqooIPksQULA6i4gNNAgwfiFy4IMK9PC4PwVLn+772+aP5
/cM66+Pe+53fOWefvfcTkQveeLerzWYb2cVmM//y5NpsBaeWFffE2WeTfo08
e19suRvc0wsfxqbwEZ2nNhpxRNT22NZ+CF2f1zY01IyvDCj4pT+elpnutYON
OCo9x/8zPzQ2mOee2BJ7fO4x5ikcHRhf//pRI47qWpz+9VCsmjqgNnOlEec+
+/0c90i8uiLD4fOqES/xmeI75E/wSp9oX+plxEFxctg9GuXXzXNXbLVpU+ZE
B2JPr0VXg/YY8eXufgdLgIXjHyrdGWXEfUZ5TvN5GYHzthd3DzTikMk9UPoK
um0dUzi7mxHHDa3fM+FVXDhvnl/F1rHFtS1gGsxsjZTFNtTr/UEvvYkIM91w
I+7enjX3xxkYZiVsxDP6eR5qehtGskbGv4jNt8vjMTnh+P6YeYx40vWl7j2R
MLMdGG/EDdUHy268i9fMdKca8YpnCh3/mQ1fK2EjfuVkxWdX58FI1sj4jti2
PHHufvhC7NtrnjsSe2zHo4NHLoKZba9FxvNHZt/dHx4NK93xxvO/3li2sdsy
eFgJG/HW6ZdvDI6BkayRcafY/l50MbRuJbZsNo8Rr3vt2cz1cZhlFbhTcsMT
p/ivTYCV7ohOCfrg2jsp1WvQPtRMuENiq6InrEj9N6zySofY3IOiquZvwGer
zdMhQd9MXdznzCa8YRW4QyLss5oj302Cle4A4/mJ7WtyJ29GtY+Z8G0Jio6Y
HBL3X1jlTb8tfo7FncF/2I5o69yWxNSErg/c34EJVoFvi21Y9eslT6fASveh
2xJb1nVVQNxulHQ3E24Xv4AXT57onwarvFvbZVrTrBe8GvbhPeu0S1N58s7z
Xb6Bv1Xgdhnq67srf0QGfku3TVLnRo1c/Ou3ONFmJSwBaQtOfdeciXVmede2
SWLomaRxvY9gunXaxG90dUTam1l43CpwmyT3qI5LOHEMVrq1rVKxcas9ODwH
ZjevyGgVrwbHKe8vcrHMauhWGZfaPvaQZx6CrdMqR+unt7d8fQK9rQK3iqN7
RuC4qadgpVvaIv/MvLC7+OHTMLt53vYWifho8pEq1xnMsRq6RUISxoR8WHkO
z1mnRRx5j62e33ged612dssXq6LfS/S6iHwz3VNueXFBwRfZqYWwxne9W74v
f2LS6aKf8NZvDS1hRf4T+vYoxiDruKXskyNdhk8qgdNs5/pm+duwBeMSNl7C
YTPdzGYJnpWZsq7mZ1jju6JZOgLynJ++fBmTrIZulr1jPVv3p17Bw9ZplojS
oqf9+l2D1c5Xm2TVD8M9XQllSDHT3dkkAYNO+/S0lcMa33lNEpH9YUzk8hsY
azV0kyQmD8+xf1yB3+CqSbyf/yh/yYt24lOj5ExMuPPafTvxqFEc51JHZUsl
8adB7pwMC3sgpop40yCzRwyJXzzOQXxxSdrMuXkhtx3EE5d8d/jDdyrSq4kf
Lilv7F8zM7KGeOGUzxsr3r7b5ybxwSnnH+w3vVf2TeJBvYTtmh9wLrSW818v
B+zZs5Z01HLe6yRwo3dExLpbnO86yR4V3LPQp47zXCf/6J91fMCWOs7vLUmd
1Hfhtr71nNdbMtGVfUhi6zmftbI+Mr2wrqqe81greT1nfbv5BSfn76Z0O/vI
+WkJTs7bTUkMPOvcnu/kfN2Uvi3f3hvS6eQ81YjEbMjYMNDF+amRL58f7Jk8
xsV5qZYHM852dJvg4nxUS+++Wz4/MN7FeXDIjpnfLFk+wsX+d8jGB8YP+aCX
i/3ukOEHPqmJrnCyv6sktvT4rbxdTvZzlbwSsjQg6h0n+7dSDv6wKf47Dyf7
tVI8vO81XkupZ3/aZdGhjAOjR9ezH+2S9MbdHUOy6th/dtn7VEDFk6Pq2G8V
MvNHj0f3br3F/jLimJU9Jt6vZT/dkJKVsXs2zahl/5TLvYqv1vw55Sb75br4
+vl7XKmtYX9cl6TVnWGBg2vYD2XitVzK+79dzfpfk4LdG1qDVztY76tS8mg/
rDlYxfpekYikt77MK65kPS9L+7zd3gVuO+tXKidbdv4xvred9SqVkH8FvHRp
SAXr87NEvZnnDo4pZz0uSWX6x460A2W8/xIZ6GwP21t2lfddLLsbxvp6977C
+y2SypeWbsh6uZT3+ZOcXzVlXGjMJd7fT7Iq2nd/Tl4x76tQGmzLLiV7FvF+
fpQVcxpDk98v5H1cEH9Xfv0PyReYf4FEeGft7hJzjvmeldq1z8zoHn+a+Z02
+rHqy8MHTjKffOmZsS3x0i/H+f4npUdFUElPRw7fN09mejzWHjM4m+93XHw3
b31uW+5hvk+OTApaPXp/VgZ//5j0We6+5TNsP3/viFTErS/8NG0Xvz9TYvMv
PlnUto3flyF+XxUXzP9LEj+/T4LO2J1zktbx/1Mk9v2whTsei+Xzr8QW7R/v
zJjLeK3BB3YcvXh0Mmz/d/gc+pyfh36e34/ff/8+6O/z/aDvx/eHvj/zg+bH
/KH5836g98P7g94f7xd6v7x/6P2zPtD6sH7Q+rG+0Pqy/tD6sz+g/cH+gfYP
+wvaX+w/aP+xP6H9yf6F9i/7G9rf7H9o/3M+oPPB+YHOD+cLOl+cP+j8cT6h
88n5hc4v5xs635x/6PwTH6D4QPyA4gfxBYovxB8o/hCfoPhE/ILiF/ENim/E
Pyj+ER+h+Ej8hOIn8RWKr8RfKP4Sn6H4TPyG4jfxHYrvxH8o/nM/QPcD9wd0
f3C/QPcL9w90/3A/QfcT9xd0f3G/Qfcb9x90/3E/Qvcj9yd0f3K/Qvcr9y90
/3I/Q/cz9zd0f3O/Q/c79z90/5MfQPkB+QOUP5BfQPkF+QeUf5CfQPkJ+QuU
v5DfQPkN+Q+U/5AfQfkR+ROUP5FfQfkV+ReUf5GfQfkZ+RuUv5HfQfkd+R+U
/5EfQvkh+SOUP5JfQvkl+SeUf5KfQvkp+SuUv5LfQvkt+S+U/5IfQ/kx+TOU
P5NfQ/k1+TeUf5OfQ/k5+TuUv5PfQ/k9+T+U/1MfQPUB9QNUP1BfQPUF9QdU
f1CfQPUJ9QtUv1DfQPUN9Q9U/1AfQfUR9RNUP1FfQfUV9RdUf1GfQfUZ9RtU
v1HfQfUd9R9U/1EfQvUh9SNUP1JfQvUl9SdUf1KfQvUp9StUv1LfQvUt9S9U
/1IfQ/Ux9TNUP1NfQ/U19TdUf1OfQ/U59TtUv1PfQ/U99T9U/9MfgPoD9A+g
/gH9Bai/QP8B6j/Qn4D6E/QvoP4F/Q2ov0H/A+p/0B+B+iP0T6D+Cf0VqL9C
/wXqv9Cfgfoz9G+g/g39Hai/Q/8H6v/QH4L6Q/SPoP4R/SWov0T/Ceo/0Z+C
+lOkVUE2W/t+07/6H6jPkR8=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Delta]\"", TraditionalForm], 
    FormBox["\"dissipation\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{},
  PlotRange->{{-2., 2.}, {0, 0.9141864642274703}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.674713138104527*^9, 3.674715475158476*^9, 3.6747155218452253`*^9, 
   3.674737784218617*^9, 3.674836936199213*^9, 3.6748989300309973`*^9, 
   3.6749042274923477`*^9, 3.674904519121258*^9, 3.674915462486817*^9, {
   3.674915988059938*^9, 3.674916007653578*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "0.14"}], ";", 
  RowBox[{"\[Delta]", "=", "1.006"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "5"], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox["\[Beta]", "4"], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "6"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "6"], " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "-", 
       
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StokesGraph", "[", 
  RowBox[{"potential", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Beta]", ",", "\[Delta]", ",", "potential"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.674544170356062*^9, 3.6745442692012367`*^9}, {
   3.6745443349557533`*^9, 3.6745443350649533`*^9}, {3.6745447786899548`*^9, 
   3.6745447807959585`*^9}, {3.674545450795561*^9, 3.6745454509575615`*^9}, {
   3.6745458663811283`*^9, 3.674545890769972*^9}, {3.674546137058609*^9, 
   3.674546164769258*^9}, {3.6745472934476814`*^9, 3.674547294648883*^9}, 
   3.6745555859959393`*^9, {3.6745556737824965`*^9, 3.674555693263935*^9}, {
   3.674555730444801*^9, 3.6745557309752016`*^9}, {3.674555761665456*^9, 
   3.674555762305057*^9}, {3.674556587797*^9, 3.6745565882494*^9}, {
   3.6745569310320096`*^9, 3.6745569361352186`*^9}, {3.6745573398607464`*^9, 
   3.6745573424191513`*^9}, {3.6745642986633368`*^9, 
   3.6745643009721413`*^9}, {3.6745762939443274`*^9, 
   3.6745763379298134`*^9}, {3.6745764096165433`*^9, 
   3.6745764160633545`*^9}, {3.674712814948949*^9, 3.674712829670068*^9}, 
   3.67489907248208*^9, 3.67489913476031*^9, {3.674900022612542*^9, 
   3.674900058680545*^9}, {3.674900929485424*^9, 3.6749009829927893`*^9}, {
   3.674901107401928*^9, 3.674901121059504*^9}, {3.674903500588253*^9, 
   3.6749035006990623`*^9}, {3.674903556176386*^9, 3.674903556288048*^9}, {
   3.674903615343217*^9, 3.674903633580159*^9}, {3.6749037100622063`*^9, 
   3.6749037101731367`*^9}, {3.674903781918785*^9, 3.674903850805203*^9}, 
   3.674903884039955*^9, {3.67490399369001*^9, 3.674903997129931*^9}, {
   3.674904439256669*^9, 3.674904441335742*^9}, {3.674904486090357*^9, 
   3.67490448738435*^9}, {3.674905076330832*^9, 3.674905154036186*^9}, {
   3.6749051972049103`*^9, 3.6749052767574177`*^9}, {3.674914348814907*^9, 
   3.674914363495038*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzsu3k01e/7748ilYRKFI1KpFkUcpVESZqQZklSUYpUEkKRBqRoNM8p0WAq
1ybzPM+zbR73xjZz9u73/fRd67bOeq/3ev++53O+55z+aT3X9Xrdr+t+Ph/X
vQcs17t25AIHGxubIh8bG+t/6t5f9x8tm0bZ/KVVcL3NEBIaviWt6Iyo74d/
1QkNgjt1dFnXvwve5an1mYGiQgEZrHpJb/coS6v09Omx6vdEkxmWdf3IucTh
Kav+vbXK6h5TF77PMWLVxQJCQvz5+jAl99RHVv2ExgehAKa+o2Fqzqq3JhZY
Ze2kIa9KaiyrfrX2gxdLX5esMGTVT05zDGqp70aRYe8yVl1kc2dxK1NvnOv7
u/55S1iRjFIHLutsTmLVLa/qRsky9VenpGOs+l5v+8UPfVtwi2TSF1Z9/WBU
EUv7+Z89zqrP2DH3fjEHFX14fUNYdbvlmtYlTE3nKT7JqvsqUkfFztehmM2I
K6t+7fiRrFVMba8W+Lt+rqzDoPVhOZZ5nSpm1bOenTJrZ+q3j9zuseqBwdnX
H6oW4IcS0TBWPWN3uJYjU0u9zDjDqtOMDxvv40tBi5n+v/3LkruarsHUcm3K
v/sTm+NwRVjlE64t+U5l1R+xfR9ax9TvXxcfZdXfrC6Kon/9AIIOzlWs+jdL
eFbH1DMXz73Lqtuufmw9eSUZSoZ1I1h1NlmTnaNMfexMlCWrfuWdmr7uQD4E
bWa8ZtW7r4uHnWXq7L2LTrDq8UnqRQnS5ZAW+KqWVW8VWRfJ0p52vFqsuvOl
gjh+uTpwSkitYdV33aedZenLTVI6rHpWinlFYnkjlJtw/95fr6tMWQJTBwhG
n2bVNzbfjjW90wIeovtSWXWO+x/GbzD1urUbtVl13tKf2mLCHeDudDGPVW+X
W+CzkqnlTVJMWXUJj/s6xdHdwC7zKItVzzYr2FrE1DtqYs1YdYOBMKqSFA3y
vmz83f/TfuVQlq6X+//80/M+IrV4jA5OoR9+8xFRd6psEVNnxr/WZ9VDnmmF
9mX2Q88dtxesunO6lRlLd6/T+r3/V0cvt2S+ZYDsc/efrPoLn5i3LP3mvubv
/S22ot7xvzIEr5O+JbPq616Pc7D04wGTA++3cVAa3yVnrWPOX5ltlg5Lv5xj
08nUIK1wYmbEIXaKobktL2s+r3g+UmPp0tCnw6z6m8+3KUmGbBTR1Ft01v1Z
uG1WMlMvop1KZtWV1UUORbBP4obCs9Gsumns+wcs/dj2xSir3iU9VFK2aRwn
ooTZWOv7xWjsLGfq7pHcalb9dO25QDa9UXwdvC2Rdf8bHaFEln4aMz+VVVfc
+EhpzfNh3KRSOciqc340cGDpoN0vR1h1TR3lxoOJg6jk3Jf2e3+CZQsPMbWM
1Js8Vv3B0A7NW/QBVPk1b5xV3zXUVcjSussC5rLOnze/HOd6rejHNqOSdFY9
xavTmKUXKq+bxqo78g0/TDlCx+9LjFjroTlysqcy9Wvz+5ysunJim1a3bS9a
RrvPZu2v9tPHZJZO1GhlZ9VVZr+tWGvQhdPl5zNY91tIrXgnxdQ0/p2xrP4m
XhdEWKS04QqjtN/+J0eJfrnL1L941Gay7tcSLjyUsboZda5CIet+UZtjH1ia
Yp0zg1UPmKd5TtihAa87fJvHuj9NT3/bIqa+Ypf4+/lmZyIO5OdUoydH4+/1
H7glRRcw9bxjZ1j7hagwAWMT5xIUChr7wVp/Y1595nWmPsD2qIVVr9aafkrU
OwcFPt9uZdV7zNRvLGHqN1dSfue/0/S91PHlFFyzufR3vl1xFU9PM3XkkvI4
Vp2r5/tjMwknHKkM+u3Phriiw++ZeueOoyweQXwUo09Ex8DVOYd+86k4ETd5
mKlDCspZPMGmbPUrvScyIfaOWB2rfni5OG8XU7tSk3/v/xNuEyzvLIJTekhl
1Qdv82iXMvWnou0VrPtL6MXdclJVcNDmHKsfXKf39tp2pl6+VfX3/q1mZ9nl
fKsHs5FV01n9eeWl5Wcz9YvpKb/n43KtYo6VVhO85c7m+u2veYI+S3PBwd/5
uBpxdmwYaAUGbzI/q5593nJyPVN/jOP8PT8D3qM76150AlV0L6tflJz96nMt
Ux/O8k1h1RNCnr3au6gXdFbq/n59bIjx38HSXo2R9ay6/UH3NcvbaXDprG0V
q3/LB13+y5h6rYPI7/n4NMBlPRzTBx5mb0tY9Uuntqxk6YKT93/3Z1K4OmXt
0gFk+49/MeziuwTe/qfm2Cj+Y0iQ8UfnLE6PeunMQSmL0u8JT3JSvH1pXiNL
/6t+zuiXmubC/9R7r5lGCnixU/5n92+6sXJR/ur/rC+6WXjf+RPbHz3ttl3b
AZn/1GUDBr5ClpN/+gkeTbn+8vHEH337d//jf7TaDAc+59CxP3rxnJba2bGj
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
/iEUHwA8AL2/
       "], {{{}, {}, {}, {}, {}}, {{}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138,
            139, 140, 141, 142, 159, 160, 161, 162}]}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
            196, 197, 198, 199, 200, 201, 202, 203, 204}]}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
            238, 239, 240, 241, 242, 243, 244, 245, 246}]}, {}, {}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279,
            280, 281, 282, 283, 284, 285, 286}]}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318,
            319, 320, 321, 322, 323, 324, 325, 
           326}]}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{359, 360, 361, 362, 372, 373, 374, 375, 376, 377, 378, 379,
            380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 
           393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 
           406, 407, 408}], 
          LineBox[{433, 434, 435, 440, 441, 453, 454, 455, 456, 457, 458, 459,
            460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 
           473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 
           486}], LineBox[{490, 491, 492, 518, 519, 532, 533, 534, 535, 536, 
           537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 
           550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 
           563, 564, 565, 566}], 
          LineBox[{570, 571, 572, 578, 587, 588, 589, 590, 604, 605, 606, 607,
            608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 
           621, 622, 623, 624}], 
          LineBox[{640, 641, 642, 647, 648, 656, 657, 658, 659, 660, 661, 662,
            663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 
           676}], LineBox[{696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 
           706, 707, 708, 709, 710, 711, 712, 713, 714}], 
          LineBox[{725, 726, 727, 732, 733, 734, 735, 736, 737, 738, 739, 740,
            741, 742}], 
          LineBox[{756, 757, 758, 763, 770, 771, 772, 773, 774, 775, 776, 777,
            778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788}], 
          LineBox[{823, 824, 825, 826, 827, 839, 840, 841, 842, 843, 844, 845,
            846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 
           859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 
           872, 873, 874, 875, 876, 877, 878}], 
          LineBox[{886, 891, 892, 893, 894, 908, 909, 910, 919, 920, 921, 922,
            923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 
           936, 937, 938, 939, 940, 941, 942}], 
          LineBox[{946, 947, 948, 971, 972, 986, 987, 988, 989, 990, 991, 992,
            993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 
           1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 
           1016, 1017, 1018}], 
          LineBox[{1022, 1023, 1024, 1029, 1036, 1037, 1038, 1039, 1040, 1049,
            1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 
           1060}], LineBox[{1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 
           1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 
           1100}], LineBox[{1106, 1107, 1108, 1134, 1135, 1148, 1153, 1154, 
           1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 
           1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 
           1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 
           1188, 1189, 1190, 1191, 1192}], 
          LineBox[{1196, 1197, 1198, 1203, 1204, 1213, 1225, 1226, 1227, 1228,
            1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 
           1240, 1241, 1242, 1243, 1244}], 
          LineBox[{1261, 1262, 1263, 1270, 1271, 1272, 1284, 1285, 1286, 1287,
            1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 
           1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 
           1310}], LineBox[{1318, 1319, 1320, 1321, 1322, 1323, 1324}], 
          LineBox[{1328, 1329, 1330, 1335, 1341, 1342, 1347, 1348, 1349, 1350,
            1351, 1352, 1353, 1354, 1355, 1356}], 
          LineBox[{1360, 1361, 1362, 1368, 1385, 1399, 1400, 1401, 1402, 1403,
            1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 
           1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 
           1426, 1427, 1428, 1429, 1430}], 
          LineBox[{1436, 1459, 1461, 1468, 1469, 1482, 1483, 1484, 1490, 1491,
            1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 
           1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 
           1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 
           1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532}], 
          LineBox[{1552, 1553, 1554, 1559, 1560, 1569, 1570, 1571, 1572, 1581,
            1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 
           1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 
           1604, 1605, 1606, 1607, 1608, 1609, 1610}], 
          LineBox[{1614, 1615, 1616, 1624, 1625, 1626, 1627, 1631, 1632, 1633,
            1634, 1635, 1636}], 
          LineBox[{1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1689,
            1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 
           1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 
           1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722}],
           LineBox[{1729, 1730, 1731, 1744, 1745, 1748, 1749, 1758, 1759, 
           1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 
           1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778}], 
          LineBox[{1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
            1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 
           1825, 1826, 1827, 1828}], 
          LineBox[{1837, 1838, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 
           1848}], LineBox[{1866, 1871, 1872, 1873, 1874, 1894, 1895, 1896, 
           1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 
           1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 
           1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928}], 
          LineBox[{1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
            1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968}], 
          LineBox[{1972, 1973, 1974, 1989, 1990, 1991, 1992, 1993, 1994, 2010,
            2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 
           2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032}],
           LineBox[{2045, 2046, 2047, 2048, 2049, 2077, 2078, 2079, 2080, 
           2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 
           2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 
           2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110}], 
          LineBox[{2116, 2119, 2120, 2121, 2122, 2131, 2152, 2153, 2154, 2155,
            2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 
           2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 
           2178, 2179, 2180}], 
          LineBox[{2184, 2185, 2186, 2195, 2196, 2197, 2198, 2199, 2200, 2216,
            2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 
           2228, 2229, 2230, 2231, 2232}], 
          LineBox[{2242, 2243, 2244, 2249, 2260, 2261, 2262, 2263, 2264, 2265,
            2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 
           2277, 2278}], 
          LineBox[{2288, 2289, 2290, 2297, 2298, 2307, 2308, 2309, 2310, 2311,
            2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 
           2323, 2324}], 
          LineBox[{2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
            2350, 2351, 2352, 2353, 2354}], 
          LineBox[{2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
            2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 
           2399, 2400}], 
          LineBox[{2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
            2426, 2427, 2428, 2429, 2430}], 
          LineBox[{2439, 2441, 2442, 2449, 2450, 2463, 2475, 2476, 2477, 2478,
            2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 
           2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 
           2501, 2502, 2503, 2504, 2505, 2506}], 
          LineBox[{2513, 2514, 2515, 2516, 2517, 2548, 2549, 2550, 2551, 2552,
            2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 
           2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 
           2575, 2576, 2577, 2578}], 
          LineBox[{2604, 2605, 2606, 2613, 2614, 2627, 2628, 2629, 2630, 2631,
            2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 
           2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 
           2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664}],
           LineBox[{2668, 2669, 2670, 2675, 2676, 2677, 2678}], 
          LineBox[{2684, 2685, 2686, 2708, 2709, 2726, 2731, 2732, 2733, 2734,
            2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 
           2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 
           2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 
           2768, 2769, 2770}], 
          LineBox[{2777, 2778, 2779, 2786, 2787, 2789, 2790, 2791, 2792, 2793,
            2794, 2795, 2796}], 
          LineBox[{2800, 2801, 2802, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
            2824, 2825, 2826, 2827, 2828, 2829, 2830}], 
          LineBox[{2835, 2836, 2837, 2838}], 
          LineBox[{2851, 2852, 2853, 2860, 2861, 2863, 2864, 2865, 2874, 2875,
            2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 
           2887, 2888, 2889, 2890, 2891, 2892}], 
          LineBox[{2896, 2897, 2898, 2903, 2904, 2934, 2935, 2936, 2953, 2954,
            2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 
           2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 
           2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 
           2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996}], 
          LineBox[{3000, 3001, 3002, 3025, 3026, 3027, 3028, 3029, 3030, 3047,
            3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 
           3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 
           3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078}], 
          LineBox[{3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096}], 
          LineBox[{3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129,
            3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 
           3141, 3142}], 
          LineBox[{3148, 3167, 3168, 3169, 3170, 3183, 3184, 3185, 3186, 3187,
            3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 
           3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 
           3210, 3211, 3212}], 
          LineBox[{3216, 3217, 3218, 3225, 3226, 3227, 3228, 3229, 3230}], 
          LineBox[{3234, 3235, 3236, 3241, 3242, 3251, 3252, 3253, 3254, 3262,
            3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 
           3274}], LineBox[{3280, 3293, 3294, 3303, 3304, 3305, 3326, 3327, 
           3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 
           3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 
           3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 
           3361, 3362, 3363, 3364}], 
          LineBox[{3370, 3371, 3374, 3397, 3398, 3399, 3400, 3401, 3424, 3425,
            3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 
           3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 
           3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3458, 
           3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466}], 
          LineBox[{3475, 3476, 3477, 3478, 3479, 3492, 3493, 3494, 3495, 3501,
            3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 
           3513, 3514, 3515, 3516}], 
          LineBox[{3525, 3526, 3527, 3534, 3535, 3548, 3561, 3562, 3563, 3564,
            3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575, 
           3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 
           3587, 3588, 3589, 3590, 3591, 3592}], 
          LineBox[{3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3619, 3620,
            3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628}], 
          LineBox[{3639, 3640, 3641, 3642, 3643, 3651, 3652, 3653, 3654, 3655,
            3656, 3657, 3658, 3659, 3660, 3661, 3662}], 
          LineBox[{3668, 3688, 3689, 3696, 3697, 3708, 3709, 3710, 3711, 3712,
            3713, 3714, 3715, 3716, 3717, 3718, 3719, 3720, 3721, 3722, 3723, 
           3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 
           3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742}], 
          LineBox[{3752, 3753, 3754, 3755, 3756, 3769, 3770, 3771, 3777, 3778,
            3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 
           3790, 3791, 3792, 3793, 3794}], 
          LineBox[{3800, 3810, 3811, 3812, 3813, 3833, 3834, 3835, 3836, 3837,
            3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 
           3849, 3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 
           3860}], LineBox[{3867, 3868, 3869, 3876, 3877, 3892, 3893, 3894, 
           3895, 3896, 3897, 3898, 3899, 3900, 3901, 3902, 3903, 3904, 3905, 
           3906, 3907, 3908, 3909, 3910, 3911, 3912}], 
          LineBox[{3920, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3958, 3959,
            3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 
           3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 
           3982, 3983, 3984, 3985, 3986}], 
          LineBox[{3995, 3996, 3997, 4002, 4013, 4014, 4015, 4016, 4017, 4018,
            4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 
           4030}], LineBox[{4046, 4047, 4048, 4053, 4054, 4055, 4068, 4069, 
           4070, 4071, 4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079, 4080, 
           4081, 4082, 4083, 4084, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 
           4092}], LineBox[{4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 
           4112, 4113, 4114}], 
          LineBox[{4127, 4128, 4129, 4130, 4131, 4134, 4135, 4144, 4145, 4146,
            4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4157, 
           4158}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.3201101055430762`, 0.}, {0.23432415262541126`, 
         0.46051678633312193`}, {
         0.23432415262541126`, -0.46051678633312193`}, {-0.08033772784471119, 
         0.38916432713979554`}, {-0.08033772784471119, \
-0.38916432713979554`}, {0.04159229022126073, 0.}, {-0.04149103424007403, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{0.14, 0.}, {0.14, 0.}, {-0.14, 0.}, {-0.14, 0.}, {0., 
         0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.390887273571126, 
     1.305101320653461}, {-1.5312939543611717`, 1.5312939543611717`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzsvHk0le3/NmxsMlQ0URoMKZEISeUjSaTQoFRUaFBCRaVBgwalKBWFyFgZ
koRo8Nnmecg8z7ONPZjHZ+/e93v/cfauda97fX/r+T3f9/fc/9zrWMe+rus8
j89xHOe1ZVlhbrv3JBcHB8erORwc7P+36KTcebScm6L4pWPB2tvDSGCITRWn
fm7sh3/xBIYFGsbH2Z9/82Grn1HUIIotCslm82W03jE21u5jmrN5R7G0wRsN
/ci71NmVzcd11Nx0ZOFi3/xzbF4yJDQ0eA4T0wtMPrL5w/rhi0JY+Kq+3WU2
35FcdDNXg46C2hnf2LxNffhbNr4gU2XJ5o9wP3zf3tiLS0b8K9j8EkVqaQcL
r5sd+JuPWh9RoqLZjcupbals/obN8a8bWDjGJfUgm9fxv7f4QWA7rpdJ/cLm
1w59LWHjoOBjh9j89C2z75RytWCAYGAom7+7Yv+tMhZm8JceYfOB6i1jkhYN
KHl71J3N2x7amyvFwvd2vvvNm1V0n+p4UIkVb01K2Xyum4l9Fwv7PHrhyObf
fci78GBHEYaXiUWw+extn4wesrCsR/ZRNk+33mOtOycdr80M/q1frppNlj4L
q3Vq/V6fpICzlYh2JK4pi2th84844oblWNjXq3Qfm/deWfKVERMOC5yf1rD5
2Bvg1sDCMxfPvs7mnVY+vjVllQZlI8c/s3mODec1xlj44NGvN9i81ZudJ44P
/IL3ioNebL73gnTEMRbO0xE9zOYTU3eVJClVQua71/VsvmOJXDQb+90VNGLz
T88UfZ+r1gAuSRl1bH7rHfoxNj7bKmvM5nPTL1clVzZD5fkZv/dHc1epSGLh
kAXxpmx+XZvDN7ur7fBKTDeDzXPdCZ+4yMJya9YdYPOC5T8PSIp0g6fL6UI2
36U2P0CChTedT7dj86tf3TEuje8FTpVHuWw+z75IuYSFt9R9s2fzpwYiWjRl
6VD4Zd3v9bv2a4WxcaPa/6Ofuf9e2cXjDHAJC//tj88NJhWiLJyT6HWCzYe6
GYUxc/qh7+qLl2z+adZNezbulTP6vf/X+8625/gMwobnnj/Z/MuABB829r6z
//f+Ft9suRpsNQxeqbFpbF7Oa4KLjR8PnN/tq8pFaX6TlivHyl+FU64xG3sI
3KayMChtPjzzsyEnxfKykyA7n1Z+j3aycXmY6wib945yoKRaclDEMq4w2Nfn
ouqsNBYWpZuksXmtXUsMP3NOoXzxsXg2b/fN9z4bP3Z6Ocbme5SGyyoUJnDy
qwgH+/5BCfoalSzcO1pQy+ZN683ecZiPodcH1WT29d7Gi5LZ2DVhXgabV1/3
SHPV8xFU0K4eYvO8H085s/H7bR6jbH6/sVazQfIQaj5lZv7e34KKhYYsrCLr
Xcjm7w9v2X+FMYDaKcITbH7rcE8xGx9fHjKb3T/eKQ9nvxXvx85zZVlsPv0t
1ZqNF2rJcbP5h3NGHqTvZWDc0nPs++Fl5OXMYGGvy3d42bxWcqdRrxMNb8R7
8rH3Vx/5MY2Nk/U7ONm8Np9P1ZpTPcizad4g+/prsuJvZFmYPlfjG3t9k15F
n6+ld6L4uczf+qd9FftynYVT+HfOZF9vJFJsmL2yDY1toJh9vdjtg+FsTLmV
P53NhwjvNxNxbsILzrHC7OszzU+oirKw1d3k38+3P/p596/8WvTjav59//sv
UuOLWFj44FH2fuFrhJD1+adluOj9+A/2/dcVNuZcYOHdHI/a2XytEY+JmH8+
CkU5dLD5PvtdF5eysLdV+u/5a9j5yh5aQcFViuW/59vzvcrVlIWjl1Z+Z/PT
+uIe2692wdHq97/1kf9esseXhTW27GP7EaTHMP5wfALYCBj+9qf65PepPSwc
WlTJ9hMo5O2yoh3OgW9XJRvY/J4V0oI9LOzekvZ7/5GouqCSWgIm5tjC5occ
+A+Us3BkycYq9vVljNJeNdkaMLhtxl4Pypn72G5k4RXKO37v/yZf7t382Eaw
H5XiYa/vbWHmrzwWfsmT/jsfZ+vV828atYLPjLxpv/W9nHSCjaeBwe/5uJ/j
7ZYf6IBBwbS5bD7P4sbUWhb++J33d34G/Mc0Gl5SoUVMh71elOF7HVXPwnty
A9PZfFKo22sdURoYSxz/fT42JQRvYeO3zdGNbP6egeeqFV10OHPMqYa9/hv3
e4KXs/Aa5yW/8xE5MO3WSAITXtn7lLH5MybrJdi46Mid3+s7X7wyfc2yAeT4
f//rVlx02WgyD84US5xafLUWCIyipt/OcLvHIM+lSzfndlRAU+Ev7fHF8dhQ
/spnq30V1KZtX9Fc/x3Lbu5PYQ5Vw+VCxqm4ZxRMuy4RH86oBaq7qE/K6RS8
r+BmcrKqHlzw2zbHs+lofU7s9dOKBlBMvBZyq4iBVf0PK7WPDsH2qadyW74y
cLyv9nYuDMF6w+hg2n4G2ggtTjEoHoSNc5/2dvTl4G3+8cCLZk1QE3VIoaax
EMNGnLZnljfD9jG7tZ87itFdCY59glbwchnMXctVjpU/fxZo+7ZByIaKtS6r
qjA7aM8LH2Y7qFTPvjxsVIsf+3e/+7a9E5yWFKwen9OKdWdvLTn1qhcMq3wq
rNzbUNX6yV1mQx+M1p/mfpRZj4udBGm1O7rgHO3G+WVijfikO1Tz/s5uaO81
n+5q1IS8Csv9onZTwab7pLarazM67b3AdXxPD+xV1Lp2RLADzbmWndj2igac
ihoqO5070aT3zRYDDTosUpuVpPqoCyd2Kl65EEcHjfHlH3gedaNqjMqJ73IM
kN8z2hn0gIregh0Dsu9Y58c8/vv8Tj04Q+OeWPoyJiyi6V5l0Ok4z6dnxZXT
gzBcdyBc042OzEdGvprjA1CwpFKtcTUdp9XvVY52HwC/0ELp/FQa7vVu7UyT
HgDL+1suzjxGw7LvAt8dE/vB6DgoraT34bNtOR8qjVjvEft61cvE+/COwtIv
lT1MUGh15pHY14uh96dVOT5g/rEecr3kfsjryfuTzyfXR66f3B+5f1If0l+k
/0h/kvMh50fOl/QP6S/SH6R/SH+R/iP9S/qb9D+ZDzI/ZL7IvJJ5JvNO9gHZ
F2SfEBhNEl9dSdWPwzBJapFgYiU2Pbgwc0wuHkVDGB+uPa1CRZ75Almvv6H7
tJD7PS+qsb3Y7N5yiZ9YOlh5xeVFDW6UKGh1yEIUWMO7293tj/762/snzLqs
Hx+VjFwvhJ8PO9SjjEf9lTmhabhDvuyxQmgDMnLEVarSM7Hh/p1zG9wacd5O
9UIZ7lw0ehLSYXKuCUXNVc05DhVgyI+3S69pNaPOF757EWa/8NezPNnTC1v+
dv13GMkRgruKUWlm2OHm4Rac/+biowooxXHdKzkBpa1Y3bK3vX5jOXYeS6PX
RbZhKOebF6MqlfjtoKRG+f121KHOzdZQqcab8x1Glx3pwNQbmfrzVWuxZolm
Te/aTjSKtf2+ZVM9TnTe5KNzdqFobnUJvG3AaSMykcUlXdgzn2/LW/9GnPZk
efTQ+25s0E+o8glowrhrtleeX6eivpGwSE1AM34NOFEw27AHPaZrW0wLaMHP
tbseV0v1opSaTFSPXyumnNw1e+VEL3bwjJ296dOG6cF62ROlfWgb7iB337Md
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
Ek2HHl5t5i3GZ5rNs3L6KH/s3z34tcCZ4GrsvmC7oMqzABmWT05Ghldi4k3q
LiPXXOR/6f3A+Wc5CjzmzLp1JgttZo4di68uRYfIfp6r0ul/3P9TkFOK4/s+
nCs5gdWXW5BReVl2yW4aMi5OKtzb34rHRe2eH06loYCy68BjlTYcsjSuvrKR
jt/dD8ivEmv/4/7k8782RCgbvxzF7LLFs+4dHkKfjweK6z1H//p5BLl+cn9F
m3TthN7RcfOyohU19HbUO9/sLD2XgWu/9HBYZHWg2TRpka/XGOi2OzT3R1An
Ck8KSyc1MdC0l+d+5+0uPHEw7PN2XSb6enDIdB7vxj1CXfFakUzU2/bm+/dt
VKxdW7w5cW4/nh0q32i2ugd5Pp7cEm3Xj8OfvwRXzu1FfeZ1z3Ml/Rh1po/z
0ngvqlvSJDYqDeCu+XoH73b0YRlfSuvCFwNoedhiL5cVDRfUMatn0AdQVFLh
0o0mGo7VOU3j1x9ESrvgvKjDdHwoeP7kirBBNA4ZX+tbzNLx3PdhHd4hbDYZ
Tdu2m4EeIycoTseG8LjgjMqgDAa24trNnAlDuG54fvszTSZey67qHpw7jDHG
82zrfjJxv8iZAouzw9grz33hycZ+tIuobNuRPIxVjk1U79h+LL8rqxgkMoLX
NKObZioO4O23Zp8vnR/BAseLeysjB9B6yuEEpo9gmbzE5pmyg/g26KLe7SWj
+NI49a1X6OAf+SDzQ+aLzB+ZTzK/pP/JfJD5IfNF5o/MJ5lfMt9kH5F9RfbZ
v5uX/+vn/14//10fzZ34cEjPuxeXmHju1H7TDOfLmJQZe/sweNb7n8qqLfB5
8nnRd24aRvz4+bOorAWezclzC1lWjBO3/EQcVJOgYco6X2T6L7x50WCHxJ1v
EGDAIxhfnIdZj2tjnodEQ2Tvm0P84qNoBorxlHeDoDG3uXWF31/PB+mjnm31
nj0o6eoj1lPUBEzeUb57T6lYsLrhpatgE6zTvuq+4n43mj4N2nNLvxH8uWsf
nb3ShRa61+1GnzeAN73les5DGpY4/uj/mtIK68zP7nzJR8fo9z4Wy2LbwN5Q
Qn3BEzrqqB2ZNTO8HU78mH1wzywGeiqPddiHdADXO3mP7Q8Y6O11fco8uBP0
Be4OM6YYePBUze7i912wgzHzzqErTMz2EStJ+9QN1P2pa69SmTi0EZ6r/aBC
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
WGDEZ6F5vZoIirfUuUJMxiBD6INIbuKf9/OC+PD48fzw/HF9cP1wfXH98frg
9cPri9cf5wPnB+cL5w/nE+cX5xvnH/cH7h/cX3g/wPsF3k/+1i/+1frrbr3n
ISQQhQok5TefZXUi7XPTR38d8kIXE5yG+K91obRJm23nlDzh1ofUqJaxLmQT
q6emqN8AP6sP2PfJk5HEfqPTuT8b4P2OX1Xko2Qkn9pjY67WCOkR26+Me5PR
qYPa/M3xjSBkMjvHM3+/7I+7tNdiXRO8fJctv65//vOGNsvXPG/hnmlT/62U
biTLFWKUYp4KN9UEU8Iv9CCt0sbVh0V+wHnLAzM6ivP3x5Nrl5/oJsL+zMjf
p4d7kZIb95q7ablwx8Yq5XNSH2pSK3qx2r8QdLa372i93I8yg097bDnzG54f
UnRpVyOhgb2DI3YSFfDgrZ7pDyYJyZGoIiTuKrguzzJ3+T6AvtnHj79kVENf
0yoevhuDKKBgeeitjlqo+JZ8zkt7CKXzKlN9f9eD+q/vN3qmhlCX9C6frUub
4Va8Vcspg2F04VBha9dcM6y2uLUkJ2YYnbwzcWX/SAu0eiiq7yWMoG6paaGO
/Z/RrOmh9O08nejkcv/07upM5HkufVeCYAf6GJNTw3akCJHb1Pj80hqQSop3
HjLrgZ1nTj2+NH/fT2pYJ9j9qBekM2XHdpGoaJ//Saa8bjssipcMOzU6gsb3
z7lSCjvA+oJVe3HrKNL2eTbFGO2EbyXXq8n2FMQRFdFnLdINLeNMY0o7Bf0y
u+IhntEHXYW+1ncv0pDuzOTtgpF+OHLGdE6JRUNRvW0jITQSiPneLRg5R0c8
BXdGbRkD0F67dX9hBx3JOed7qzAGIZXltuKHBQP53H1eNkwdAjYrJJxTzkAn
XrdFyhgXo3uVe9sq7tegd++4i1k+lD/3g/wPV/IFfmWjutFnAYHX2lDmAUJf
Fmc+Gnr3TarFqwXFJxVkqqpQIKGiz7ZmjoWsTQmGzLvz70V29lIbfxbaG8L1
8XY9GWRGCOcO6zBRIymz9cHPYTAWEtwfmchEGrcz7NkiRsApyzY/RmLhfHx9
PD58Pr4+vj+eP64Prh+uL64/Xh+8/jgfeH3x+uN84PzgvOI847wv8DPmd7wf
4P0C7ye4v3D/4f7E/Yv7G/c/3h/w/oH3F7z/4P0J7194v8T7Kd5v/9YP/uYP
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
U536N1UJxBL+la30Viq4fn48Mzlfv9PuXUvsH9AgdxutucKVQHzgsT4qUJb+
p78NJh6MzftIB5w3nEecV5xnnHfcD7hfcD/hfsP9iPsV9zPeP/D+gvefv/WX
/3Se/9084v74V/kkvTbztGmgog2JSyPzW4rRGcf7Jt4nqKiqnxxa2l2MHNIU
7yV3UVBW+Sjbk/5i1H31oEhSMwUNy0VLEefHwqYBs7FVFLTl7DsLNlIx0u3h
feTyloKyD9l/Z86Pz4XdWbTTjYK2JpmpOw4Uoymt2DN0JwpqGPsud3l+PJit
KrzvLAVdleFWcfnfjPHn8fVGanQEl4XRkM7obj6evGI0dmMLyraiowpBiYDO
d8V/3pcBk7sePQxdGB8eP54fnj+uD67fP43nTPe67GUuVLR50a2Ehpo2UO0e
//aaTEXXLymd3Z3ZBhJ3PoSsP0tDQ7VAPRfbBhYqv3bOtZIR5w7PjB1r2iG7
TXualUpGDn6GB1wk24EWsyxy1VMyaov0XWWzth1GxKaaRlMpKCpX4oQepQ30
D3U8etA/ij583Dw2ydUOddwrK5c6jqBSY930GpF22BxupeoyTkMS+7WOuj1q
g7YA5tmMx3QkdvnLoRdn2/58f2sxn9BMtlUbME4M7PUdnN9PrKC7TaIdWkcF
ZHXOkxHlZPcSLal2yJi0a3nNOYQuNqCaAzLtYKUUbZTHGkSu3Ku+mc+P8fXw
/fB4cD1wvXA9/2n+eD7/VO9/mn+PiJx9rOUwch+y5q+4FwtamrurX9qREe8u
A8NM+1iwiFgtEuAyhGw/97dUGsSCfuSH7F22FGR3/anB2LNYIOZMlYfk1aNI
4/xu3qgQeD0tqq+7sQmdI82+oUeEgpYTu4zoxw70SEihd09zBFDz8lOCqW2I
zlXlUwXhcPHbqvKdfi3ohcsiB3QkbMF8fH2nXS45Jd9H0P4JL81J/1hQrT50
pgINIp6RytCkpbGw2T3ZUYx/AEnbaG20LYwB6+hNMueb+lES15pAsmMMpG6v
f573rg996nEv38uKBmXTqF9yV3uR1IR1z70L0VBX9zQ8RK8HLdb/Wf6kPApi
6qJVeYS6kU1eSKCTeBS82td081FrJ1K8M7RR2jwSuA14a28soSBavznDMDh2
QT54vrge+Hr4fng8eLx4Pni+uB64Xnh98frjfOD64/njfHQtVuBje9WPliRJ
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
       
       "], {{{}, {}, {}, {}, {}}, {{}, {}, {}, {}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{132, 133, 134, 153, 154, 155, 156, 157, 158, 159, 160, 161,
            162, 163, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 
           186, 187, 188, 189, 190, 191, 192, 193, 194, 195}]}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{202, 203, 204, 211, 212, 229, 230, 231, 232, 248, 249, 250,
            251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 
           264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 
           277, 278, 279, 280, 281}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318,
            319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329}], 
          LineBox[{402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
            414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 
           427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 
           440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 
           453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 
           466, 467, 468, 469, 470, 471, 472, 473}], 
          LineBox[{477, 478, 479, 517, 518, 519, 520, 521, 522, 538, 539, 540,
            541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 
           554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 
           567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 
           580, 581, 582, 583}], 
          LineBox[{589, 590, 591, 616, 617, 625, 626, 627, 628, 629, 630, 631,
            632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 
           645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655}], 
          LineBox[{659, 660, 661, 675, 676, 689, 690, 691, 705, 706, 707, 708,
            709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 
           722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 
           735, 736, 737}], 
          LineBox[{757, 758, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
            773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783}], 
          LineBox[{789, 814, 815, 817, 818, 839, 840, 841, 856, 857, 858, 859,
            860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 
           873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 
           886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 
           899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911}], 
          LineBox[{940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
            952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 
           965, 966, 967}], 
          LineBox[{972, 973, 994, 999, 1000, 1003, 1004, 1029, 1030, 1031, 
           1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 
           1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 
           1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 
           1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075}],
           LineBox[{1112, 1113, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 
           1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 
           1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 
           1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 
           1166, 1167, 1168, 1169, 1170, 1171}], 
          LineBox[{1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
            1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 
           1217, 1218, 1219}], 
          LineBox[{1223, 1224, 1225, 1249, 1250, 1253, 1254, 1255, 1256, 1257,
            1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 
           1269, 1270, 1271, 1272, 1273, 1274, 1275}], 
          LineBox[{1279, 1280, 1281, 1286, 1293, 1294, 1295, 1296, 1297, 1313,
            1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 
           1325, 1326, 1327, 1328, 1329, 1330, 1331}], 
          LineBox[{1337, 1356, 1357, 1359, 1360, 1373, 1385, 1386, 1387, 1388,
            1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 
           1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 
           1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 
           1422, 1423, 1424, 1425}], 
          LineBox[{1431, 1456, 1457, 1470, 1471, 1472, 1473, 1474, 1480, 1481,
            1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 
           1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 
           1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 
           1515, 1516, 1517}], 
          LineBox[{1523, 1546, 1547, 1548, 1550, 1580, 1581, 1582, 1599, 1600,
            1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 
           1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 
           1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 
           1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 
           1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 
           1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663}], 
          LineBox[{1669, 1670, 1671, 1688, 1689, 1704, 1705, 1706, 1707, 1708,
            1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 
           1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 
           1731, 1732, 1733}], 
          LineBox[{1743, 1744, 1745, 1750, 1752, 1753, 1754, 1755, 1756, 1757,
            1758, 1759, 1760, 1761}], 
          LineBox[{1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
            1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 
           1805}], LineBox[{1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 
           1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 
           1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 
           1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 
           1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 
           1911}], LineBox[{1942, 1943, 1952, 1953, 1958, 1959, 1960, 1961, 
           1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 
           1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 
           1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 
           1995}], LineBox[{2001, 2002, 2003, 2012, 2013, 2014, 2015, 2016, 
           2017, 2018, 2019, 2020, 2021}], 
          LineBox[{2027, 2028, 2029, 2030, 2031, 2039, 2040, 2065, 2066, 2067,
            2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 
           2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 
           2090, 2091, 2092, 2093}], 
          LineBox[{2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
            2115}], 
          LineBox[{2121, 2126, 2127, 2153, 2154, 2155, 2160, 2161, 2162, 2163,
            2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 
           2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 
           2186, 2187, 2188, 2189, 2190, 2191}], 
          LineBox[{2231, 2234, 2235, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
            2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 
           2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 
           2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 
           2282, 2283, 2284, 2285}], 
          LineBox[{2289, 2290, 2291, 2298, 2299, 2300, 2305, 2306, 2307, 2308,
            2309, 2310, 2311}], 
          LineBox[{2315, 2316, 2317, 2321, 2322, 2323, 2331, 2332, 2333, 2334,
            2335, 2336, 2337}], 
          LineBox[{2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353}], 
          LineBox[{2371, 2372, 2373, 2374, 2375, 2388, 2389, 2390, 2391, 2408,
            2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 
           2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 
           2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 
           2442, 2443}], 
          LineBox[{2449, 2450, 2451, 2468, 2469, 2482, 2494, 2495, 2496, 2497,
            2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 
           2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 
           2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 
           2531}], LineBox[{2537, 2561, 2562, 2563, 2564, 2577, 2582, 2583, 
           2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 
           2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 
           2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 
           2617, 2618, 2619}], 
          LineBox[{2630, 2639, 2640, 2645, 2646, 2659, 2660, 2661, 2675, 2676,
            2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
           2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 
           2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 
           2710, 2711, 2712, 2713}], 
          LineBox[{2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
            2736, 2737}], 
          LineBox[{2770, 2771, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
            2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 
           2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 
           2804, 2805}], 
          LineBox[{2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826,
            2827}], 
          LineBox[{2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
            2855, 2856, 2857, 2858, 2859, 2860, 2861}], 
          LineBox[{2877, 2878, 2879, 2894, 2895, 2898, 2899, 2916, 2917, 2918,
            2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 
           2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 
           2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 
           2952, 2953, 2954, 2955}], 
          LineBox[{2961, 2962, 2963, 2984, 2999, 3000, 3001, 3002, 3003, 3004,
            3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 
           3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 
           3027, 3028, 3029, 3030, 3031, 3032, 3033}], 
          LineBox[{3039, 3064, 3065, 3066, 3067, 3103, 3104, 3105, 3106, 3113,
            3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 
           3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 
           3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 
           3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 
           3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 
           3169, 3170, 3171, 3172, 3173}], 
          LineBox[{3189, 3190, 3191, 3193, 3194, 3195, 3196, 3197, 3198, 3199,
            3200, 3201, 3202, 3203, 3204, 3205}], 
          LineBox[{3211, 3212, 3213, 3214, 3215, 3216, 3242, 3243, 3244, 3245,
            3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 
           3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265}], 
          LineBox[{3270, 3271, 3272, 3277, 3280, 3281, 3282, 3283, 3284, 
           3285}], LineBox[{3291, 3312, 3313, 3314, 3315, 3328, 3329, 3330, 
           3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 
           3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 
           3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 
           3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385}], 
          LineBox[{3395, 3396, 3397, 3401, 3402, 3403, 3404, 3405, 3406, 3407,
            3408, 3409}], 
          LineBox[{3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435,
            3436, 3437, 3438, 3439, 3440, 3441}], 
          LineBox[{3446, 3447, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470,
            3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479}], 
          LineBox[{3484, 3485, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502,
            3503, 3504, 3505}], 
          LineBox[{3509, 3510, 3511, 3527, 3528, 3529, 3530, 3531, 3532, 3533,
            3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541}], 
          LineBox[{3545, 3546, 3547, 3554, 3555, 3558, 3559, 3568, 3569, 3570,
            3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579}], 
          LineBox[{3585, 3586, 3587, 3606, 3607, 3620, 3624, 3625, 3626, 3627,
            3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 
           3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649, 
           3650, 3651, 3652, 3653, 3654, 3655}], 
          LineBox[{3666, 3667, 3668, 3675, 3676, 3689, 3702, 3703, 3704, 3705,
            3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 
           3717, 3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 
           3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735}], 
          LineBox[{3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759,
            3760, 3761, 3762, 3763}], 
          LineBox[{3769, 3789, 3790, 3799, 3800, 3801, 3802, 3803, 3804, 3805,
            3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 
           3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827}],
           LineBox[{3831, 3832, 3833, 3848, 3849, 3862, 3863, 3864, 3865, 
           3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 
           3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895, 
           3896, 3897, 3898, 3899, 3900, 3901}], 
          LineBox[{3905, 3906, 3907, 3929, 3930, 3932, 3933, 3934, 3951, 3952,
            3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 
           3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 
           3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 3983}], 
          LineBox[{3987, 3988, 3989, 4027, 4028, 4029, 4030, 4031, 4032, 4033,
            4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 
           4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 
           4056, 4057, 4058, 4059, 4060, 4061, 4062, 4063}], 
          LineBox[{4067, 4068, 4069, 4103, 4104, 4106, 4107, 4108, 4109, 4110,
            4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 
           4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4132, 
           4133, 4134, 4135, 4136, 4137}], 
          LineBox[{4143, 4172, 4173, 4181, 4182, 4186, 4187, 4188, 4189, 4190,
            4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 
           4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 
           4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223}],
           LineBox[{4229, 4233, 4234, 4239, 4240, 4241, 4242, 4243, 4244, 
           4245, 4246, 4247}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.3201101055430762`, 0.}, {0.23432415262541126`, 
         0.46051678633312193`}, {
         0.23432415262541126`, -0.46051678633312193`}, {-0.08033772784471119, 
         0.38916432713979554`}, {-0.08033772784471119, \
-0.38916432713979554`}, {0.04159229022126073, 0.}, {-0.04149103424007403, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{0.14, 0.}, {0.14, 0.}, {-0.14, 0.}, {-0.14, 0.}, {0., 
         0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.390887273571126, 
     1.305101320653461}, {-1.5312939543611717`, 1.5312939543611717`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.674901626494658*^9, 3.674903143863595*^9, 3.674903445816263*^9, 
   3.674903502049872*^9, 3.6749035577269983`*^9, {3.674903617227302*^9, 
   3.6749036350858507`*^9}, 3.674903711492485*^9, {3.674903783485037*^9, 
   3.67490385200747*^9}, 3.674904248380031*^9, 3.674904539727919*^9, {
   3.674905077905952*^9, 3.674905155350131*^9}, {3.674905198453768*^9, 
   3.674905278050394*^9}, {3.674914351085289*^9, 3.674914364934512*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]", "=", "0.001"}], ";", 
  RowBox[{"\[Beta]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "5"], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox["\[Beta]", "4"], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "6"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "6"], " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "-", 
       
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
     "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "/.", 
      RowBox[{
      "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"zeros", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"potential", "[", 
      RowBox[{
       RowBox[{"line", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunks", "=", 
   RowBox[{"sqrt", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{"a", "-", "b"}], ")"}], 
    RowBox[{"(*", 
     SqrtBox[
      RowBox[{"f", "[", "t", "]"}]], "*)"}], 
    RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "f", ",", "zeros", 
    ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6745698325272093`*^9, 3.6745698534102497`*^9}, {
   3.674569917850174*^9, 3.6745699364522085`*^9}, {3.674569989817911*^9, 
   3.6745700752046757`*^9}, {3.6746218993259897`*^9, 3.674621911606211*^9}, {
   3.674622362764021*^9, 3.67462254226054*^9}, {3.674622574237997*^9, 
   3.6746225800900073`*^9}, {3.6746226866282544`*^9, 
   3.6746226980086746`*^9}, {3.6746230555282564`*^9, 3.674623079203499*^9}, {
   3.674630191344767*^9, 3.674630213784864*^9}, {3.674630260980904*^9, 
   3.6746307658956833`*^9}, {3.674630854944923*^9, 3.674630915506773*^9}, {
   3.6746311786005287`*^9, 3.674631220058567*^9}, {3.67463131104191*^9, 
   3.6746313496087503`*^9}, {3.6746314477031593`*^9, 3.674631508692155*^9}, {
   3.6746315413639793`*^9, 3.6746315913995*^9}, {3.674631653037863*^9, 
   3.6746318269471903`*^9}, {3.674632294353447*^9, 3.674632307291277*^9}, 
   3.674713480709482*^9, {3.6747135297255363`*^9, 3.67471356968962*^9}, {
   3.674713620034906*^9, 3.674713625048163*^9}, {3.6747136597838182`*^9, 
   3.674713697696732*^9}, {3.674713904056275*^9, 3.67471406881924*^9}, {
   3.6747141976958103`*^9, 3.6747142006870213`*^9}, {3.674714437131072*^9, 
   3.674714437196405*^9}, {3.674714547734468*^9, 3.674714556678218*^9}, {
   3.674737960475657*^9, 3.6747379850567017`*^9}, {3.6747380182575703`*^9, 
   3.6747380928485928`*^9}, {3.6747381266014357`*^9, 
   3.6747381708949327`*^9}, {3.674899147139434*^9, 3.674899160751631*^9}, {
   3.6749057510480003`*^9, 3.674905751159912*^9}, {3.67490583115362*^9, 
   3.6749058516953278`*^9}, {3.674906295991721*^9, 3.674906338801784*^9}, {
   3.674906389709622*^9, 3.6749063939838247`*^9}, {3.67490652940211*^9, 
   3.674906538620612*^9}, {3.674906581869535*^9, 3.674906613594713*^9}, {
   3.6749075097186003`*^9, 3.674907541653768*^9}, {3.674907724579755*^9, 
   3.674907725994588*^9}, {3.674907780143928*^9, 3.674907783304734*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9085621457122293`"}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "+", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "-", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.00031171697817377047`", ",", 
   RowBox[{"-", "0.00031171697789562474`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67463231282607*^9, 3.674713628962058*^9, 3.674713662946259*^9, 
   3.674713698331954*^9, {3.6747139698849792`*^9, 3.674713997644226*^9}, {
   3.674714040275152*^9, 3.674714069314946*^9}, {3.674714193042343*^9, 
   3.674714202261915*^9}, 3.6747144385332947`*^9, {3.674714550430603*^9, 
   3.674714557181621*^9}, 3.674737806427273*^9, {3.674737961278553*^9, 
   3.674737985691721*^9}, {3.6747380443226223`*^9, 3.67473805438195*^9}, 
   3.674738093582716*^9, {3.674738127265416*^9, 3.6747381715018463`*^9}, 
   3.67483695713031*^9, 3.674898950931019*^9, {3.674899150118249*^9, 
   3.674899161145083*^9}, 3.674904248442429*^9, 3.674904539801716*^9, 
   3.674905752849414*^9, {3.67490583170653*^9, 3.674905852007999*^9}, {
   3.67490630409307*^9, 3.674906339387286*^9}, 3.674906394344993*^9, 
   3.674906539584276*^9, {3.674906589772007*^9, 3.674906613931275*^9}, {
   3.674907514929556*^9, 3.6749075419758797`*^9}, 3.6749077268461657`*^9, 
   3.6749077838061447`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4.8505128658648236`"}], "-", 
  RowBox[{"0.45345036723048493`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.67463231282607*^9, 3.674713628962058*^9, 3.674713662946259*^9, 
   3.674713698331954*^9, {3.6747139698849792`*^9, 3.674713997644226*^9}, {
   3.674714040275152*^9, 3.674714069314946*^9}, {3.674714193042343*^9, 
   3.674714202261915*^9}, 3.6747144385332947`*^9, {3.674714550430603*^9, 
   3.674714557181621*^9}, 3.674737806427273*^9, {3.674737961278553*^9, 
   3.674737985691721*^9}, {3.6747380443226223`*^9, 3.67473805438195*^9}, 
   3.674738093582716*^9, {3.674738127265416*^9, 3.6747381715018463`*^9}, 
   3.67483695713031*^9, 3.674898950931019*^9, {3.674899150118249*^9, 
   3.674899161145083*^9}, 3.674904248442429*^9, 3.674904539801716*^9, 
   3.674905752849414*^9, {3.67490583170653*^9, 3.674905852007999*^9}, {
   3.67490630409307*^9, 3.674906339387286*^9}, 3.674906394344993*^9, 
   3.674906539584276*^9, {3.674906589772007*^9, 3.674906613931275*^9}, {
   3.674907514929556*^9, 3.6749075419758797`*^9}, 3.6749077268461657`*^9, 
   3.674907784329496*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]], 
      LineBox[{{0.9999876656422945, 7.780169246817496}, {0.9999999795918367, 
       1.5851510612584503`}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVx3k41GsfgPExhGxp0jA6OCYp9aIslSVfHSIclLVFC0oqW7ZsUUTZsk3e
7Fsq6kiy1JF5HkvkIEv2FKKJmd9QmLIU73n/uK/PdSu6eNucJ5NIpMJ/+7/m
56e68bS9gVy+Zv7Ae3n0pczBZZSmBQ5Un8u2SYmIKtp35znNGAqWZkhFXxjo
JTPc46qyFSSFVKidzMpAajpSxTk0OygSPOKbnZqDSJum09YUjsOG4Guddbfz
UTdRF+msfBq4rUE/feQKkW6XZnkq7RyoP3ZjXiPuo60Hch82ZruBlt+FQ2Ya
D5BYqXDegsJF8JSPeJHq9hB9iPqQ6KDsBWvdqTEn75cgnNWonUjzh7Xl9Qm3
8v9CWj1Bz7adDIB8i5zLO+LLUImwmiozOxAWM+T2Ub2fotSAe0qzCsFgX9DR
Hp5ajlytPTcdVQ6Ho4qd/BY7K1DUjfigONpNYIzwO54kVSHmb27VDn/fBJXr
8v7JdlVoscZwgX4yGrbcumwe/7AKeczwvGuzY6DaznBA2Lwa2Z08e4FQiIWm
YHt+n8gapKyt7WClfAfchokQudaX6Jz/LC2WxoCofBmlqKE6pMmfGlLhwwAZ
s1TCdAsTkVO13r9vYYDGI15VrBMT5T0NzlYLvAuuyzJHUj4w0TCbX6G3Jx3m
TfYxBYYRsnaWUVJIyICSJNkjLqMY6VodVKtazQWLyvTSz4UNSJhhVvD1232I
cKy1r2h9jVb2j68UyBZD6VzHEhp9jWY+BDnYGhWD86ZHB2p5r9G77Y9EqxnF
UHA8/GaoYjPKrRUMDN33AKROWS/sCGpGWhON5oLXHsKyVnKAK70FndUwWNgi
XArOYe0nEy+/QTVdGqam8k8hulponevgP+hY1MhwY3wllF4PstXe3Ym8n/mp
3lt4Cb4TW3+/zexGc8n9b/j4ENjv8jDUyH+H3tQ3o079BmiO21knktaHLgab
iR8nmmDi6jjlsOcAql+vsfbEswWaEdpHyA+hB0VNq7Lb/oH6LY92fZ0dRobU
ukLbsnawPDWf5pk/glRbRl407+yE56RBgxizj6jX0HamZKYLEioXP9iJjyEP
kcs9fbt7wONKiLjj9BhqG3Ssk7jzDs5AV/TpkXFka3JsfHKyF86pPuMf7PqE
9ubHO+Yr9QPbqM/FtHYCja2m9bpHDEDdyD897PpJ9Nmss4jaOAic1ixDA/wZ
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
       "]], 
      LineBox[{{0.9987522977908647, -6.900661354412972}, {0.9989431914422024, 
       0.09667541568310752}, {0.9989703368833786, 1.0917100454391657`}, {
       0.9991269007077702, 7.780169246817496}}], 
      LineBox[{{0.9999089335719238, 7.780169246817496}, {0.9999999795918367, 
       0.4255978367558829}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-6.900661354412972, 7.780169246817496}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+EiMbX5tjQALr3mbBts/8D/DQBrj
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
GTmT
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-42.807451252874365`, 217.57845213884727`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67463231282607*^9, 3.674713628962058*^9, 3.674713662946259*^9, 
   3.674713698331954*^9, {3.6747139698849792`*^9, 3.674713997644226*^9}, {
   3.674714040275152*^9, 3.674714069314946*^9}, {3.674714193042343*^9, 
   3.674714202261915*^9}, 3.6747144385332947`*^9, {3.674714550430603*^9, 
   3.674714557181621*^9}, 3.674737806427273*^9, {3.674737961278553*^9, 
   3.674737985691721*^9}, {3.6747380443226223`*^9, 3.67473805438195*^9}, 
   3.674738093582716*^9, {3.674738127265416*^9, 3.6747381715018463`*^9}, 
   3.67483695713031*^9, 3.674898950931019*^9, {3.674899150118249*^9, 
   3.674899161145083*^9}, 3.674904248442429*^9, 3.674904539801716*^9, 
   3.674905752849414*^9, {3.67490583170653*^9, 3.674905852007999*^9}, {
   3.67490630409307*^9, 3.674906339387286*^9}, 3.674906394344993*^9, 
   3.674906539584276*^9, {3.674906589772007*^9, 3.674906613931275*^9}, {
   3.674907514929556*^9, 3.6749075419758797`*^9}, 3.6749077268461657`*^9, 
   3.674907784461046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]", "=", "0.001"}], ";", 
  RowBox[{"\[Beta]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "5"], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox["\[Beta]", "4"], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "6"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "6"], " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "-", 
       
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
     "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "/.", 
      RowBox[{
      "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"zeros", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"potential", "[", 
      RowBox[{
       RowBox[{"line", "[", 
        RowBox[{"b", ",", "c"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunks", "=", 
   RowBox[{"sqrt", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{"b", "-", "c"}], ")"}], 
    RowBox[{"(*", 
     SqrtBox[
      RowBox[{"f", "[", "t", "]"}]], "*)"}], 
    RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Delta]", ",", "\[Beta]", ",", "b", ",", "c", ",", "f", ",", "zeros", 
    ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6745701741886644`*^9, 3.674570213594739*^9}, {
   3.674714113541958*^9, 3.674714139787716*^9}, {3.674714443464588*^9, 
   3.6747144475468884`*^9}, {3.674714529553709*^9, 3.674714538519815*^9}, {
   3.6747145873355427`*^9, 3.674714596741329*^9}, {3.674714826794375*^9, 
   3.674714866956509*^9}, {3.674737855869584*^9, 3.674737949640643*^9}, {
   3.6748374257768507`*^9, 3.674837436763728*^9}, 3.6748990958595657`*^9, {
   3.674899176267618*^9, 3.674899183083973*^9}, {3.674905788017476*^9, 
   3.674905788252966*^9}, {3.674906235611176*^9, 3.6749062865295467`*^9}, {
   3.674906359098114*^9, 3.674906385703314*^9}, {3.674907499634858*^9, 
   3.674907504954337*^9}, {3.674907548506731*^9, 3.6749075559644537`*^9}, {
   3.674907733510345*^9, 3.674907735062352*^9}, {3.674907766250244*^9, 
   3.6749077742143393`*^9}, {3.6749096299690332`*^9, 3.6749096343551292`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9085621457122293`"}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "+", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "-", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.00031171697817377047`", ",", 
   RowBox[{"-", "0.00031171697789562474`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6745702156891427`*^9, {3.6747141302437887`*^9, 3.6747141637071953`*^9}, {
   3.674714443935164*^9, 3.674714447862277*^9}, {3.6747145307817307`*^9, 
   3.6747145390445957`*^9}, {3.674714588113887*^9, 3.674714597193454*^9}, {
   3.674714828679791*^9, 3.674714867237482*^9}, 3.674737807053907*^9, {
   3.674737860017611*^9, 3.67473795008364*^9}, 3.674836957674769*^9, 
   3.674837332873701*^9, 3.6748374371109953`*^9, 3.674898951466859*^9, 
   3.674899096422235*^9, {3.6748991769191093`*^9, 3.674899183375578*^9}, 
   3.674904249065892*^9, 3.674904540411315*^9, 3.674905788925353*^9, {
   3.6749062404877768`*^9, 3.674906286832902*^9}, {3.674906363934142*^9, 
   3.674906386065336*^9}, {3.6749075002636127`*^9, 3.674907505303011*^9}, {
   3.674907549045142*^9, 3.674907556224615*^9}, 3.674907735560102*^9, {
   3.674907766874711*^9, 3.6749077747764177`*^9}, {3.674909630635334*^9, 
   3.674909658092268*^9}}],

Cell[BoxData[
 RowBox[{"4.8505160567203305`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.3603477089318103`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.6745702156891427`*^9, {3.6747141302437887`*^9, 3.6747141637071953`*^9}, {
   3.674714443935164*^9, 3.674714447862277*^9}, {3.6747145307817307`*^9, 
   3.6747145390445957`*^9}, {3.674714588113887*^9, 3.674714597193454*^9}, {
   3.674714828679791*^9, 3.674714867237482*^9}, 3.674737807053907*^9, {
   3.674737860017611*^9, 3.67473795008364*^9}, 3.674836957674769*^9, 
   3.674837332873701*^9, 3.6748374371109953`*^9, 3.674898951466859*^9, 
   3.674899096422235*^9, {3.6748991769191093`*^9, 3.674899183375578*^9}, 
   3.674904249065892*^9, 3.674904540411315*^9, 3.674905788925353*^9, {
   3.6749062404877768`*^9, 3.674906286832902*^9}, {3.674906363934142*^9, 
   3.674906386065336*^9}, {3.6749075002636127`*^9, 3.674907505303011*^9}, {
   3.674907549045142*^9, 3.674907556224615*^9}, 3.674907735560102*^9, {
   3.674907766874711*^9, 3.6749077747764177`*^9}, {3.674909630635334*^9, 
   3.674909658631756*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{2.040816326530612*^-8, 1.1604417554947883`}, {
       0.000010924318577395528`, 7.028367089203319}}], LineBox[CompressedData["
1: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
Ag==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{2.040816326530612*^-8, -1.1627788563061108`}, {
       8.571632704291597*^-6, -4.213792334885157}}], LineBox[CompressedData["
1:eJwVlWk81XkDR4USyXLJVqbEWLO3Un1/RaiUIkkkUVKZlokaTaVRpBA9pJgy
HkJxs5RKst57uZZ0s+U+1uzZ/n87Wafnxfmc9+fNUXG7YHtKUEBAwO8n/7eb
6t6O1sNFqHuuYiauvIp4d9BLc0OLINlaELqRs5KUFpUU8LaycCuo1/5JthJJ
+jTbGWrJwv4b4uzqF0okoN5IzNqWhSSeQMzqaCWyczD2UOlpFlp5m4WHfJVI
rsLV3sL/sMCzNrX13KpEMi5oyLz+zsLBqRChpxxF8kQ5yCMyko3Qj/1zFm0K
5IpmfrDtP2wIylmaPKpRIPbGYxlSKWw4DGoeGSlWIIzdrjMhBWyskDKs56co
kBDvzeEBfWw4U8/ND/kokFsV3z9cIRzw69SjhsQVyBnf3csdBziQumYYq24h
T1JWSh9zmeCghNubMWoiTwby+Ex3gWIIeDqeqNCXJ+cFPa3Pyxbj3sIrlxhF
eeIdHBh8e2sxgmP+1nw7KEf8nrFF00KK8bRyC6l6LEceFW1bIqRbgvhn+fJm
oytIkajRAvM3Lrolbtx04MgSzUMG7+//wUXoneuXEnJkSXis3gXP21wsjC63
nMqQJa7GOq2q0VyIb032zH0mS+ad1QpiOFyoeHcYvroqS0wy5PyCVpZC3qki
QF1XlmQdnpl3LytFtcH6PK1YGZKUwJlX+rUczU4qjaZRDHIx4FAb9Mvh1R+Y
MfSAQUxPd7JPbimHjw1fPvUug3zRFr6Xtq8cw/uP+hv4MsiPTDOZnVfKcWSi
VOaGM4NYF7I0znDLkXb7Xrq8GoOMNhUeeH+mAoYaG/s030sTIpcXb5f2Cdcr
qXVB/VJEl9uUXaLNg4mNn/c6eUlSS+yol9QXPDG3OC3wQJx4iZ2rrjOoRtyq
stKGO2Kkgu+QJ/GgBsO1pf07opcSO4sjbZ2dtfg8VnYzcmQJ2RgX7BCn9hU7
NUzD9SMXk2/zEbWefvVYcU09LR/CpGs3L0GOzccmf0XaWEWIZES3+lapNEBu
qpp7XESQJAYJ3dO61gg1kx1m+5ctIuPuR/s8Pjbhk/bn7eNGAmSZeaBtpnwL
CgcGgxlZ87gu1SXe5tyK+vkEoxzTOYjn6wjU7/uGwhyfHwbtM9h2xWaOPf0N
EVzZ4c3+03j6PCRB9Wkbmk1DJcKsf8DFfn2l6N52rDZV9qyUmMLbulMR+RPt
2MPZMhjTPYEtnzIEu6M6MOMX6vWoZRxrdnmMR5h3opzvlNRQMYYN6zc8zOru
hJWLrHtl7ShaR0LLEgK64JbcOKnZN4IB44MBikbd8LB+PsIcGYZ6v27foppu
hH29ZG0pPQyOmk/1xb964GRjuZCsMoSw2jp3W7Xv2BSXlWdznwJtV/hQkPMd
Vq5v1MqaB/DafoXZlku92FT1Iz5Moh8JlbeftTP6YGVr5Tjq3ItJrvOfDFYf
otPM4iT9e/DtYcG41Pl+cEpOM+2TujBRZaroLzGAx228E8LNHbgYubbQN3cA
XQfPdpR+bYN85VqpTpdB3HZPsjFOboVdHXN21fwgnPXu84qONuJmstc0T4BC
zsASnqRlI174rpvyF6IgUqFoZ2fciFll5uj3pRRmJrLu5ixrRJJHal+WDIUV
2iY9S3IbMD35km+tRcHgpeeNW0oNiFdKzrp+iEKxsqem9mc+Pg14vNZ3oNA2
pe4/ks3HZL56RrsjBe21DRHMBD6s3ZNSrY5T+Pre3nz8Dz4mUhPjZc9S6Ax6
eK12LR97tj0PZ/pR6MgkwomX6zFy/L9eTSkUsvcE0iZLv2L88eINJ15RqMkJ
jbg0Uocp3pm5rnQKOoftSFRTHRZg9IDOovBY40Pdi4w6iK9hpwsWULhrOBY7
4FCHX791jmjWUFhsPWWRHV+LI66avj4zFLKYNMtNowZOT0J2TM9R4LGGpL9K
1MDly5ConwAN9pOIPN2JapwiH2KCFtMQWy53KYhTjd/X7Mn9W5JG+2WRqJbj
1Qj5dm6hSJVGYcuXgmfhVShwTQ+QsKbRb3r4/momDzk8r70t+2kEKE30KJzj
4d12bem0gzS8rE+9jNLigbkq8ek+BxpXWK7NjMTPiOHHvAlxoxFmzPwl/VEl
fA4Eton50nA1b1Qbd6zAxQKz5IY/afSopG84K1kBL71Fv6XcpPEmnX9emVMO
N/HrU7vv0GCsGpdU0ynHgdJLkvfCaDAlpKY6qFLokGPbRJJoFA2pGIruKoF6
upJQ/Qsa4L9W2tVXjLW/8EuTUmnIyEyGyDwohsKs7SGLTBqtTnfKVlZxsCTb
6lxALo2cG2Sz886f39BYYmhfQGN69uSxd/9jYe4Re0KNRcNJ07u+6jwLY5e3
+3O4NESMqujkh0Vo018fLVTzs9/JtxEyngVoih12qamjIWo6e8PrdD74y9PV
Evg0dGauJhu75OFzv1bGzhYawY69eop6H1F+tMeH0UbDQ0tU7INwDorLnpu2
d9DYpDNamlyZjdzk1dy/emmU7NcLdNR9h2y55pCDAzRMMm2l2XlZeBMQY6tC
06jWXnxfzPgN0sYcFIaHaRiwPFgigZlIcV/RUjhGI1bzw63rDulIrK5OCJ+k
4SPTFn5MNRVxO8LPuE7TSPys/CZUIwlPM/bpG8zRUNX4PfKu3T94vHrZ+MIC
DcVnbNWeXj38Cw7F/eI=
       "]], 
      LineBox[{{0.0012221546689624985`, -4.213792334885157}, {
       0.001226810407675648, -3.316507849123661}, {
       0.0012430452337336773`, -0.047503490682081956`}, {
       0.0012781860642366771`, 7.028367089203319}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-4.213792334885157, 7.028367089203319}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
zg==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Ecs49GtSCv4HrBtqfA==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-110.59017156306648`, 351.598129893809}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6745702156891427`*^9, {3.6747141302437887`*^9, 3.6747141637071953`*^9}, {
   3.674714443935164*^9, 3.674714447862277*^9}, {3.6747145307817307`*^9, 
   3.6747145390445957`*^9}, {3.674714588113887*^9, 3.674714597193454*^9}, {
   3.674714828679791*^9, 3.674714867237482*^9}, 3.674737807053907*^9, {
   3.674737860017611*^9, 3.67473795008364*^9}, 3.674836957674769*^9, 
   3.674837332873701*^9, 3.6748374371109953`*^9, 3.674898951466859*^9, 
   3.674899096422235*^9, {3.6748991769191093`*^9, 3.674899183375578*^9}, 
   3.674904249065892*^9, 3.674904540411315*^9, 3.674905788925353*^9, {
   3.6749062404877768`*^9, 3.674906286832902*^9}, {3.674906363934142*^9, 
   3.674906386065336*^9}, {3.6749075002636127`*^9, 3.674907505303011*^9}, {
   3.674907549045142*^9, 3.674907556224615*^9}, 3.674907735560102*^9, {
   3.674907766874711*^9, 3.6749077747764177`*^9}, {3.674909630635334*^9, 
   3.6749096587829647`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Constructing", " ", "ab", " ", "and", " ", "bc", " ", "functions"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]begining", "=", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"\[Delta]end", "=", "2"}], ";", 
    RowBox[{"\[Delta]nstep", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]begining", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]]}], ";", 
    RowBox[{"\[Beta]end", "=", "1"}], ";", 
    RowBox[{"\[Beta]nstep", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"abList", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"bcList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"potential", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Delta]", ",", "\[Beta]"}], "}"}], ",", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["x", "3"], "-", 
             RowBox[{"x", " ", 
              SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["x", "7"]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["x", "5"], " ", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SuperscriptBox["\[Beta]", "4"], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["x", "3"], " ", 
           SuperscriptBox["\[Beta]", "4"]}], "+", 
          RowBox[{"4", " ", "x", " ", 
           SuperscriptBox["\[Beta]", "6"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["x", "6"], " ", 
           SuperscriptBox["\[Delta]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["x", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
          "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ProgressIndicator", "[", 
    RowBox[{"Dynamic", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Beta]", "-", "\[Beta]begining"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Beta]", "=", "\[Beta]begining"}], ",", 
      RowBox[{"\[Beta]", "<", "\[Beta]end"}], ",", 
      RowBox[{"\[Beta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}], "/", 
        "\[Beta]nstep"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"\[Delta]", "=", "\[Delta]begining"}], ",", 
         RowBox[{"\[Delta]", "<", "\[Delta]end"}], ",", 
         RowBox[{"\[Delta]", "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Delta]end", "-", "\[Delta]begining"}], ")"}], "/", 
           "\[Delta]nstep"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"zeros", "=", 
           RowBox[{
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"potential", "[", 
                RowBox[{"z", ",", "\[Delta]", ",", "\[Beta]"}], "]"}], 
               "\[Equal]", "0"}], ",", "z"}], "]"}], "//", "Quiet"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{"z", "/.", 
            RowBox[{
            "zeros", "\[LeftDoubleBracket]", "3", 
             "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"z", "/.", 
            RowBox[{
            "zeros", "\[LeftDoubleBracket]", "5", 
             "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"z", "/.", 
            RowBox[{
            "zeros", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"f", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{"potential", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"line", "[", 
                 RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], ",", 
               "\[Delta]", ",", "\[Beta]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chunks", "=", 
           RowBox[{"sqrt", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "10"}]], ",", 
               RowBox[{"1", "-", 
                SuperscriptBox["10", 
                 RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sqrtAB", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ab", "=", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"a", "-", "b"}], ")"}], 
              RowBox[{"sqrtAB", "[", "t", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"abList", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Delta]", ",", "\[Beta]"}], "}"}], ",", "ab"}], 
             "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"f", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{"potential", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"line", "[", 
                 RowBox[{"b", ",", "c"}], "]"}], "[", "t", "]"}], ",", 
               "\[Delta]", ",", "\[Beta]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chunks", "=", 
           RowBox[{"sqrt", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "10"}]], ",", 
               RowBox[{"1", "-", 
                SuperscriptBox["10", 
                 RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sqrtBC", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bc", "=", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"b", "-", "c"}], ")"}], 
              RowBox[{"sqrtBC", "[", "t", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"bcList", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Delta]", ",", "\[Beta]"}], "}"}], ",", "bc"}], 
             "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"abFunc", "=", 
     RowBox[{"Interpolation", "[", "abList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcFunc", "=", 
     RowBox[{"Interpolation", "[", "bcList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "c", ",", "ab", ",",
       "bc", ",", "sqrtAB", ",", "sqrtBC", ",", "f", ",", "chunks", ",", 
      "potential", ",", "zeros", ",", "abList", ",", "bcList"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.674909333282143*^9, 3.674909376831856*^9}, {
  3.674909548776291*^9, 3.674909621349751*^9}, {3.674909664823058*^9, 
  3.6749099199781313`*^9}, {3.6749099573825407`*^9, 3.6749101030583973`*^9}, {
  3.674910138032683*^9, 3.67491015002912*^9}, {3.674916117200366*^9, 
  3.6749161346941347`*^9}, {3.6749162966043253`*^9, 3.674916298390215*^9}, {
  3.6749200132698717`*^9, 3.674920015441043*^9}, {3.6749206256841707`*^9, 
  3.674920626897633*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Beta] - \
$CellContext`\[Beta]begining)/($CellContext`\[Beta]end - \
$CellContext`\[Beta]begining)]]], "Output",
 CellChangeTimes->{3.674910070025586*^9, 3.674910105575551*^9, 
  3.674910152695689*^9, 3.6749161703510447`*^9, 3.674916333263637*^9, 
  3.674920017294588*^9, 3.674920627822669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dissipation", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"begining", "=", 
   RowBox[{"-", "2"}]}], ";", 
  RowBox[{"end", "=", "2"}], ";", 
  RowBox[{"nstep", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ProgressIndicator", "[", 
  RowBox[{"Dynamic", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]", "-", "begining"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"end", "-", "begining"}], ")"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]", "=", "0.12"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"\[Delta]", "=", "begining"}], ",", 
     RowBox[{"\[Delta]", "<", "end"}], ",", 
     RowBox[{"\[Delta]", "+=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"end", "-", "begining"}], ")"}], "/", "nstep"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"abFunc", "[", 
                RowBox[{"\[Delta]", ",", "\[Beta]"}], "]"}], "+", 
               RowBox[{"bcFunc", "[", 
                RowBox[{"\[Delta]", ",", "\[Beta]"}], "]"}]}], ")"}]}]], " ", 
           
           SubscriptBox["s", "1"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"bcFunc", "[", 
              RowBox[{"\[Delta]", ",", "\[Beta]"}], "]"}]}]], " ", 
           SubscriptBox["s", "2"]}], "+", 
          SubscriptBox["s", "3"]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "1"], "\[Rule]", 
            RowBox[{
             RowBox[{"-", "1.47"}], "\[ImaginaryI]"}]}], ",", 
           RowBox[{
            SubscriptBox["s", "2"], "\[Rule]", "1.57"}], ",", 
           RowBox[{
            SubscriptBox["s", "3"], "\[Rule]", 
            RowBox[{"-", "\[ImaginaryI]"}]}]}], "}"}]}], "//", "Quiet"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Dissipation", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Dissipation", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", 
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "R", "]"}], "2"]}]}], "}"}]}], "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"R", ",", "\[Delta]", ",", "\[Beta]"}], 
   RowBox[{"(*", 
    RowBox[{
    ",", "a", ",", "b", ",", "c", ",", "ab", ",", "bc", ",", "sqrtAB", ",", 
     "sqrtBC", ",", "f", ",", "chunks", ",", "potential", ",", "zeros"}], 
    "*)"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"Dissipation", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}], ",", 
    
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.6745561626405725`*^9, 3.6745561991722374`*^9}, {
   3.6745562674373584`*^9, 3.6745564088154106`*^9}, {3.6745564487790813`*^9, 
   3.674556467611315*^9}, {3.674556510391263*^9, 3.6745565203314805`*^9}, 
   3.6745570102995505`*^9, {3.674557105167727*^9, 3.6745571167741475`*^9}, {
   3.674557661561326*^9, 3.6745576619835267`*^9}, 3.6745577275936427`*^9, {
   3.674557763198906*^9, 3.6745577635577064`*^9}, {3.674557801260977*^9, 
   3.674557905257967*^9}, 3.6745590486900024`*^9, {3.6745696966769505`*^9, 
   3.674569779164107*^9}, {3.6745702257525616`*^9, 3.6745702285625668`*^9}, {
   3.6745702623230305`*^9, 3.674570301605507*^9}, {3.6745703555362115`*^9, 
   3.6745703562080126`*^9}, {3.6745704014286985`*^9, 
   3.6745704036499033`*^9}, {3.674570437161771*^9, 3.6745704374445715`*^9}, {
   3.6745704910498734`*^9, 3.674570497384886*^9}, {3.6747142357787933`*^9, 
   3.674714310898448*^9}, {3.67471434599094*^9, 3.674714352446042*^9}, {
   3.674714607401494*^9, 3.674714607475264*^9}, {3.674714691463914*^9, 
   3.6747147068168983`*^9}, 3.674714799252129*^9, {3.674714876847096*^9, 
   3.6747148785221024`*^9}, {3.674714941922017*^9, 3.6747149426963053`*^9}, {
   3.674714994866788*^9, 3.67471499680058*^9}, {3.6747150542025948`*^9, 
   3.674715084791065*^9}, {3.674715204679673*^9, 3.674715204948304*^9}, {
   3.6747152622925262`*^9, 3.674715266329084*^9}, {3.674837258586597*^9, 
   3.6748372586686373`*^9}, {3.674837298001481*^9, 3.674837298517458*^9}, {
   3.674837351384487*^9, 3.674837352419024*^9}, {3.6748373934513397`*^9, 
   3.674837394158901*^9}, {3.674898981846828*^9, 3.6748990384467583`*^9}, {
   3.6749057946901627`*^9, 3.674905796163245*^9}, {3.67490586937757*^9, 
   3.6749058741408854`*^9}, {3.6749059252626753`*^9, 3.674906103967629*^9}, {
   3.67490662817689*^9, 3.67490670195772*^9}, {3.674906736397098*^9, 
   3.6749067384886*^9}, {3.674907286337512*^9, 3.674907286739621*^9}, {
   3.674907422963889*^9, 3.674907426988942*^9}, {3.6749074638140087`*^9, 
   3.6749074656798677`*^9}, {3.67490756699205*^9, 3.674907647668647*^9}, {
   3.674907810522503*^9, 3.674907833293454*^9}, {3.674910185508569*^9, 
   3.674910236422192*^9}, {3.6749102685285892`*^9, 3.674910269000538*^9}, {
   3.674910321800215*^9, 3.674910334826836*^9}, {3.6749105650508966`*^9, 
   3.674910661150069*^9}, {3.674910702937961*^9, 3.674910765116049*^9}, {
   3.67491206265594*^9, 3.6749120955848503`*^9}, {3.6749128471689577`*^9, 
   3.6749129505494843`*^9}, {3.674913004880579*^9, 3.674913004923685*^9}, {
   3.674913209697761*^9, 3.674913277749592*^9}, {3.674913340012858*^9, 
   3.67491335048573*^9}, {3.67491340699837*^9, 3.674913414637816*^9}, {
   3.67491344766996*^9, 3.6749134675352583`*^9}, {3.674913511730267*^9, 
   3.674913787839028*^9}, {3.674913818105341*^9, 3.674913830804823*^9}, {
   3.674913862444305*^9, 3.674913900288035*^9}, {3.6749139423344812`*^9, 
   3.6749139657889013`*^9}, {3.674914220583996*^9, 3.674914245916812*^9}, {
   3.674914285150762*^9, 3.674914328306706*^9}, {3.6749143908478622`*^9, 
   3.6749144680253963`*^9}, {3.674915402129744*^9, 3.674915440466902*^9}, {
   3.674919952598672*^9, 3.674919996866559*^9}, {3.674920601540307*^9, 
   3.674920618740548*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Delta] - $CellContext`begining)/($CellContext`end - \
$CellContext`begining)]]], "Output",
 CellChangeTimes->{{3.6745563785213556`*^9, 3.6745564120134163`*^9}, 
   3.6745565211894817`*^9, 3.6745570111751523`*^9, 3.674557117647749*^9, 
   3.674557664792532*^9, 3.6745577306824484`*^9, 3.6745577641193075`*^9, {
   3.6745578019161777`*^9, 3.6745578486728654`*^9}, {3.674557880465523*^9, 
   3.6745579057415676`*^9}, 3.6745702306061697`*^9, 3.674570264978035*^9, 
   3.6745703022451086`*^9, 3.6745703567404137`*^9, 3.674570404180304*^9, 
   3.674570439138375*^9, 3.674570498274087*^9, {3.674714301320078*^9, 
   3.674714311431857*^9}, 3.674714353838546*^9, 3.6747146114247437`*^9, 
   3.674714712518735*^9, 3.6747148788536654`*^9, 3.674714943129938*^9, 
   3.674714998212201*^9, 3.674715055893313*^9, 3.674715089319626*^9, 
   3.674715206383542*^9, 3.67471526679611*^9, 3.674737807844298*^9, 
   3.674836958596162*^9, 3.6748372594052887`*^9, 3.674837299434018*^9, 
   3.674837353242426*^9, 3.674837394726984*^9, 3.6748989523262777`*^9, 
   3.674898982515472*^9, {3.674899014301527*^9, 3.674899038901173*^9}, 
   3.674904249727572*^9, 3.6749045410829563`*^9, 3.674905798237646*^9, 
   3.67490587753885*^9, 3.674905937138936*^9, {3.674905978533696*^9, 
   3.674906104627055*^9}, 3.674906400410857*^9, 3.674906706565954*^9, 
   3.6749067392838306`*^9, 3.674907287880481*^9, 3.674907427683852*^9, 
   3.6749074665078773`*^9, {3.674907567521474*^9, 3.67490759004572*^9}, {
   3.674907626435767*^9, 3.6749076490102453`*^9}, {3.6749078112557697`*^9, 
   3.6749078337813663`*^9}, 3.674910271444098*^9, {3.6749103244990997`*^9, 
   3.674910335296452*^9}, {3.674910748594226*^9, 3.67491076543722*^9}, {
   3.6749120633378468`*^9, 3.6749120960228148`*^9}, {3.674912855175288*^9, 
   3.674912950905654*^9}, 3.6749130054563093`*^9, {3.6749132139633827`*^9, 
   3.6749132785405493`*^9}, {3.6749133405592117`*^9, 3.674913351522428*^9}, {
   3.6749134078363047`*^9, 3.674913415175516*^9}, {3.674913449464951*^9, 
   3.6749134678858423`*^9}, {3.674913513234724*^9, 3.674913625116756*^9}, {
   3.67491365517689*^9, 3.6749137880892067`*^9}, {3.6749138187811747`*^9, 
   3.6749138310675497`*^9}, {3.674913863211537*^9, 3.6749139005059357`*^9}, {
   3.674913942825705*^9, 3.674913966002083*^9}, {3.674914221150524*^9, 
   3.6749142461942883`*^9}, {3.674914286133153*^9, 3.674914328685272*^9}, {
   3.674914403330385*^9, 3.6749144320487843`*^9}, {3.6749144622148447`*^9, 
   3.674914468452868*^9}, {3.674915417636306*^9, 3.674915440763929*^9}, {
   3.6749199388260117`*^9, 3.67491999720573*^9}, {3.674920592726295*^9, 
   3.6749206189899683`*^9}, 3.674921239293201*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Delta]\"", TraditionalForm], 
    FormBox["\"dissipation\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Large,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->{{-2., 1.9866666666666666`}, {-0.2152231902952657, 
   0.9774306365930262}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6745563785213556`*^9, 3.6745564120134163`*^9}, 
   3.6745565211894817`*^9, 3.6745570111751523`*^9, 3.674557117647749*^9, 
   3.674557664792532*^9, 3.6745577306824484`*^9, 3.6745577641193075`*^9, {
   3.6745578019161777`*^9, 3.6745578486728654`*^9}, {3.674557880465523*^9, 
   3.6745579057415676`*^9}, 3.6745702306061697`*^9, 3.674570264978035*^9, 
   3.6745703022451086`*^9, 3.6745703567404137`*^9, 3.674570404180304*^9, 
   3.674570439138375*^9, 3.674570498274087*^9, {3.674714301320078*^9, 
   3.674714311431857*^9}, 3.674714353838546*^9, 3.6747146114247437`*^9, 
   3.674714712518735*^9, 3.6747148788536654`*^9, 3.674714943129938*^9, 
   3.674714998212201*^9, 3.674715055893313*^9, 3.674715089319626*^9, 
   3.674715206383542*^9, 3.67471526679611*^9, 3.674737807844298*^9, 
   3.674836958596162*^9, 3.6748372594052887`*^9, 3.674837299434018*^9, 
   3.674837353242426*^9, 3.674837394726984*^9, 3.6748989523262777`*^9, 
   3.674898982515472*^9, {3.674899014301527*^9, 3.674899038901173*^9}, 
   3.674904249727572*^9, 3.6749045410829563`*^9, 3.674905798237646*^9, 
   3.67490587753885*^9, 3.674905937138936*^9, {3.674905978533696*^9, 
   3.674906104627055*^9}, 3.674906400410857*^9, 3.674906706565954*^9, 
   3.6749067392838306`*^9, 3.674907287880481*^9, 3.674907427683852*^9, 
   3.6749074665078773`*^9, {3.674907567521474*^9, 3.67490759004572*^9}, {
   3.674907626435767*^9, 3.6749076490102453`*^9}, {3.6749078112557697`*^9, 
   3.6749078337813663`*^9}, 3.674910271444098*^9, {3.6749103244990997`*^9, 
   3.674910335296452*^9}, {3.674910748594226*^9, 3.67491076543722*^9}, {
   3.6749120633378468`*^9, 3.6749120960228148`*^9}, {3.674912855175288*^9, 
   3.674912950905654*^9}, 3.6749130054563093`*^9, {3.6749132139633827`*^9, 
   3.6749132785405493`*^9}, {3.6749133405592117`*^9, 3.674913351522428*^9}, {
   3.6749134078363047`*^9, 3.674913415175516*^9}, {3.674913449464951*^9, 
   3.6749134678858423`*^9}, {3.674913513234724*^9, 3.674913625116756*^9}, {
   3.67491365517689*^9, 3.6749137880892067`*^9}, {3.6749138187811747`*^9, 
   3.6749138310675497`*^9}, {3.674913863211537*^9, 3.6749139005059357`*^9}, {
   3.674913942825705*^9, 3.674913966002083*^9}, {3.674914221150524*^9, 
   3.6749142461942883`*^9}, {3.674914286133153*^9, 3.674914328685272*^9}, {
   3.674914403330385*^9, 3.6749144320487843`*^9}, {3.6749144622148447`*^9, 
   3.674914468452868*^9}, {3.674915417636306*^9, 3.674915440763929*^9}, {
   3.6749199388260117`*^9, 3.67491999720573*^9}, {3.674920592726295*^9, 
   3.6749206189899683`*^9}, 3.674921239330163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]\[Delta]StokesMinimum", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", 
        RowBox[{"-", "0.015"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.02", ",", 
        RowBox[{"-", "0.027"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.03", ",", 
        RowBox[{"-", "0.032"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.04", ",", 
        RowBox[{"-", "0.043"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", 
        RowBox[{"-", "0.048"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.06", ",", 
        RowBox[{"-", "0.057"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.07", ",", 
        RowBox[{"-", "0.066"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.08", ",", 
        RowBox[{"-", "0.07"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.09", ",", 
        RowBox[{"-", "0.08"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", 
        RowBox[{"-", "0.092"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.11", ",", 
        RowBox[{"-", "0.097"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.12", ",", 
        RowBox[{"-", "0.106"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.13", ",", 
        RowBox[{"-", "0.115"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"experiment", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[Beta]\[Delta]StokesMinimum", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "\[Delta]"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fittingFunction", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{"a", "*", "\[Beta]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"FindFit", "[", 
    RowBox[{"\[Beta]\[Delta]StokesMinimum", ",", 
     RowBox[{"fittingFunction", "[", "\[Beta]", "]"}], ",", "a", ",", 
     "\[Beta]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"fittingFunction", "[", "\[Beta]", "]"}], "/.", "fit"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "0", ",", "0.13"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"fittingFunction", "[", "\[Beta]", "]"}], "/.", "fit"}], 
         ",", "TraditionalForm"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"experiment", ",", "theory"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveData", "[", 
  RowBox[{
  "\"\<results/eta/zeroDissipationFromAnisortopism[Stokes].csv\>\"", ",", 
   "\[Beta]\[Delta]StokesMinimum", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveData", "[", 
  RowBox[{
  "\"\<results/eta/zeroDissipationFromAnisortopism[Stokes].png\>\"", ",", 
   "result", ",", "\"\<PNG\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "experiment", ",", "theory", ",", "fittingFunction", ",", "fit", ",", 
    "result"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.674913189028655*^9, 3.674913203865263*^9}, {
  3.674914384185975*^9, 3.674914384252247*^9}, {3.6749144771936626`*^9, 
  3.674914478464404*^9}, {3.674914514444508*^9, 3.6749146737348833`*^9}, {
  3.674914722010804*^9, 3.674914833712413*^9}, {3.6749148875267687`*^9, 
  3.674914992683123*^9}, {3.67491502695462*^9, 3.674915031677932*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[{{0., 0.}, {0.01, -0.015}, {0.02, -0.027}, {0.03, -0.032}, {
          0.04, -0.043}, {0.05, -0.048}, {0.06, -0.057}, {0.07, -0.066}, {
          0.08, -0.07}, {0.09, -0.08}, {0.1, -0.092}, {0.11, -0.097}, {
          0.12, -0.106}, {0.13, -0.115}}]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVkX840wkcxyO3es6PkZW6mNGKPOVMpJN8+sFFVOpSJJl1KuSS8uPyyK8c
yZZE0YiGUBo25sf23edbytOzDpkurU4lY13RdShcS+f+eD+vf17P65+3Fef4
7jDdOXPmbJ/d/4wyC2hgKla4h0TxMhcImHL7K1foTRo9kBWHdXqP6uIZpx3Z
mRoalHE3nmOMLsAV6SvJaA0TTCj2Gv1RazxtZxYUpnGCbXeZl3VGHZE5w60O
0XjAYUZZlHZkM04f8e4+oNkDsd3BqumR3ThoXsUJ0vwMn2+4XZga4aBt5+qh
iAexsGow1FDWchIXf2+sjbNPgfx+mv+YbxLWrWWrbA5mwA6Rm11mQDrarzTv
Zc9kw/wX59bHR2dhpLXjQXfLXGBgF5fD4qJ4uUFo7mQeuHj0TZmtuogZWT2G
V+8WACVHvDhBfAnffT3gWBBcCGeF+ip/6mW8f4we9tiBDxaeLAHzWiGueV9J
/eZxCRySKPVP6PCx4IiB6JNTGSiz2YOSgBJUKNmDBsXXYX+vtH30dSlu8yp8
tPSdALwTva17GNfxbMvbe757K2C8Y6mmPFyAaU8deaq2SmB5qDkna8vxoe5B
05B5VdAhfCtMVVVgp01FKSW6Go727kuez7iB3+3r1NwgayB0SJfR5VeFVqkm
LuGrb0F4A83TgF+NI/t9gjIv1YJenbnV1pc1qAtH118buA2fijidpOEtVFqU
Wff51MGkO3VG5F+Lcen9HL2d9bCjZ3pmMPM2DncP0R9O1MP6gmcSk0YhiosS
XwiqG8DZ1Hq8eboOK9/oauP8RLAFe5O78utxotHM4gBFDGM93l5JPzTg8sAq
279bxBD5xfWY3fMGTEyzzTsT0gi5lj5Tn06IZv9x+UqnNYH0Gq8jeaEYKf4u
CqmsCfJo/2hthGK8EyBKpnAk4FTexeva0ogqVds6zsJm+JP3ksMabsRFrxp3
tsmaweEEtVSc1IT1h9wilsW0QHZ9jMWYlQSPH2t6nbW0FXKHJ+b6SSVovL3G
s/hOK7CdxzxrdzWj0S27WjK2DVwGrBX3JpqRxSuJHrCQQmt6jESb04IN70vW
mT6Wwub0j+oPrFak2Sx5N/abDAr4478M9rZisTrjc9dqAvJvGod+jGjDVMsU
quw1AVcXhRa0G0nx/MvI1MrzcvD59RGroUqK8fHKfjcWQsdE28qSDTIkczo2
DKkRvDqfHvJ8JcMrpk++ePxIQlzxQophAoHDwx88pVtJKNpTRIpOE7i2TZ/H
8iYBDSwSA5IIfMLeRKf7kvBtEvNDeRqBNGGt++QuEkqC1zxz5RKY65WeXBNM
Qjt9l/CogMCsJAcdo1gSqNdz9t77ncCnfj7eZ+NIcA40NonoJtCGefjiv/Ek
BJrkP6QqCexQ8K00p0kQpPI3BvURqLd43mYyZdbn3LQbGyAwRdSfFpNDQtCy
BzOWkwQ+yphSvOGSkPrcp/X+NIGWgaamIRdIqLjUfTJSS6D8q1e5Tx4J7+f2
vZHoyFHr29jOLJz11UPK7QZy9GV06/OLSKgqDueOG8mRP/7XTyZ8EhR7RrcW
mcjR9aql+ksJCbT7EzL1IjlmR7muOlVKgmtSQnz2EjmqNvqfeltGQrCzluVg
LkdbWrSMLZjtjyaP/EGXY4ImW6+vfLZfObcq0UqO/wEzGIAa
         "]]}}}}, {
    ImageSize -> Large, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.13}, {-0.115, 0}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\[Beta]", TraditionalForm], 
       FormBox["\[Delta]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 0.13}, {-0.115, 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(TraditionalForm\\`\\(\\(\\(-0.9053724053724059`\\)\\)\\\\ \
\[Beta]\\)\\)\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.674914660293231*^9, 3.6749146743194513`*^9}, 
   3.674914754814124*^9, 3.674914788722208*^9, 3.674914835757845*^9, {
   3.674915009741683*^9, 3.674915035045127*^9}, 3.674915097276292*^9}],

Cell[BoxData["\<\"/Users/akutlin/Documents/private/VSHOPF/Egor/diplom/wolfram/\
others/experiments/exersices/results/eta/zeroDissipationFromAnisortopism[\
Stokes].csv\"\>"], "Output",
 CellChangeTimes->{{3.674914660293231*^9, 3.6749146743194513`*^9}, 
   3.674914754814124*^9, 3.674914788722208*^9, 3.674914835757845*^9, {
   3.674915009741683*^9, 3.674915035045127*^9}, 3.674915097574024*^9}],

Cell[BoxData["\<\"/Users/akutlin/Documents/private/VSHOPF/Egor/diplom/wolfram/\
others/experiments/exersices/results/eta/zeroDissipationFromAnisortopism[\
Stokes].png\"\>"], "Output",
 CellChangeTimes->{{3.674914660293231*^9, 3.6749146743194513`*^9}, 
   3.674914754814124*^9, 3.674914788722208*^9, 3.674914835757845*^9, {
   3.674915009741683*^9, 3.674915035045127*^9}, 3.67491509781316*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{
   "*", "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", " ", "Stokes", " ", "analysis", " ", "for", 
    " ", "electrical", " ", "field"}], ";", " ", 
   RowBox[{"not", " ", "working"}], ";", " ", 
   RowBox[{"just", " ", "a", " ", "memory"}], ";", " ", 
   RowBox[{
    RowBox[{"RIP", "!"}], "\[IndentingNewLine]", "*", "\[IndentingNewLine]", 
    "*", "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*"}]}], "\[IndentingNewLine]", " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.674915234881624*^9, 3.674915256102869*^9}, {
  3.674915295604662*^9, 3.674915365278543*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[Beta]", "=", "0.7"}], ";", 
   RowBox[{"\[Delta]", "=", "0.5"}], ";", "\[IndentingNewLine]", 
   RowBox[{"potential", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["x", "2"]], "-", 
         RowBox[{"4", " ", "x"}], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "x"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Delta]", "2"]}], "-", 
         FractionBox["3", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           RowBox[{"x", " ", 
            SuperscriptBox["\[Delta]", "2"]}]}]]}], ")"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StokesGraph", "[", 
     RowBox[{"potential", ",", "0.5"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Clear", "[", 
     RowBox[{"\[Beta]", ",", "\[Delta]", ",", "potential"}], "]"}]}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[Beta]", "=", "0.1"}], ";", 
   RowBox[{"\[Delta]", "=", "1.1"}], ";", "\[IndentingNewLine]", 
   RowBox[{"potential", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["x", "2"]], "-", 
         RowBox[{"4", " ", "x"}], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "x"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Delta]", "2"]}], "-", 
         FractionBox["3", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           RowBox[{"x", " ", 
            SuperscriptBox["\[Delta]", "2"]}]}]]}], ")"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"zeros", "=", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"zeros", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"z", "/.", 
         RowBox[{
         "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "a"}], "=", 
     RowBox[{
     "zeros", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{"c", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"f", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", 
      RowBox[{"potential", "[", 
       RowBox[{
        RowBox[{"line", "[", 
         RowBox[{"a", ",", "c"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"chunks", "=", 
    RowBox[{"sqrt", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]], ",", 
        RowBox[{"1", "-", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "c"}], ")"}], 
       RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", 
           SqrtBox[
            RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
          RowBox[{"Im", "[", 
           SqrtBox[
            RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
          RowBox[{"Im", "[", 
           RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Delta]", ",", "\[Beta]", ",", "a", ",", "c", ",", "f", ",", "zeros", 
      ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}]}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Dissipation", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"begining", "=", 
    RowBox[{"-", "1"}]}], ";", 
   RowBox[{"end", "=", "1"}], ";", 
   RowBox[{"nstep", "=", "100"}], ";", 
   RowBox[{"\[Beta]", "=", "0.1"}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ProgressIndicator", "[", 
     RowBox[{"Dynamic", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "-", "begining"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"end", "-", "begining"}], ")"}]}], "]"}], "]"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Delta]", "=", "begining"}], ",", 
      RowBox[{"\[Delta]", "\[LessEqual]", "end"}], ",", 
      RowBox[{"\[Delta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"end", "-", "begining"}], ")"}], "/", "nstep"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"potential", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox["x", "2"]], "-", 
             RowBox[{"4", " ", "x"}], "+", 
             FractionBox[
              RowBox[{"4", " ", 
               SuperscriptBox["\[Beta]", "2"]}], "x"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Delta]", "2"]}], "-", 
             FractionBox["3", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 SuperscriptBox["\[Delta]", "2"]}], ")"}], "2"]], "+", 
             FractionBox[
              RowBox[{"2", "-", 
               RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               RowBox[{"x", " ", 
                SuperscriptBox["\[Delta]", "2"]}]}]]}], ")"}]}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"zeros", "=", 
        RowBox[{
         RowBox[{"NSolve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", 
           "z"}], "]"}], "//", "Quiet"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"zeros", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"z", "/.", 
           RowBox[{
           "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "zeros", "]"}], ">", "3"}], ",", 
          RowBox[{
          "zeros", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{
          "zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"-", 
           SuperscriptBox["\[Delta]", "2"]}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{
        "zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", 
          RowBox[{"potential", "[", 
           RowBox[{
            RowBox[{"line", "[", 
             RowBox[{"a", ",", "c"}], "]"}], "[", "t", "]"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chunks", "=", 
        RowBox[{"sqrt", "[", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", 
            RowBox[{"1", "-", 
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sqrtf", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ac", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "\[Equal]", "c"}], ",", "0", ",", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", "c"}], ")"}], 
             RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"bc", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"b", "-", "c"}], ")"}], 
             SqrtBox[
              RowBox[{
               RowBox[{"potential", "[", "s", "]"}], "/.", 
               RowBox[{"s", "->", 
                RowBox[{
                 RowBox[{"line", "[", 
                  RowBox[{"b", ",", "c"}], "]"}], "[", "t", "]"}]}]}]]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"R", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", "ac", ")"}]}]], " ", 
           SubscriptBox["s", "1"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "bc"}]], " ", 
           SubscriptBox["s", "2"]}], "+", 
          SubscriptBox["s", "3"]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "1"], "\[Rule]", "\[ImaginaryI]"}], ",", 
           RowBox[{
            SubscriptBox["s", "2"], "\[Rule]", "0"}], ",", 
           RowBox[{
            SubscriptBox["s", "3"], "\[Rule]", "\[ImaginaryI]"}]}], "}"}]}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"Dissipation", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Dissipation", ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "R", "]"}], "2"]}]}], "}"}]}], "]"}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "R", ",", "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "c", ",", 
     "ac", ",", "bc", ",", "zeros", ",", "f", ",", "chunks", ",", "sqrtf", 
     ",", "potential"}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Dissipation", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}]}], 
    "]"}]}], "*)"}]], "Input"]
},
WindowSize->{Full, Full},
WindowMargins->{{97, Automatic}, {Automatic, 75}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3625, 115, 153, "Input"],
Cell[4186, 137, 10626, 268, 404, "Input"],
Cell[14815, 407, 3721, 95, 338, "Input"],
Cell[CellGroupData[{
Cell[18561, 506, 763, 22, 102, "Input"],
Cell[19327, 530, 643, 13, 24, "Message"],
Cell[19973, 545, 115450, 1855, 594, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135460, 2405, 3688, 114, 323, "Input"],
Cell[139151, 2521, 587, 12, 28, "Output"],
Cell[139741, 2535, 370, 6, 28, "Output"],
Cell[140114, 2543, 27493, 476, 129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167644, 3024, 4458, 119, 422, "Input"],
Cell[172105, 3145, 247, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172389, 3155, 3103, 82, 217, "Input"],
Cell[175495, 3239, 438, 8, 33, "Output"],
Cell[175936, 3249, 4725, 90, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180698, 3344, 3674, 81, 114, "Input"],
Cell[184375, 3427, 129617, 2084, 586, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314029, 5516, 6847, 178, 346, "Input"],
Cell[320879, 5696, 1697, 30, 35, "Output"],
Cell[322579, 5728, 1126, 18, 28, "Output"],
Cell[323708, 5748, 21079, 370, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344824, 6123, 5843, 164, 346, "Input"],
Cell[350670, 6289, 1639, 29, 35, "Output"],
Cell[352312, 6320, 1071, 16, 28, "Output"],
Cell[353386, 6338, 26748, 462, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380171, 6805, 9393, 238, 634, "Input"],
Cell[389567, 7045, 357, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389961, 7057, 6541, 139, 216, "Input"],
Cell[396505, 7198, 2707, 38, 33, "Output"],
Cell[399215, 7238, 8154, 141, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407406, 7384, 4078, 112, 216, "Input"],
Cell[411487, 7498, 4452, 88, 376, "Output"],
Cell[415942, 7588, 393, 5, 28, "Output"],
Cell[416338, 7595, 392, 5, 28, "Output"]
}, Open  ]],
Cell[416745, 7603, 1037, 20, 369, "Input"],
Cell[417785, 7625, 1346, 38, 108, "Input"],
Cell[419134, 7665, 4227, 122, 327, "Input"],
Cell[423364, 7789, 7403, 197, 506, "Input"]
}
]
*)

(* End of internal cache information *)
