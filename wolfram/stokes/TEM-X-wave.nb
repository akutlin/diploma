(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    377403,       7312]
NotebookOptionsPosition[    373791,       7196]
NotebookOutlinePosition[    374134,       7211]
CellTagsIndexPosition[    374091,       7208]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "x"}], "+", 
      FractionBox[
       SuperscriptBox["\[Beta]", "2"], "x"]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StokesGraph", "[", 
  RowBox[{"potential", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Beta]", ",", "potential"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.681766209857255*^9, 3.6817662510798903`*^9}, {
  3.681766476956787*^9, 3.681766519163201*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzsunk01f+3P65IoyFRmigRyZAhGm0qDRoMqYQkCqEk0SzRiNCkSWXKUDKk
ELHN8zzPnGM4x+Ec81CKr9P3d/ut9eyP9/qsu+69v/u71z/WY+2zn8Pej8dj
v16clWZ2eqemc3BwDPNwcLB/+0tbKSu2jeH//d2HBIb/BwMR/zcMlF8T4wpT
n181Wqx8rJeFebWrhNlxZYm+cjZ24bfgYK+3jpUSc0i4B0PMvdqnPg8iAZef
HZ7C9WdnzWfHebkh54BGFw412k6y48eH/F21p/CJcO2V7HjmnWcLd1t3YvZL
nMNev9N0zgE2ljYzYmPs0XR5oP64Db31+lex49usvnpqTOG7ET9ns+NepxQc
Nn5rxRuTWgvY8eyue4qbpvAjn1tM9vmro6WaTuY34JBLJRc7nuiTK2QxhY1u
bepjx1OccOaRZdXImrXrJ/t8ysdHPhtMYckfpkPs+NuPOw/vOVuKC+bp0Nnx
u9RlcVpTOHKuwO8494Y7Fk4uWahxVp59H9Cfea3p8hTOnnFEln2+RwG3WZ92
f8ZZ745PsPN1+8R0vk5hzfjj39n5z89rmClcc4M9hSG/65fyuZ2j66obOJ3k
+X2+LrF7b1Ikv0LHM3E59vqWgpoDX6awS2lrJzu+7bSWy3hvDvQ3b5Nkxz/V
rv8wOoWPKS1aw97/sPKRtLkhZeASUjqdHX9V9Ghk9hROM2lby46XY+uyxfo1
MDQ8r5e9f8ddp5vCU7jskWM/e321pDXiktObICi7nL0emH4ynsnGM7n72fXA
lQbmH5YYUGDcSex33EK35hgbN8Urs9jxzhdhM8Tk24F2adXv+52sjF67cgob
GPuM/r7fJ/61a7hpUDL9gBA7f+G9OA+pKbxtrI7Bjs/23rdoXVMX1O7nWM6O
OzC+X5efwpxPC5axz++sr3hU9XMPTJz/tpgdr0qtN1eZwiPyViLsuJNvzgo1
j154MOfq7/MZi65L2TqFfUUrjkdeHMUdrxWk2PyPPMfZxMah79Km+tIHsiML
hqXnjeCbxQn87PgSmvK5tVN4rWGoNFsfvMs09EP9h9B5eO46dlz5rHs2G29c
SR1j5++YjK1ftX4Quc7vm8mOc10P3CA+hYdHpX6x4yIH4zz88/rRx7VqeApj
8THqGzZePu7H3g+sZV+1LzPpwzJ9XVl2vt6MYL3lU/iGUcBSdtxyc7m1YgcT
0y1DhNjx8HvF5kpT+ET0k172+peG50Wv5e1G7y1v2tnrL35vMkdmCtfvOLKc
nV/gsuGquCodi8YkV7Lz0xtmyUpMYWkbVS52/NjqptTlph1o0cjsYecX1AX3
svHllpn97PUv1/6IWnifij8SFJew81/82ii+aAqfqr6xjJ1P03q3X/RkC9pw
+Q2w8122rZ5kY22R+b/ryxW35CV/XB36Jr8U+Z3vKr9HYArPDtspx84/ddCJ
Mn1WJXY4Gw2y818JrlzBNYU/RqSuYsd/8V+7S48txFxgsOuNzPVPsHsKM1ri
Jdhxn+qml0VH0vDNxnp2vzBE/faD0il8zzJSjB1XlAlrzGSFokfYJ2F2/JH1
UoGSKbz1kVLn7/7wvNGJufkOGKaev+tff5EvJWgKvzHtYvMFTO1/brn7LRW2
fds3zt7/BePk3DtTOHtmuCQ7fuRZJ3ewcCG0Z31WYOfPYVWuC5jC5je9fu8/
ytXNa5pYAbFlgb/XTxa40mgyhbXER9j1AgFtuddnrOqgvMWVzl4/LGCRo+0U
3q9gO4+dPyNvHe3qwhbou67Cw85PbU21Z2NmHPN3/9+YT1PTNKNCfnvO7/76
Gtvo7pjCLaWeNHY84uj5efs2dsC3aPrv+gg9z3fdO4UX/LjA5iPI2cXYHeSn
g9ue87/5eW5iyS29KWynPKODHd+Sufm6IY0BBc1y3Oz8+6vv5hydwhqZAb/v
f0nJYMeJFCZYtc2fw45Hq6vcNZ3CB6+tm/ZbP1X8mz5r9YFggyT7PKg1qNQV
O4UF3lB/37//vHOLalw/XH/2SJydf33G8SdsvGdW7W99SA4KKiWtHITYryWr
2fHe8z7cbHwig/m7P997z7SoPRgCq5T5v/U5sHjWNTa295f7rZ/9Gq2q6WPD
MM9PVfJ3/fT6f6RNYc/40D72/m4yZmWaJ0ehnzakxI5vfh5yi421Vt1g6xm0
RpbfyCsZA5W65ZzsuMzjCT42vuHI+1sfOqsS6x99r1JTH96UJCDXpJYfcD9i
QIWOy7bGXhC0LgVfIY+FNFc6mlQkGGksLIcR5+uOLaV0DNYZff8jdYoXqxy4
z6/sR47fP32QvfLH/HfL+/GZtHTF695eOJawKbiU2YefZhmmRa3oBTXfe9Gj
vTTMucUXl3agCEIrwkwjImi4Kcr+wuPMPKBeNjDbs6sLHVRaoyTVq2FxAO2Y
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
bkn5cCc2O/R9uyPVild9w9TrUmhoZiltrxPXigZbWbqf7tExRGZ1Qsc2Cq44
8v7AsYNdGJLR9nBnMQWr2hpV6kUYaCFjPnHegIpObbfnrOlmYLtF8C9rChU5
D7/L25PQjaIOod5yp9vw6ubNF7bc6cHFurafk3vbsPXxrjnTDjGx/YGyy93g
P/VHsn9kf8n+k/wg+UPyi+QvyW+S/6Q+SP2Q+iL1R+qT1C+pb1L/pD+QfkT6
Oen35Dwg/Y30P9IfSf8k/ZX0X9KfSf8m/Z30f3I+kPODnE/k/CLnDzmfyPlF
zjdynv41b4l5/E/+Tvoj6S//0/X/r/ol6ReXNE+4977th7TUKOMNrDboC7Ib
jpXpB2PqFasD6u2w2Nr+ImdiH7iI3/t04mk7mMiZJx99Wg//5vf398nt5FRu
gPJHtuvo6b0wvnL66ZSbTaB1ODh9TycLuI5Jm5zTHQDxw28GN9xog4p9UTqD
nIMwNL+p6srCNpi10sDLs6oFui97ROfxsP7KJ9cn95f1r3BSkO+D6m/TpWZO
toOIk5JisVYvFKwceqR+pgNuON79tnsjC0wOGg/ytHaAs1qQZ/kaJvjobt5j
d6QTlpTdCbRZ1gOmyx4+OVnRCbqyihML5ndDaeyxKuZBGqw++O5twUwGNC8K
mDu3jgYvtrXeecTRBe67jVS/mdGhfum8MrdxGlzZxRP2qI8OIpO6rxLHOuHw
wg0fRV274GRPTIfKWAcs+9Kw03wRA963rY0e+94OBavGLhyLZsBQO/6Y/NUG
FmYPVHn3d8PWvjNZ+7jaoOfcKy9HZje4z1Dhb5lHBSNtsSuPH/ZArbhwQ9wi
Cnz+tfKH5UYm1AeLdUnGD4L7x2XxPz9R4by7ww8pmyHIfXrRSPAQ9a/6kvnk
+uT+5PnI83+5sOd4+sAQHFhrzW3OQ4Urc5c1B18ZBnO3dKu1uRRIP9DtVDp9
BGa8cXE9c5sC7mrxazQ9RkDpavDBNZoUqK6/MTJdcBT6lsg1msykQPAqzabZ
r0dh4/Xly3gLW//8PWl6dLb4oqDWv+pJ1pvsB9kvsp9kv0k+kHwh+UTyjeQj
qR9SX6T+/kkv/9Tv/+x+yCQt4FdbMoCTsqaKM6ddw6/KKxg+Swcw0t4qXvDG
YxgRP9H5UWQAn/dfjJs+EQLu9UNR11YMoDzvkaSn7u+xhT/jyAyZAXQSbsix
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
pJ+QfkP6EelXpJ+Rfkf6IemXpJ+S/k36O+n/5Hwg5wc5X8j5Q84ncn6R8+2f
5sm/6k//qp/8r97/a/VO+nXEZvP6t2XVuP+uueV4fDhSP3e90OWtQrFAsdpT
O0OxSiRk2Yo9Fcjz4OCu3UrvcN2mgKvTJt9j9tN+yjtVTzw20+Trdxt/fP7W
k5L8/Tbes2WKWtbcxfLG0bDY2Cv468d2+bLGUrSN2G/6yysQ3cW9rlOaCvHN
y0eVSgf8cTjhXthWjlxMbO85+/qZH9YEBvSPrMzAHL+XG8yyniPn3vyHBXe/
oenaRy/y2p6g5yzcklX0CZ1NVCVo0T4Y4iVam3y2FiVnPj/B3PoRtz48KEfh
qMdg7s5rkd3RGDct2Vd6pBHzqOr654fjUM1i0GT7jRaUeztPZYkP4kmru3OS
y1rxrPDSpp+0zL/OT96PvP+ejKFgLXsK3tmVON5tk4vDxquFtsyiYlRNQozO
zELMdds3+9lzKroFrz7UE1uCEneeyZ8Qb8OizNkiqV/KkMuiXetORBtW3H96
rvhpBZpL8IsMKLTjB0vP412Xqv66L1mP1e6teRzF7eizSEp9cWINDlwSX7DG
qgNrpzk2a/2qw9z+hu/WHJ14Y7XDJudtjRg+xO2c7duJ926L6cfeb0bzfb3p
DWtpuKKB8l7kdCvmZjR3a6XS8Fdowef4BxSsNawaW6BPR8Pw4pzgT1R8OL+i
S4VGR5UWRltHTRvuOsf/fOhyF3IXDCwx/NWOWpNZjQ/mMXALK8G5VawTX6YM
xk9/y8Da3Vv5Lu+m4abIF2sOKnRjff2NwlVn6X/1m+QDyReSTyQ/Sf6S/Cb5
Eq15f69PQDcmzLy5bbl2F1LHe76uEOjBGmGNrh55Bh51zK8ed+3BwLTxBc/4
u/HdYUmuxUM9eO9Lj9CK/m7U2jE72O4UE/tCtbd5lvVgI9VReLSaifv3mfa0
xDCxs/p8RshuFs46bGgp+oiFPZkzZjolsvDepcvc2ud70XUf85rT9N4/evz3
8vc/mo//3fn2/7V+V0i0Xzt2shHFN12ZfZCvEMSXLWHsftmEW3tH5khFFkO7
hsX9mrRmzKTlG6rGloJfrL3uhcR6FPG9aOuglgf2Ihn7dwzX4uXUjw3Osdlw
1KK34h1HDDbzv1tZwvkemrvslgnsbUXreVmcS0fKocGSarJBkoKi/YPrHh6o
gofyvWL6YxQ0HK/kloivgbCqK5OGaVR87NMRfkK6Hu58vWQw5NaGDe9fJ5S/
a4RHmxof5mi0o/oOxzJOyRbw65YaqxBj/nm/+MVpGzv9Yw/2XLt/xV60F3pc
Z17eNdqO014ay/cXtQL7azTO7zuwOXPV1fDZVMh6XBFzxqgTk8T4C9/vbAMN
4wucgnNo+Ch2pdjwrXZospPgFY+n4ZiFg/zKzA7Q3yEhoGNOR2eZFSE5nDQI
rXPge87bhau4pO7Qt9OhWn4+98+ELqQx3UvcbnWBwsIE82gdBiZq7v+2JYgB
mRpH1MXoDPz4xTpJOL0bHn9ivdK90Y2pW9sKF1F64IWVs5Pawh5kNcX1beRg
/eP9lq0pC2WK12DEzL7E7fszwdHBIHmPWhV63dO6cnVdOnzS3bTjwM4KHHqS
cz9EPxV4hA0G+jTK0PgX9ZO7WTLsPJchd/50MZ7VDM2/7JAIa3fxchvvyMf5
3wb02tPj/zoPed4F/F/fM75k45yMfom8wC+g3Hw9NXZVBm7ZWfs1+HEsWPda
02tXIcbyTG+KvRkDNpr2HY9nJ2B/+tMki0+Rf9WDrBdZT7LeZD/IfpH9JPtN
8oHkC8k3ko8kX0k+k3wn9UDqi9Qfqc9/0t9/NB/+vf0m/WHpxL6XeQtosMlI
u1E1NgoVjELlSqfRIaV1r/1t5UgcOTOTIdVHh0r/8vLungjcbTMxX66wA3De
ytya6zH4Vfabxet77XB+3WbW9rzYP3+/duVYlKSW5Y9iT3o/Tn5gAP92+4FX
We9xg4Ysj4FVDyQpSq7hXxCO+sVxz2dIsOCrgPjXbfGh+OSJK6WB0gtDt5+1
yz4JwXszYi5alvSBUon+7pjX79Bef8Gpro/9AAryNyNygnHnB/uvcuOjoF0W
O74vxx+HctZax2qOQqZuuJ3SkgCUv5yCG3xGIEx00zHv8wF/xcl88vyHT/Ub
uSgNQORk5hXGwWBUHn5xQvjrAMwds5df3hmEvFw8TjFqg2C4ROXtDucgbH2o
9WJv5iA8t5ifb7osCCPf6BV07hmCvEbOaPvUQLwoLTHPrWQI6Nd4dC9aB+KG
9elGKw4Nw/edch/tlwTicMqaxJT6YfixySLTtDQAe+z26DQYtoGgw7tSuBaH
ft41HYEbqKBxObfVd0MimrrlSPavpoDZKln7JZMpmK9xZWGGdCv0Sckx9lul
41GPZoa7czPsKPpyXPBjFn5csI9fCxvBZ0+Cg6V4HtK/json8zZAcKALl1Zi
IZou9WtsMq+DUJbMpeOypbj/mfYlyaQaMFA+Gvt2sgwZnlKnhOZXw9jRa3sD
SyswSGFQ/erJSjhRJau0923VX/Um70Pel6wHWS+ynmS9yX6Q/SL5QvKJ5BvJ
R5KvJJ9JfZD6IfX1T/r579bvEweEA8ZnDUNyorCLbF8XWKeOrjrwZAiSjZ71
GGgw4NJ86u2ZK4YgU+5QeP4TBujomGxnLej58/26ECnxcoOuHtiyY47Hfa9e
SHhTpb9hmAmris8MOXNN9WXn0Zs8RcMwtrLa855jF+TIJkjNezQCT/UtLody
dP2VT64/c4OxfsKRUcjvahtEH/qf7xdx7gvJ1lKhw1Nnz/iLFwfBMvrTliT+
bthfcWkGV+kAiLAMF5Y/7AZ/vlC7iDUD0EPbr8In3APeSotGzt3qh8LXHn7n
g3pgCeQ9123tg3Q+wT0/lZgAislHDmztg+KttM0ReUyYXNx5qlilF5iSMxxd
T7L+uh8ZJ/PJ9cn9yfOR5yfvR/aD7BfZz3+q/z/V102Kojf9MB1s5N//DNZu
hcr7vTPXu9Dg6dpDGYJJraD3NkHZNaITrsvlMV9KU6DRc7+R/s6EP/1zsjU0
spqeBrGHNIy+NbIgBIVzytWz4Y7T5qb+90x4Y/3R2PNCF5yc3HQ3I7Tlr3wm
q/BntWMp/OqIlb+u3w25m9xCnngVgF/Iict3r/f8tR65X3rFUe7Rgg4om7v5
284gCmzSprwLYLbDnMDviz1EqfB1vvYC1/ntIN3PNdPqLRXUlgYdeK7aBnLf
jd2axNqg0KbpSPtxKixOnObdHd4GJzgn5CzcKcBQGlzzSLkdxilclcvjWyHA
QkG/LL0dNvO1P1hY2AJb9b7xhOt3wMEER953ss1QufuhimZXB0zzDpeSf9QI
V/w+Rpbd6IQdj280fv5eD/L75zsdEKbBiqzRNSon62DI8Jtn0icaPBIXmB9b
VgO5WZEDwtp08Ispfrh2WzV8fEAPtWDSYbOtbMTbL5Xw5tPpiOAHXXBOX86U
T6YCApQVOSrkGTCjdOlZA18GUML7dpWkNINgpliCf2I3rD5aQ0tuawLOVeek
Q6eeQ32/rqrNW9j0V33J+pPrf3g9k5nIOQqGysoWM1ZXwXB8/Zf9d0fhaeFk
3prGyj98Kjhi+b3jZSUs3wjJKo1MqFeaG21m0Qj3hg2LhmpYsJ9vcZdISgPs
MMgwpFT2Qv/e/W4TyxsgbN03RefTU/rpCnWedqceDGYlj4h19UEuXapBcqQO
1imd/G5yuh9+7i59bn+2DhRiYjYpMvrh+Jw38c2sWjB0fZfoZzMAgzKPVO0u
1sLit8EvzzIHYNaRd49Oc9dC7eSCnxftBoElV7pN8GUNPAsebE7oH4TgzwK7
7RRr4MiD7dsVLgyBDN028EpJ9RQPONdQRobgTl6zrop9NTRKK/vkXh6GGAOr
w4GLqsG/pfIS7ecwRDydHZ2SXgWnajuoW11G4LJLuonH+aq/+kX2k+w3yQeS
LySfSL6RfCT5SvKZ5DupB1IvpJ5IvZH+QPoH6S+kH/yr/P2fzq9/VY/i9QtW
ZKwdBq8nVb94jzEwRla5eE3AMNxcJzDWxsfAR0WNs2gLR8BqISWgJLPrz/O1
vYgll8VrOtKdzERvWo+Cnb6I+/IhOlaofOu+kDoCD84qFIUaduE5i4JZi6yH
oO/bz8t0BgPr6DzXPMIH4Vxu5RGBqffgvWc6DK0YA6CsHiXMs6Tnr3xyfXL/
ot6gqKcyA1C3N7vzY1LPX+cl70Pe95/O9+pMs538tX5QEBYYSNZlos2PFd/W
F/XB7O+Gcz2YTNzqa/MkTLQPzFn+ikLeLBR3vdbPR2OB2libpbFKL5YPK5SH
PmTCy4XiH0zbelH/7HKO80bMP99fIO9P3uc/en/BC64PDt3pgsNm22xr5Sj4
tF84YqkZA+J1Xu3RLW7FfaeaWC+hGzIX8PWW2Lf+qb/aTo/WD5erMUTz7YnC
s6PAWL1z+eriaoyfma1UnjwCkR0XVr/aVIPf7pjxBZ+mwzy7ZgYzhfLX58n1
7hgwlY7q0GD+oNzTvkNU5D2pQ3m4qRNWp7u/Gx6g4kWXa447pDqAp7vy2F7f
Npx5VVSQz6AHaii7ZwdNtmBjfW2z/nkmVGUomL5f3YLFt2Zr23qxwLWolvrF
oBnrLsWcPBTRC60TWx9mPW1CFyM63yyLPmAdOWFT19SI/m+V1ItH+uB97Tb7
/nWNWHJv0/br9/ph0U1qII93A85Z9EtYaOkAKOmqc8iN1eNF7+BMrcgBGLeO
rJthXY8bVA33VGgMwuk+5xu7qXV4gFckNLJqEJwpMf3DpnWYKNjX1Hh6CDap
7VrH21mLl7VKmccmhsCPGzY/tK9Fr6iUaoXHwxCy6YXADc5aHNue9NxAagSO
1B+Kq3lV81d9yTiZT65P7k+eT/2aco2QYjHUZwb/oN1hYn7I0S/b9rfDW9Pq
uRaL2nEDNX6G7IU28JTYtf/sq3bMVnxmwfmaCjUbJcVOinXg2eejNVk5FLj+
2sl9V0QHqiyoO3phqBVu6qy/I7yxE5cEbe7hXdUKFD1zoZrcTlT2URNZG9oM
r4I5NrgZ0fAc16zb/POaIFaTh7Wsn4ZzF93Zsf1CA5wJrh6ee5+OMltsnmxo
qQN++fc8CWJdWO4Qf6FvXy287Li7fmVKF/5Ktu6wTq4G3ly7M7uMGBi55HZn
6LoqsK4+8UX6BwOp97kvhYZUwEd+E56Cl934em7vi9Oi5VDvdNJRamsPNr1V
28d6WQqsWY7MbZQexKT94WuUCsA7bJZYhywLN0zk8gpvzIU5n/3NN1WzMHp7
yEzK9iw4QLNF2o1enB1h8dCYP+OPvkg+kHwh+UTyjeQjyVeSzyTfST2QeiH1
Teqf9AdSz/+qXv+n84nU17+XX6JpdQX294fxStaX8Img9+C5hPfqgwfDKLx9
KK191mfgy5Vu5Xw8jF9KznJVpCTCM6GCi9/vDaOVXNBPn2MX4I3QU+z3HEYt
tQwFHY93/+bH2Jp3Vsatvxt+Rij/ChwYRb9D2Z+7X3UDGf9EVys+fGwU0ywT
D299R4Nz15YaBz4YxRN+J2/qjtGhOTndxgJH8X13sr+HFuOv9Zzy9i4Q9BvG
hNkZOCifDnXH3SiPQ4fRbm97vvpENqz3KNNy+zKM02RfBenkF4D7XhVtatYw
qtQMBs/XKoUG/xhWdO0w1tPaTRo/loOEx/Y1vcxhPJ3rf+MefxWcntMz4Tdj
BGmXJGcuPF8DoSIf7BJFR1D3+6XhW+V1sHSj09rWzSMov3TNrHCFRuAo2EYN
OTqC3NEFPw95N8PhSv4nvJdHsNsouivLsRWWHWpVX/RyKn/xkKbE1PPtof0x
9NRvI6jMr7Agr4QKE9/cPOZSRvCRuqVuzHgbCAcfWTPKPYpn3/tyNK/ugODp
sulucqOYsx9XaOt2/lUfsn5kfcl8cn1yf/J8g+4v3bQfDmOx7ZkRiS2fcZ9O
QaX082EMuCw2LBuVjOGnJGPdAoaxzMxljql3Bs4piBQx/DiMllJca89q5uI5
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
HTIawXTHGbuKrr1+XA3WLslaIq9eYYxy/oOnVVWQ7MQ4vWgwASsWpJmNTJxT
B13qrQQMk2Gc56nW6axK8DbOnzGnCuHrx9h3io0VwGAKvxT1zYI4x4NfbJrL
4aHyV9XLYrmQd7byYGpxGeRJDdkyHhdAX8jtk6kxFBBffT771GAxTBUdGGiJ
qYRMy99WZ3XS0ZlhhruUKkDmlLypVEMOMnLz3ivdLwVduyFdm4elkD2/dgN+
K4FQw/xxftGySdfk58n1bIKf5swKKYOiX0qpOasKcVXEEvs7DaWg94G3xEu8
FAW1ak5X/SyGvGPFvXIBZTjiKl7awlcARQt7d/SNVCBZD1kvqQepF6kn2R+y
f2R//2n//qbvv6rH9nPeNOPzDdi6k/+1fl0y5CucehCS14jfp2h867j8DV6s
pbJkZzYjP4PP/J1GBgjrM3c/nF2POzZI6myfkQRVVC9ueGAtvprqYrzhczyw
9iSbp0dV4Ym5G/Snfv0AF8uGK4ekWnBnIvXTDd5s2Ld2U+CtiXww51GKYHG+
g+Frc06JZiuKHLxgzRrIn/j8YR6nolYcW1q/0X5uMYigfViDLhVp0S/sHi8r
hfxr4o/086noMxK2wyCBAswK0Te0l+UosnaHhL51NNA+zR78/LAUkwTfZwSd
jISfPrds1qrT8JtjmK7kwXKIsFylSEuhodnFSM7xvopJ1+TnyfXsn2wrWH6k
EFVnbVxzQz580v7I/ZP1kfWT+pB6k/0g+/VP+/E3vcj6/j+YdCN0
       "], {{{}, {}, {}, {}, {}}, {{}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{125, 126, 127, 154, 155, 180, 193, 194, 195, 196, 197, 198,
            199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
           212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
           225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
           238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
           251}], LineBox[{257, 286, 287, 297, 298, 306, 307, 308, 309, 310, 
           311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 
           324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 
           337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349}], 
          LineBox[{353, 354, 355, 372, 387, 400, 401, 402, 403, 411, 412, 413,
            414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 
           427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 
           440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 
           453}], LineBox[{479, 480, 481, 510, 511, 512, 533, 534, 535, 536, 
           537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 
           550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 
           563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 
           576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 
           589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599}], 
          LineBox[{603, 604, 605, 630, 631, 632, 633, 634, 635, 643, 644, 645,
            646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 
           659, 660, 661, 662, 663, 664, 665, 666, 667}], 
          LineBox[{673, 675, 676, 677, 678, 679, 712, 713, 743, 744, 745, 746,
            747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 
           760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 
           773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 
           786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 
           799, 800, 801}], 
          LineBox[{805, 806, 807, 822, 823, 824, 825, 826, 827, 843, 844, 845,
            846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 
           859, 860, 861, 862, 863, 864, 865}], 
          LineBox[{878, 903, 904, 916, 917, 919, 920, 921, 946, 947, 948, 949,
            950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 
           963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 
           976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 
           989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 
           1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009}], 
          LineBox[{1027, 1028, 1029, 1036, 1037, 1050, 1051, 1052, 1053, 1054,
            1055, 1056, 1057, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 
           1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 
           1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 
           1097}], LineBox[{1110, 1125, 1132, 1133, 1138, 1139, 1140, 1141, 
           1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 
           1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 
           1164, 1165, 1166, 1167, 1168, 1169}], 
          LineBox[{1175, 1182, 1183, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
            1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 
           1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 
           1236, 1237}], 
          LineBox[{1241, 1242, 1243, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
            1265, 1266, 1267, 1268, 1269, 1270, 1271}], 
          LineBox[{1275, 1276, 1277, 1303, 1304, 1305, 1325, 1326, 1327, 1328,
            1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 
           1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 
           1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 
           1362, 1363, 1364, 1365}], 
          LineBox[{1369, 1370, 1371, 1379, 1380, 1381, 1382, 1383, 1390, 1391,
            1392, 1393, 1394, 1395, 1396, 1397}], 
          LineBox[{1401, 1402, 1403, 1426, 1427, 1428, 1429, 1430, 1452, 1453,
            1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 
           1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 
           1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 
           1487, 1488, 1489}], 
          LineBox[{1495, 1496, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1548,
            1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 
           1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 
           1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 
           1582, 1583, 1584, 1585, 1586, 1587}], 
          LineBox[{1593, 1616, 1617, 1618, 1619, 1632, 1644, 1645, 1646, 1647,
            1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 
           1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 
           1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 
           1681, 1682, 1683, 1684, 1685, 1686, 1687}], 
          LineBox[{1702, 1703, 1704, 1711, 1712, 1727, 1728, 1729, 1730, 1731,
            1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 
           1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 
           1754, 1755}], 
          LineBox[{1798, 1803, 1804, 1805, 1806, 1835, 1836, 1837, 1838, 1839,
            1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 
           1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 
           1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 
           1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 
           1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 
           1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903}], 
          LineBox[{1909, 1936, 1937, 1949, 1960, 1961, 1962, 1963, 1964, 1965,
            1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 
           1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 
           1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 
           1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007}], 
          LineBox[{2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
            2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 
           2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 
           2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 
           2095}], LineBox[{2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 
           2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 
           2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 
           2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173}], 
          LineBox[{2179, 2202, 2203, 2210, 2211, 2228, 2229, 2230, 2231, 2232,
            2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 
           2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 
           2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 
           2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 
           2285, 2286, 2287}], 
          LineBox[{2291, 2292, 2293, 2301, 2302, 2303, 2304, 2305, 2320, 2321,
            2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 
           2333, 2334, 2335}], 
          LineBox[{2339, 2340, 2341, 2344, 2349, 2350, 2351, 2352, 2353}], 
          LineBox[{2357, 2358, 2359, 2365, 2382, 2383, 2384, 2385, 2386, 2387,
            2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 
           2399, 2400, 2401}], 
          LineBox[{2405, 2406, 2407, 2413, 2414, 2415, 2416, 2417}], 
          LineBox[{2421, 2422, 2423, 2440, 2441, 2462, 2474, 2475, 2476, 2477,
            2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 
           2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 
           2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 
           2511, 2512, 2513, 2514, 2515, 2516, 2517}], 
          LineBox[{2521, 2522, 2523, 2529, 2546, 2547, 2548, 2549, 2550, 2566,
            2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 
           2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 
           2589, 2590, 2591, 2592, 2593, 2594, 2595}], 
          LineBox[{2599, 2600, 2601, 2633, 2634, 2647, 2652, 2653, 2654, 2655,
            2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 
           2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 
           2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 
           2689, 2690, 2691, 2692, 2693, 2694, 2695}], 
          LineBox[{2699, 2700, 2701, 2706, 2707, 2723, 2724, 2725, 2740, 2741,
            2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 
           2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 
           2764, 2765, 2766, 2767}], 
          LineBox[{2773, 2800, 2801, 2802, 2803, 2806, 2807, 2832, 2833, 2834,
            2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 
           2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 
           2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 
           2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 
           2879, 2880, 2881}], 
          LineBox[{2887, 2888, 2889, 2892, 2893, 2902, 2915, 2916, 2917, 2918,
            2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 
           2930, 2931, 2932, 2933, 2934, 2935}], 
          LineBox[{2941, 2968, 2969, 2970, 2971, 2984, 3004, 3005, 3006, 3007,
            3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 
           3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 
           3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 
           3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 
           3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059}], 
          LineBox[{3065, 3067, 3080, 3081, 3082, 3104, 3105, 3106, 3115, 3116,
            3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 
           3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 
           3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 
           3150, 3151, 3152, 3153}], 
          LineBox[{3158, 3159, 3160, 3171, 3172, 3173, 3174, 3175, 3176, 3179,
            3180, 3181, 3182, 3183, 3184, 3185}], 
          LineBox[{3191, 3198, 3199, 3206, 3207, 3220, 3221, 3222, 3223, 3224,
            3225, 3226, 3227, 3228, 3229, 3230, 3234, 3235, 3236, 3237, 3238, 
           3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249}],
           LineBox[{3255, 3272, 3273, 3292, 3293, 3311, 3312, 3313, 3322, 
           3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 
           3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 
           3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 
           3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 
           3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377}],
           LineBox[{3383, 3384, 3385, 3394, 3395, 3408, 3409, 3410, 3417, 
           3418, 3419, 3420, 3421, 3422, 3423, 3424, 3425, 3426, 3427, 3428, 
           3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439}],
           LineBox[{3445, 3451, 3452, 3459, 3460, 3473, 3476, 3477, 3478, 
           3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 
           3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499}], 
          LineBox[{3516, 3517, 3518, 3523, 3524, 3525, 3526, 3527, 3528, 3529,
            3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539}], 
          LineBox[{3556, 3557, 3558, 3560, 3561, 3562, 3563, 3564, 3565, 3566,
            3567, 3568, 3569, 3570, 3571, 3572, 3573}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{0.4999999999999999, 0.}, {-0.5000000000000001, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], PointBox[{{0., 0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-1.555467800821738, 1.555467800821738}, {-1.055467800821738, 
     1.055467800821738}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzsvHk01m/X/60S0mTKHA2KRMlMtJHKlBRRGqg0UQhJRSkNIhKSIpkTGTIn
2eZ5nufhNE+neWiQ33n2PNf3Wevjj++61nXfz/1cz3X3j/Ve+3Mcxz72fr23
z4nV5vMWxy4up6GhqVtLQ0P9Gih8RVK8ex7/r6/jSNDwf2sgxP+hoWvh9889
lOe3zpVLnhkjY1HjVk5qXHLbeDVVOzJdoqHuJ0bO+HyccwTDL7j3UJ4HvqDb
r/UputmcgZkaX0cHBdrKgzjdem2RGjeaDnx4hKLPfTyymRrPffKaXc20D/Pf
IiN1/z5jRm2qFj5/iqpx5ICjm5JXN744NrGVGle58uW5MkU//fRrFTXufnGP
tVx6J95f1GClxvMHncXlKdrT49EoNf/6OKE2k+IWnHaspaXG0zwKN1yi6FOP
5Mep8QxbpDfgrUcyw6Ff1PwkjWYTT1C04A/jaWr8ffRBfXXzSmRdozNAjT8l
8SZrUHTMapY/cTrZJ5dsHfNQ2Xw39T6gR2/fdpui81caiFLz8wx6TI5XS0SG
MKPf1PVHx7fofKHoAylG36nrfa2Uz++xdwL10vA/9ctI7KEZvOsEtiZr/+Q3
uMU5IEPwC/S+FthF3f8y24HJJIp2rOzso8ZVrmo4/hwrgIl2FUFqPL5RKmqO
os9IcOygnq8vaZC1OrwKHMMrl1PjfmWes6soOuts905qvBo7ebn0GmB6Zs0Y
9fzep7YPOCm6yvPmBHX/fV93CAgub4OQ/GrqfmAcf5qequnpJqj1wM0nLkRx
n+iCn7Zb/sQvHW04Q9VtKZJkarzvTcTKLbt7oN9u65/7mdTG7dxM0SdOe8z9
uV88084ddP1QsVx7A3U9u3OyqxBFq8w3DVHjq15ocYi1DULjYZqN1Lj10HeH
3RS94lUJLzX/e3riJ2USR+C3VToXNV6X2XxBmqJnd1/ho8ZtfQo27XMdAzfG
u3/yO80vlqFI0T78NUYxt+ZQ9d0eISr/MZYr2qj6Q1gWpS/jIDrLOiO8ZhYD
uFKZqHHufknLnRS90/CDMNUf63iV9T4ETuO9mdVi1LikuUs+VcttJs1T16su
JjRvlZpCWistemqc1iFYVoCiZ+aEFqhxPt1k18CiCfR4WDdD0Vh+hhRA1Rt/
+lPPA1NRvx7es+NYpXdUlLr+2MrQYxsp+v6pIB5q/PLealPx3lHMvhy+gRr/
6Fx+QYKiz8V5j1H3t5tZE7dz3TC+UAjooe7PFXmWUYSim1UNNlLXlzjK3hWQ
GcCyecHN1PXZLQyi2yha2EyGlho/s70tc6NxL15qHR2hri9pCh2j6tsd9BPU
/W83/ohlf0bCH6ni3NT1bxbkBDgo+mL9fV7q+n6NsMP8Jh1oRus/SV3vqLJ9
kaqP8DH/qS9tMvdbpuQm9Pn2lu/P+oe71VkoelXEwV3U9Rd1bbuWM9Ri771T
U9T1fmybN9FSdPSnzK3U+AKT/dOBhFIshCFqvXFUyhuHKXqoI2UbNe5R3/a2
zCALA+Saqf3CcKXHbpUU7Xw5Zgs1Li4S0ZpL/oCuEfGc1LinKQ9LBUUrekr0
/enP2gCdzw/CYMj4+Z/6N99anxFC0QHGg1RewPjGL4Wn6Zmgkq71k3r+myGT
1U8oOp/+oyA1bvC6jy6UsxR68hL3UNczkmvFgij6wgP3P+fP0Q6vM06rgYSq
4D/7f2O503qWojUEZqn1ApYju95dv9IE1R0PB6j7RwRx3LxG0Yf3XFtDXb+y
SKz/LnsHjDtIr6Wuz+zMvEHVo8mjf/ofcGHZvgPnSVDcU/Cnvz6nzY6qUnRH
5fN+avzTSas1WnK9kB438Kc+G3yLH2pSNOsPGyqPsMvis4Uu0wA4qVv94dPy
N/ejYxRtIbmylxpXyN3rYNg/BCXtu+io659tf1pwkqKVc4P+3N9O4oTquYxR
uNLNzEiNxylJPzWmaF17sWV//FPHJJ+oMQ5sLYLUfFBjSmIwgaJZAkh/7j9h
da9DJnkCHF57ClDXO6w08qZqdYbGP/4QnGKT+Lp5ChK+VGynxsesPOio+lzO
6J/+fB+73rHPbRquZDD/8eckF4M9Vd8I3PXHP4eVO2Wy52dgjb+M4J/6HZv4
kUXRz1M+jFPPdxI5X3XAZA4m+qclqPG9vuGPqFpj632qn0FjduP9oop5kG7a
uIIaF/H6vZ6q799c98cfOlvTmj2/1+1TmpH/yrKrbV9x0LNPk9IDyKuYYMNm
WgnPhGyH+rgH8YNjDDp8qQCldtY7oTRDKKBUzr2YXA7rE0o2bK3qw/PRNNmc
LlVQmyZdusqmF+0Em+y4q6uB5s+/eVwIEmX7KJ4DT86ru0a6zOG2+v29YuZL
td5g1nebtcNolOrnnv2qDJTDOyuTeUbQNm/K4oRbKazaYLl4decoXrlcn5H5
rgQ+SFk+dlcgo0TA/rs/84tB4OWG3kTtMZyZmOftWlEMcEKjMllsHPOHEng0
jhRBW9HsqdNpFE6dbW5JfywE040eGzRVJ/BtibxYOHMh+DxeeGJePoFte1Tc
Mh4XwBqp7fLxJybxs1x+XejyAqjYybibvXsSN3TnrzrpnA9tVz9efHt9Clft
Ut3Rwp4P81sEGS9rTSPZqUpht3kexIUdkjbYOYPhGdtK66pzgX6ScciUcRZ3
tSs1lKvmwgL9jW3Bg7P4jLTlLHduzpJ6EeN50kmuIzw96KGV2xMkUgvr/AzP
FJSRMLqgNk3yUx34cazzYXzWhbkVV8qeaDbAidZkl+2HO7HIr52subIJfJSc
bWBPO7I40Fwdq2mGCUmNQzM1lPeOXN/HrZ9bl+RHzD+T77sQyb0Jr/T0m/l4
tYNBamxv1dEG5JTkV1yt1AmlG1m8G7jqkFNM4sJhuS4QN8vVoOupxu1ktgQx
CRK8LHjcqRJXiW1cO7lSRbsh7FiKxEaaMnRcqSmoKtwDaocETcrDCnFlwn1j
R6FeMPGaLfTWyUUDgdpDnEJ9YM1b1y27LBN1Tp+VUdjRD8EHFvQ2WKeg53jp
jSsiA8B03JFu/0A0quB6g7Q9g7CaTcLCnfstPgxnP3REbgh8Hz3wLDvgAOyr
xuQV9w9Ds7KZfIpMKHCntYy/OjICWTSJxyu140Eh09/S8uwoPLnw84P4tTTY
vGUyq9uCvKS/xP6LXGZ5t4knE16IMF7ZKj0GJH+Dyvs/s8FM23KX3cIYXJ0c
nEin/Uefx5fwROSNyCORVyLPRN6JfiD6hegnot+IfiT6nzgfiPPj7+bDfzfP
/+m8/rM8trWEsM1JD0AgrbLDSUr/+OZvFZqM94N+mezisptlcIzG1PpOdD88
ca87+ImpGC6fSsrvfNMHLiQld92XQWCoPEE2ftUHTUcbGUTV3kL2GoVRQc8+
GK3mor9j9hK0wm7c3OvRB0I+OttduR8A/yqLtTkv+oBFePjc/luWoMR3M/WS
UT+c0/7W4VaeB4lTDOuu8fYDs+4naY+HWRDtuM3GpacPdskdeH3pZBoI5xUP
ZaX0QddxJUXym8+QrWW8MZ6yny/N5ec2669AEf24VThF22V5RSYYn4Ufkjbr
Aina5TrXsn5VdVix8vihAIoO/9i756CFJBI18XnifuYMGxx+PRkARfKC0ML2
ajD8nOt1omkAvvmfn5jvqoHUG6Ota0UHwY5Zd6DXrw52mm1vsHw4CMeDGulf
Uj6/EPMl1uNtkuIrrVVDsNxzS3D6mmbYJKpp9sVzCJ7uN5Vpzm6F3Crtkyl8
wzCYFFswaNsBD0LUjA5GD4OXze2PN9m6wGkjf0Kz4gjkzPtKBF8jwVxaqstA
xQhE3pBSF83thta7G/osLozCoQ7tIXaeXthtLJVnOT8Kvsq97EY3+uCzJqam
upOBLHN1mLOgH7i3GB7dsH0MPM9pPjLgHQTz7pUvnmSMwdMM1y7uG0NQe6hL
lk5kHMq0hVdcyBte0m8iD0ReiDxVSAfxhp4fBy6PJInvSSNwqWAi0OrNOJw4
Fl57LnwU3n6vzrtROQ7PX/3q9fchg2mZqmsQ/QQknky9HPlkDHD4+uHQrRN/
8U3khcgTkTcij0T+if4g+udf5ePfvf//1f3bk6ldmnWMhKQHsqI/vzXidyHu
+HiebrSZWSYXW9KAGo92f/3e340qMslSVT31+I/3qUtc3sws5/LR8LXi4v6L
czgd3Rv2Mj0fZQ19318tmsWFLkuW1o0FGDUQxnfUogsPeAQf1P7ehM3VVRyZ
Lzpxyn9Rm1epBV06JGbUyT1oxqbt41xUh4PrWNbe/t6LTCEqXzlyavEiS/Hy
p6v6UazbK/ReVQ0uDp6qt+YbwNJa5WPfpqtRaXwNjaDMIDIf0lzPubMaY+5v
mX96bAh3rIrdXmNVhVq+/hk+lsPIwXPdl1xSiezyd3V1X45go/1jE1PpSjz5
/BjrdALl+7Vp1jWasxWon5xsGNtAxrZX5VY1JuXIlvphx+NfY8hiL95y+EEZ
5heyZMq/HMflG0fDLCifO8s/rjo+e2oCWzRH1banleC99M3q9wUn8XXdyZe0
ncWooLaw33RqEiPH+Sp38Bajtfe+UU2cwkc1QvpJF4swnqSUk244jedXZ/gX
dRWidM0NvoOz09gq36UpfKkQM39Krup/OYOquQc/ck8W4LrJUbcA0VkcXhXy
o+1RwZJ6E/tB7FdtQ4yzw8UOvOMxaaTv1oqvi9iU7nxuw0irtzyfSG1L9iee
r/R4x9WQzhY87vA2jlmrA73Dcg+uZWvGd/cWzxmd6URf4b7GFM1G3PW9O/Ik
RxceZHPnD3laj2difsTP1XThR2Y2lZ78WnSSEj/y1pOE+VUVlz0YavDHttt6
wce68Z1elscHrSrE+xXZ69l68Kxk1W3d7RVYpyL1llTfg8OHFI4ypJYgqlpy
MPj1Yn2fzSY17UJcfurgrevGfbiJ+W4/y2AuBjxO+cIi2I9l+drhV5yz0Ds3
p32O3L+kvsT6E/tD7B+xv8T+E/kg8kPki2x2evzNYjruJ53iSwkdQH2+M48P
zCfjxKF2ho+nBrE09P3q2h9xGDCjEVDGOoTevw/Rua4LR+3hoHaBsiE0SYmI
vWzrjb+Euoting6j0sQX5YYDVyAqZp2x2f4R9Ohe//Wo8Vs4bS8QZEgziob+
lia7CiNgjaeAm30GhfsKU1qZ7fHwbWydQJUDGd/an+q1bk8B81fdF0/sG0PP
lYcOqT7/9o95scQvRD8R/Ub0I9GvRD8T/U6cB8R5QZxPxPlFnG9/N4/+zh//
7vz/u/EWsy5c2TpmDHznvVbeONGBTueDVvVdHINSnuxJyzdtaNAjGbqPfwwW
p4qXyzdRvp9kMjSUvR4BrdM5l7cG+mKCbOlVPYrm65F3mhH3wTc9igPjPiOQ
zdrKJPvbC7MnYq/3sYyCvYLJyzLIx0Pr2VXmR0Zg3/N1JG/bbDyoW5u6t2wE
4nimnufqfsPgy8AhmzgCNRYKN3kSk/Bexc19BsEjYLLKmH47/yf8vdZn/Qrf
EfAUYv21L+AN2jZEp+xpIMNtgRpfa9pmbIJywxeeZKi03209KdqITht93AyO
koF2oeNl8vF6NLdcqePCSga2sJ5pvFuLwbK8wYJNo7D8pqL/usBq5LRtdtod
PArl14aeBmdXYo2Q0kyQ+SiMcjZYzOWXYa3O4dl7+0Zh9sODE5Iri/GKQG3+
a8p9T+Vtj7MueokqW8imfa9GoMf4pU2nizN+WL/AYUvRYVnnDdVW3sXX8Wu6
D1J0IcuWat1qXRw628i6n6JPSPX/fsYIQNTE54n7NdxvauyhHYeV35VPjSd0
4pxVNryRGIcPrt/qJ9O6cIz7mN6GC+PwNGp+4VwWCVesPzRi7jUOHXGJduIF
3UvyJd6H2M+2W5vCGs0mgTv9XFKZ/CiqWx9SUgqZhBmWX/tOHCCja8QrXaaW
SUjf7cjgcmQMBawMzhzLG4fDYVu71lP8JcVsI9E2Nw5Xgq7amPX0ovSIv/n6
nROwK+yJ+IHJPty+onrd4NkJCIy7w/NusR/p9VnZTL0mIDPnwG7rNYPY2GN8
z7NwAtza+68XcA6hb2za4fO/J2DlsnMNbwSGUT1508MmyUkQ3vnZbGj3CM6U
lfufo5n6i3cir0SeiXwR+SPySeSXyDeRfyI/RL6I/BH5JPJL5JvIP9EfRD8T
/U6cB/8qX//T/f9neSXyknGVfFRjdROkxTS/3SrSjrHtCrtFGhvAIJY3Sqai
Fe+uC2RhDqiHkDadDE+7FhSwsb/bLRaLgRK7Lv728cJf0TyqZ0Zj8fD630JM
hZYovfnMhkuzsSjgQru6KkoS19wIjXi1Oxrs1h907/TMx1+Mh8tOr/cC1rZR
daEL2Ri8udTaEGshatf9I973mzD81M1W18pqIBuSq2xeN+CzdD+tsKpKsDwf
cEAysw59ne85H35cBrsPvIis/l6DDtNvZGp1iuDwe8ekKajGyyUXDDzX58HQ
GnGeve6VqLe2tf9pVias5z2UcrSoDF1tVlZfLUsFzQORo7efFON8/d2dJ6Md
UezNju74qW9I08VkVqYZiLPX+AQWzZJxecvtNoXNEei70mbd8ZhYfH7cttz5
WTT2nK1OfHoyCD1dDxWmUu4rdaQxZjFcFYiaWA9ivcTT3z48oNcMC+EsTun5
HRh0OfpL8asWcG5V0Uum8Ph82u1cUVUrtDOQ9jI96cIil1x9f/p2SLz73SPX
kLSkH8T8DAQMB0sjO4BTUWqPyJ1u/BzVpM0U0gmBVo9X6/r34BzzwJeSa12g
xTvEL5fVi79UG5N8xUnAK3/BvH2gD2+9Tfc7PkOCg1wC8T4sA7jlyofczqRu
oKU3Dk9SHMSFaF8xeZseOLqCQ3Ov6RCuvObRcU6sF/asUw8U9B3GwPYwqBzq
hbne3g9CBSMorjKesRDSB/NqbRdGZkfxi4/FmaFT/SAls7vWSnAMVc0mcx3a
+v/ik1h/Yn+I/SPyReSP2H8iH0R+iHwR+SPySeSXyDfRT0S/Ef34r/Lx795/
2p0OlfnN1bC71CHEn7EV5DTv3ox4VQURXzd0auY1A+fL3c45GpWg8MPEseVx
E4xqGe1R4ktCQ6my/PNuIUu0q8jPAbG6BNTf1Sww8+ATjEQq2Fbov8RQRQdn
6egcWDMucts9PBw3LZTzebzPgPyGT54TaSXwrOvmXnn5Bjir7SDBVZQP7aIz
W6N/1sL848rJBcyCfR0kOcniati5oBUE8AU+zOxzqAirBLack2G6kQng323x
adt8ObD1ZDE90P8EDCYCzsq+pcDHlue95lEQeF7zc5vcWQxiJ6cNBW+6gsJC
bbpsQgE0ipTxmIrH4cDi+fQ72clL8ifG7Z5ZkHbsrAWe3DyRr3fb4M7Gwt/x
NnWgsHK3tfRUOzA+E8oVS60HvbI7tU0ynSDos1L37AyFv8zlkjXznUvuT6wP
U5iEseX3JjCMrEvNlCBBcopgQM14CwRkRYh6WncDb3nXGueWNthGZ+95KLUH
9g2c++T2pQNGbx3p71zWB8+2Seypyu+EJk+JDoEj/ZD/Tp9RJboLiqtlRZsD
BqD2tN85Lg8SZMkYVdFMDELi+WUyBhbdkJ4VXuJ7YBiyaoOOFWj2gI/5/vjV
/iNwrPGVvdT2XhBQuMqTMzUKV663JQb97gVTYU561BqDfas/aQRf7/vr51XE
+hLrT+wPsX/E/hL7T+SDyA+RVyLPRN7/1X7+u/drdTbvpNDEBLLFFv6Ka+wG
zaCpErw4iUMq0bQkN0r+sfcYspsnkeHHs/ZvB7r/+n1tV1HjEfvIThDTZXZ6
ET2HspzxbNdLO0HP7J7X4JY5NP0pGnGfvgtErLyEF5QmMLBfXPH3yR5g3JR2
fK3nOKb6GjLsJfUsWU/cfzp0e/KVojGUVBrOmrtBuce6/uYPN8i4OTFKjXZV
HxSUe6uZn59CE5owiZgpEvwk2dI6DE3hJu0CR/dQSj+GBRTIVtOo0D2ed/YE
CeYHAsayfk5jKm5ewb+eBLnNPXzzj2bwVfdJ2YrCLuDImi3yWDeL1dpvLlo8
7oJJv9pxV99ZNF/W6bKo2rXkfsQ4cT1xf+L5xPyI+ZfmC8+aa4+imGzOnIlz
H0Q3MJ/JEx1Bfw+vpOw1/bBa2X991PphNPnG+3CjTz8MLC9eu2l6EJ0zzp65
KTAA+zf6GQi0DCCj98lDxSkDwOOxfjQltx8HFdcq8eoMgsUpwfLmuD7ckn77
kNnoIKjcJ/14/r4X09a9P5PyYgjIuesY0z16kHGTy/FD0sNQMXPb8/ijbrRs
PrT8fOcwdDELeJ+8Q8IhxcYL9O4jIMS1dn2hVRfe0th7RwZGIXy11Iqg653I
Q3PjwCSFx8hqma7CunasPXs7T+YTGW6YOMUI1LVi8CW9H/RXxkBflHmqWbkF
/8Ensb9EHom8Enn+O/7+jq//9PoHyqy3yfg5gaIqpUk5uj2Y4aR9UdxyErsm
PJvn6HtQTTz7FUvvJGr9ztGqzuj+6+fZW6cafi3wdOGNZ3PXJcrnkOeHiE2e
WBemzU2upVGeQ9a3G+Szrneh3thgymPNCZR1+mEbQvl8p/foBZuL/zgKuW7W
v2Dcu2Q9cf/mg3vgYPsYcpptZH860YvGd49oX35CxiirIyWkZ334pTrjznaL
KSwkJ+1Ya9qNxlr0GUHfp/Dzo1a6Y5zdqPjez+jRo2mkz5TpCSwioU7JXaPy
9TNYGFiQ9d2BhG8qP3y77zeD89ufvz8tRULOWP47voKz6H3ssUPRWBeWX+r2
5kycxXdbE04pRS+9HzFOXE/cn3g+MT9i/ptDmbuunR5F3rtaG86u7cf1nO7M
XFIjGHm+O2z+VT8KNeR2mDEN47EdbA7xWwfQsitJ8yJ5EDkr2t+6Jg9gr/S5
4ysrBvCH7v5FJ+1BfNqQ/0szvh+/pyhH+g0Pon5On7Kcbx+y/mzyq3YbwqM/
MgXKHHtRY+OaWiGpYfQxr42ZMuvBhwaPf7d3DqMSS+Cg78luDCBN5kt5jKB2
79a6dHUS+mfoiYruH8XsfqMbRgpd6DgcuSfv+yj6c+llOO7pRLWrMzULCWRM
nqGxUz7WjjMykmwNN8bQQiV98mpV6z94XNJPIn9EPon8/h1vf8fTf1q9X6eU
CMG3SehfIzxjsbIKVnZXrJKNnoQnbFd++z8rh7ubkLY2YBIcIgRbvehKwCf9
3uYNlychvaemJNXqLdT//LZu9NIkvGDXpE+ceg2dXJuYSynauvNTdE7MK+Ad
ad3f+WISPog/NGjkKYA6pduMHE6TYPkqy0x8dw506m555mY3CQNDvmwlDzLA
xvDS+AnLSQgis6ibBidD8OPrmk9NJ8GXQfpKx4NouEtnHLadcn7UgJnuFjs/
cMu+bRhDOU/tQvD9yqte8Esn1tSKoksYdFtK77jCierrvzQourTt5gHSZkfo
e2DBIkvR87YvaCK3XoBBm0Q/KYqm9V2U/Fq1H3JqSDRUvUr3KFfdBgkkauLz
xP00NkV/+lQ1CaK9i/npVdVwyol8+X3/JMjkhFYs+teCY69GStPvSdCOnF4j
erkeKsectltyTAGdavh9NbHGJfkS70O8L7HexH7IO1x4f9d2BvLa2lafezwC
rJPM903Fp6Cc23JMVagZ3jgbRAVqT8GL6pdttPytcC5BL4rl2hSom63WcGZr
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
pN1VnUH/c176R/n8b+frP433/wHA8y9w
       "], {{{}, {}, {}, {}, {}}, {{}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{127, 128, 147, 154, 155, 172, 173, 177, 178, 179, 180, 181,
            182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 
           195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 
           208, 209, 210, 211, 212, 213, 214, 215, 216, 217}], 
          LineBox[{234, 235, 236, 241, 242, 255, 256, 257, 258, 264, 265, 266,
            267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 
           280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291}], 
          LineBox[{295, 296, 297, 325, 326, 339, 340, 341, 342, 343, 344, 345,
            346, 347, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 
           370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 
           383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 
           396, 397}], 
          LineBox[{423, 424, 425, 430, 431, 432, 445, 446, 447, 448, 449, 450,
            451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 
           464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 
           477, 478, 479}], 
          LineBox[{501, 502, 503, 508, 509, 522, 523, 524, 525, 526, 527, 528,
            529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 
           542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553}], 
          LineBox[{558, 559, 572, 577, 578, 591, 592, 593, 594, 595, 596, 597,
            598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 
           611, 612, 613, 614, 615, 616, 617}], 
          LineBox[{621, 622, 623, 638, 639, 640, 641, 642, 643, 660, 661, 662,
            663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 
           676, 677, 678, 679, 680, 681, 682, 683}], 
          LineBox[{687, 688, 689, 704, 705, 706, 707, 708, 709, 725, 726, 727,
            728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 
           741, 742, 743, 744, 745, 746, 747}], 
          LineBox[{766, 767, 768, 773, 774, 775, 776, 777, 799, 800, 801, 802,
            803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 
           816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 
           829, 830, 831, 832, 833}], 
          LineBox[{844, 845, 846, 847, 848, 861, 862, 863, 864, 889, 890, 891,
            892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 
           905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 
           918, 919, 920, 921, 922, 923, 924, 925}], 
          LineBox[{945, 946, 947, 956, 957, 970, 973, 974, 975, 976, 977, 978,
            979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 
           992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 
           1004, 1005, 1006, 1007}], 
          LineBox[{1013, 1020, 1021, 1026, 1027, 1028, 1048, 1049, 1050, 1051,
            1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 
           1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 
           1074, 1075}], 
          LineBox[{1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
            1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 
           1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 
           1143, 1144, 1145}], 
          LineBox[{1160, 1161, 1162, 1163, 1186, 1187, 1188, 1189, 1190, 1191,
            1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 
           1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 
           1214, 1215, 1216, 1217}], 
          LineBox[{1223, 1233, 1234, 1241, 1242, 1255, 1256, 1260, 1261, 1262,
            1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 
           1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 
           1285, 1286, 1287}], 
          LineBox[{1291, 1292, 1293, 1302, 1303, 1304, 1305, 1306, 1313, 1314,
            1315, 1316, 1317, 1318, 1319, 1320, 1321}], 
          LineBox[{1325, 1326, 1327, 1351, 1352, 1353, 1354, 1355, 1356, 1381,
            1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 
           1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 
           1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 
           1415, 1416, 1417, 1418, 1419, 1420, 1421}], 
          LineBox[{1425, 1426, 1427, 1436, 1437, 1438, 1439, 1440, 1447, 1448,
            1449, 1450, 1451, 1452, 1453, 1454, 1455}], 
          LineBox[{1459, 1460, 1461, 1485, 1486, 1487, 1488, 1489, 1512, 1513,
            1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 
           1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 
           1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 
           1547, 1548, 1549, 1550, 1551}], 
          LineBox[{1560, 1561, 1562, 1563, 1564, 1577, 1581, 1582, 1583, 1584,
            1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 
           1596, 1597}], 
          LineBox[{1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1633,
            1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 
           1645, 1646, 1647, 1648, 1649}], 
          LineBox[{1655, 1657, 1658, 1659, 1660, 1673, 1674, 1675, 1676, 1684,
            1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 
           1696, 1697, 1698, 1699}], 
          LineBox[{1731, 1732, 1733, 1738, 1739, 1742, 1743, 1752, 1753, 1754,
            1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 
           1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 
           1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 
           1788, 1789}], 
          LineBox[{1804, 1805, 1806, 1813, 1814, 1829, 1830, 1831, 1832, 1833,
            1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 
           1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 
           1856, 1857}], 
          LineBox[{1863, 1870, 1871, 1896, 1897, 1912, 1913, 1930, 1931, 1932,
            1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 
           1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 
           1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 
           1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 
           1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987}],
           LineBox[{1991, 1992, 1993, 2026, 2027, 2040, 2041, 2042, 2057, 
           2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 
           2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 
           2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 
           2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 
           2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109}], 
          LineBox[{2123, 2124, 2125, 2132, 2133, 2147, 2148, 2149, 2150, 2151,
            2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 
           2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173}],
           LineBox[{2179, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 
           2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 
           2215}], LineBox[{2221, 2226, 2227, 2228, 2229, 2242, 2246, 2247, 
           2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 
           2259, 2260, 2261, 2262, 2263}], 
          LineBox[{2273, 2274, 2275, 2282, 2283, 2284, 2285, 2313, 2314, 2315,
            2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 
           2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 
           2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347}], 
          LineBox[{2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363}], 
          LineBox[{2371, 2382, 2383, 2388, 2389, 2390, 2403, 2404, 2405, 2406,
            2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 
           2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 
           2429}], LineBox[{2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 
           2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463}], 
          LineBox[{2467, 2468, 2469, 2475, 2476, 2478, 2479, 2480, 2481}], 
          LineBox[{2485, 2486, 2487, 2493, 2494, 2495, 2496, 2497}], 
          LineBox[{2501, 2502, 2503, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
            2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 
           2545, 2546, 2547, 2548, 2549}], 
          LineBox[{2553, 2554, 2555, 2578, 2579, 2580, 2581, 2582, 2583, 2584,
            2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 
           2596, 2597, 2598, 2599}], 
          LineBox[{2603, 2604, 2605, 2637, 2638, 2651, 2652, 2653, 2654, 2670,
            2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 
           2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 
           2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 
           2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 
           2715, 2716, 2717, 2718, 2719, 2720, 2721}], 
          LineBox[{2725, 2726, 2727, 2733, 2750, 2751, 2752, 2753, 2754, 2771,
            2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 
           2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 
           2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801}], 
          LineBox[{2805, 2806, 2807, 2839, 2840, 2853, 2854, 2855, 2861, 2862,
            2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 
           2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 
           2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 
           2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903}], 
          LineBox[{2907, 2908, 2909, 2914, 2915, 2932, 2933, 2934, 2935, 2951,
            2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 
           2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 
           2974, 2975, 2976, 2977, 2978, 2979}], 
          LineBox[{2987, 2988, 2989, 2996, 3022, 3023, 3024, 3025, 3026, 3027,
            3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 
           3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 
           3050, 3051, 3052, 3053, 3054, 3055}], 
          LineBox[{3062, 3063, 3064, 3071, 3072, 3073, 3074, 3075, 3086, 3087,
            3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 
           3099}], LineBox[{3111, 3112, 3113, 3114, 3115, 3129, 3130, 3131, 
           3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 
           3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 
           3162, 3163}], 
          LineBox[{3173, 3174, 3175, 3176, 3177, 3190, 3191, 3192, 3198, 3199,
            3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 
           3211, 3212, 3213, 3214, 3215}], 
          LineBox[{3221, 3222, 3223, 3224, 3225, 3238, 3239, 3240, 3255, 3256,
            3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 
           3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277}], 
          LineBox[{3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3302, 3303,
            3304, 3305, 3306, 3307, 3308, 3309}], 
          LineBox[{3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3349, 3350,
            3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 
           3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371}], 
          LineBox[{3381, 3383, 3384, 3391, 3392, 3395, 3396, 3397, 3398, 3399,
            3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407}], 
          LineBox[{3415, 3420, 3421, 3429, 3430, 3432, 3433, 3434, 3451, 3452,
            3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 
           3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 
           3475, 3476, 3477}], 
          LineBox[{3482, 3483, 3484, 3493, 3494, 3507, 3508, 3509, 3510, 3519,
            3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 
           3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 
           3541}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{0.4999999999999999, 0.}, {-0.5000000000000001, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], PointBox[{{0., 0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-1.555467800821738, 1.555467800821738}, {-1.055467800821738, 
     1.055467800821738}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6817665085265923`*^9, 3.681766520681288*^9}, 
   3.6819682746812396`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"F", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", "i"], "0"},
        {
         RowBox[{"r", " ", 
          SuperscriptBox["\[ExponentialE]", "i"]}], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "i"}]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"r", "->", 
     RowBox[{"b", "+", 
      SuperscriptBox["a\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "i"}]]}]}], ",", 
    RowBox[{"F", "=", 
     RowBox[{
      RowBox[{"S", "[", "b", "]"}], ".", 
      RowBox[{"W", "[", "i", "]"}], ".", 
      RowBox[{"S", "[", "a", "]"}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{
    RowBox[{"S", "[", 
     RowBox[{"\[ImaginaryI]", " ", "p"}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/", 
   RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "//",
   "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "\[Conjugate]"}], ".", "P", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/", 
   RowBox[{"%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "//",
   "Simplify"}]}], "Input",
 CellChangeTimes->{{3.6817665699651065`*^9, 3.6817665990597706`*^9}, {
  3.6817666591762094`*^9, 3.681766702432683*^9}, {3.6818238509447813`*^9, 
  3.6818238656766233`*^9}, {3.6820839345189667`*^9, 3.682083953393046*^9}, {
  3.6820840095092554`*^9, 3.6820840109603386`*^9}, {3.682084058955084*^9, 
  3.6820840616562386`*^9}}],

Cell[BoxData["r"], "Output",
 CellChangeTimes->{
  3.6818238738890934`*^9, {3.682083943389474*^9, 3.682083954494109*^9}, 
   3.6820840115603733`*^9, {3.682084042837162*^9, 3.682084062629294*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Conjugate", "[", "r", "]"}]]], "Output",
 CellChangeTimes->{
  3.6818238738890934`*^9, {3.682083943389474*^9, 3.682083954494109*^9}, 
   3.6820840115603733`*^9, {3.682084042837162*^9, 3.6820840626352944`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"J", ".", 
      RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], "\[Conjugate]"}], ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", "P", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"J", ".", 
      RowBox[{"P", "\[Conjugate]"}], ".", "J"}], ")"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"J", ".", 
      RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ".", "F", ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], "/.", 
   RowBox[{
    RowBox[{"p", "\[Conjugate]"}], "\[Rule]", "p"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "1", 
         RowBox[{"Log", "[", "\[Rho]", "]"}]},
        {
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "%%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               FractionBox["4", "3"], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}], "+", 
            RowBox[{
            "%%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ")"}]}], "1", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "\[Rho]", "]"}], "+", 
           RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]},
        {
         RowBox[{"\[ImaginaryI]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               FractionBox["4", "3"], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}], "+", 
            RowBox[{
            "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ")"}]}], "1", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "\[Rho]", "]"}], "-", 
           RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}
       }], ")"}], "//", "Det"}], "//", "Simplify"}], "//", "Apart"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"D", "[", 
     RowBox[{"%", ",", "\[Rho]"}], "]"}], 
    RowBox[{"2", 
     SqrtBox["\[Rho]"]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["4", "3"]}], 
     SuperscriptBox["\[Rho]", 
      RowBox[{"3", "/", "2"}]]}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%%", "-", 
    RowBox[{"%", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["4", "3"], 
       SuperscriptBox["\[Rho]", 
        RowBox[{"3", "/", "2"}]]}]]}]}], "//", "Simplify"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"J", ".", 
      RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], "\[Conjugate]"}], ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", "P", ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"J", ".", 
      RowBox[{"P", "\[Conjugate]"}], ".", "J"}], ")"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"J", ".", 
      RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ".", "F", ".", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "/.", 
   RowBox[{
    RowBox[{"p", "\[Conjugate]"}], "\[Rule]", "p"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "1", 
         RowBox[{"Log", "[", "\[Rho]", "]"}]},
        {
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "%%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
            RowBox[{
             RowBox[{
             "%%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["4", "3"]}], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}]}], ")"}]}], "1", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "\[Rho]", "]"}], "+", 
           RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]},
        {
         RowBox[{"\[ImaginaryI]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
            RowBox[{
             RowBox[{
             "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", 
                FractionBox["4", "3"]}], 
               SuperscriptBox["\[Rho]", 
                RowBox[{"3", "/", "2"}]]}]]}]}], ")"}]}], "1", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "\[Rho]", "]"}], "-", 
           RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}
       }], ")"}], "//", "Det"}], "//", "Simplify"}], "//", "Apart"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"D", "[", 
      RowBox[{"%", ",", "\[Rho]"}], "]"}], 
     RowBox[{"2", 
      SqrtBox["\[Rho]"]}]]}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["4", "3"], 
     SuperscriptBox["\[Rho]", 
      RowBox[{"3", "/", "2"}]]}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%%", "-", 
   RowBox[{"%", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["4", "3"]}], 
      SuperscriptBox["\[Rho]", 
       RowBox[{"3", "/", "2"}]]}]]}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.681766726136039*^9, 3.681766921826232*^9}, {
  3.68182389271017*^9, 3.6818238930731907`*^9}, {3.6818239846664276`*^9, 
  3.6818240101698866`*^9}, {3.681824070964364*^9, 3.681824142986483*^9}, {
  3.681824546042536*^9, 3.6818245813425546`*^9}, {3.681827724874677*^9, 
  3.681827738351448*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.6817668647279663`*^9, 3.681766922534272*^9, 3.681824044895873*^9, 
   3.6818241208542175`*^9, 3.681824153196067*^9, 3.681824459801603*^9, 
   3.681824551477846*^9, 3.6818245829466467`*^9, 3.6818277400385447`*^9, {
   3.682084031334504*^9, 3.6820840657344713`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "+", 
       RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "p"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "-", 
       RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "r"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "i"}], "+", 
       RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "i"}]], " ", "p", " ", "r"}]}], ")"}], " ", 
     RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6817668647279663`*^9, 3.681766922534272*^9, 3.681824044895873*^9, 
   3.6818241208542175`*^9, 3.681824153196067*^9, 3.681824459801603*^9, 
   3.681824551477846*^9, 3.6818245829466467`*^9, 3.6818277400385447`*^9, {
   3.682084031334504*^9, 3.682084065776474*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.6817668647279663`*^9, 3.681766922534272*^9, 3.681824044895873*^9, 
   3.6818241208542175`*^9, 3.681824153196067*^9, 3.681824459801603*^9, 
   3.681824551477846*^9, 3.6818245829466467`*^9, 3.6818277400385447`*^9, {
   3.682084031334504*^9, 3.682084065866479*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "+", 
       RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "p"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"i", "-", 
       RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", "r"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "i"}], "+", 
       RowBox[{"Conjugate", "[", "i", "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "i"}]], " ", "p", " ", "r"}]}], ")"}], " ", 
     RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6817668647279663`*^9, 3.681766922534272*^9, 3.681824044895873*^9, 
   3.6818241208542175`*^9, 3.681824153196067*^9, 3.681824459801603*^9, 
   3.681824551477846*^9, 3.6818245829466467`*^9, 3.6818277400385447`*^9, {
   3.682084031334504*^9, 3.6820840658714795`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Rho]", "2"], "+", 
    RowBox[{"2", "\[Rho]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"2", 
        RowBox[{"Im", "[", "i", "]"}]}]}], "]"}], 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"Re", "[", "i", "]"}]}]], "p"]}], " ", "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"Re", "[", "i", "]"}]}]], "p"]}], " ", "-", "1"}], ")"}]}], 
   "\[Equal]", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Rho]", "2"], "+", 
     RowBox[{"2", "\[Rho]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", 
        RowBox[{"2", 
         RowBox[{"Im", "[", "i", "]"}]}]}], "]"}], 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Re", "[", "i", "]"}]}]], "p"]}], " ", "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"Re", "[", "i", "]"}]}]], "p"]}], " ", "-", "1"}], ")"}]}],
     "\[Equal]", "0"}], ",", "\[Rho]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6818246848574753`*^9, 3.681824720384507*^9}, {
   3.6818247726644974`*^9, 3.6818248171470423`*^9}, {3.6818248554082303`*^9, 
   3.681824862432632*^9}, {3.681824919843916*^9, 3.681825051727459*^9}, {
   3.6818254060257235`*^9, 3.6818255017802005`*^9}, {3.681828048304866*^9, 
   3.6818280762494645`*^9}, {3.6818281083523006`*^9, 3.6818281119855084`*^9}, 
   3.6818281573811045`*^9, 3.681828268076436*^9, {3.6820835633417363`*^9, 
   3.682083568423027*^9}, {3.6820836183558826`*^9, 3.6820837290112123`*^9}, {
   3.6820841600528665`*^9, 3.682084225785626*^9}, {3.6820843485846496`*^9, 
   3.682084349752716*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Rho]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"Re", "[", "i", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"Im", "[", "i", "]"}]}]}], "]"}]}], "p"]}], "-", 
        SqrtBox[
         RowBox[{"4", "-", 
          FractionBox[
           RowBox[{"8", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"Re", "[", "i", "]"}]}]]}], "p"], "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              RowBox[{"Re", "[", "i", "]"}]}]], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "+", 
               RowBox[{"2", " ", 
                RowBox[{"Im", "[", "i", "]"}]}]}], "]"}], "2"]}], 
           SuperscriptBox["p", "2"]]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"Re", "[", "i", "]"}]}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"Im", "[", "i", "]"}]}]}], "]"}]}], "p"]}], "+", 
        SqrtBox[
         RowBox[{"4", "-", 
          FractionBox[
           RowBox[{"8", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"Re", "[", "i", "]"}]}]]}], "p"], "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              RowBox[{"Re", "[", "i", "]"}]}]], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "+", 
               RowBox[{"2", " ", 
                RowBox[{"Im", "[", "i", "]"}]}]}], "]"}], "2"]}], 
           SuperscriptBox["p", "2"]]}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6818254610048685`*^9, 3.6818255031022763`*^9, 
  3.6818282711006093`*^9, 3.6820837305362997`*^9, 3.6820843524808726`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ImaginaryI]", 
     SqrtBox[
      FractionBox[
       RowBox[{"1", "-", 
        SuperscriptBox["x", "2"]}], "x"]], "\[ImaginaryI]", " ", "x"}], "/.", 
    RowBox[{"x", "\[Rule]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"-", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681767023980075*^9, 3.6817670593880997`*^9}, {
   3.6817671143042407`*^9, 3.6817671156723194`*^9}, {3.681768206623107*^9, 
   3.6817682222571545`*^9}, {3.681824361440977*^9, 3.6818243638301134`*^9}, {
   3.6818287820938363`*^9, 3.681828782398854*^9}, {3.681828858878228*^9, 
   3.6818288669576902`*^9}, 3.6818290379874725`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["5", "4"], "]"}]}], 
  RowBox[{"Gamma", "[", 
   FractionBox["7", "4"], "]"}]]], "Output",
 CellChangeTimes->{
  3.681767079028223*^9, 3.681767117663433*^9, {3.6817682104861183`*^9, 
   3.6817682237811575`*^9}, 3.6818243667712817`*^9, 3.6818287880811787`*^9, 
   3.6818288691088133`*^9, 3.6818290681211963`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", 
       SuperscriptBox["\[Rho]", "2"]}], "/.", 
      RowBox[{"\[Rho]", "\[Rule]", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"Re", "[", "i", "]"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"Cosh", "[", 
             RowBox[{"2", " ", 
              RowBox[{"Im", "[", "i", "]"}]}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                 RowBox[{"Re", "[", "i", "]"}]}]], " ", "p"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"4", " ", 
                 RowBox[{"Re", "[", "i", "]"}]}]], " ", 
               SuperscriptBox["p", "2"]}], "+", 
              RowBox[{"Cosh", "[", 
               RowBox[{"4", " ", 
                RowBox[{"Im", "[", "i", "]"}]}], "]"}]}]]}]}], ")"}]}], 
        RowBox[{"2", " ", "p"}]]}]}], "/.", 
     RowBox[{"i", "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
         SqrtBox["\[Pi]"], " ", 
         RowBox[{"Gamma", "[", 
          FractionBox["5", "4"], "]"}]}], 
        RowBox[{"Gamma", "[", 
         FractionBox["7", "4"], "]"}]], 
       SuperscriptBox["\[Beta]", 
        RowBox[{"3", "/", "2"}]]}]}]}], "/.", 
    RowBox[{"p", "\[Rule]", 
     RowBox[{
      FractionBox["2", "3"], 
      SuperscriptBox["\[ExponentialE]", 
       SuperscriptBox["\[Beta]", 
        RowBox[{"3", "/", "2"}]]], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         SuperscriptBox["\[Beta]", 
          RowBox[{"3", "/", "2"}]]]}], ")"}]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681828310246848*^9, 3.6818284710770473`*^9}, {
  3.6818286027315774`*^9, 3.681828670212437*^9}, {3.6818287235964904`*^9, 
  3.6818287478008747`*^9}, {3.6818287948245645`*^9, 3.681828833317766*^9}, {
  3.681828998358206*^9, 3.6818290241796827`*^9}, {3.6818290736565127`*^9, 
  3.6818291000460224`*^9}, {3.6818312823212557`*^9, 3.681831315524258*^9}, {
  3.681831348711271*^9, 3.6818314112111826`*^9}, {3.68183299346749*^9, 
  3.681833046002495*^9}, {3.6820531717708406`*^9, 3.6820531995514297`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
f/ZrpU5kHzwQ5VpZX2dCFnGCgyW8D/4PxyRN0w==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.00015232869894843404`, 0.519549034636305}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6818283390944986`*^9, 3.681828471738085*^9}, {
  3.68182860853891*^9, 3.681828670838473*^9}, {3.6818287244625397`*^9, 
  3.6818287484149103`*^9}, {3.681828795916627*^9, 3.6818288339538026`*^9}, {
  3.6818289990882473`*^9, 3.681829026351807*^9}, {3.681829074529563*^9, 
  3.681829100598054*^9}, {3.681831292383546*^9, 3.681831316891301*^9}, {
  3.681831350222315*^9, 3.6818314119542046`*^9}, {3.6818329969086866`*^9, 
  3.681833047049555*^9}, {3.6820531728469024`*^9, 3.6820532015755453`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "=", "0.5"}], ";", 
    RowBox[{"l", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"potential", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["x", "2"]}], "x"], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["x", "l"]}], ")"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"StokesGraph", "[", 
    RowBox[{"potential", ",", "1"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[Beta]", ",", "l", ",", "potential"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.681879431480095*^9, 3.6818794655501447`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzs+nlUje/f/o83D6JBikIlQiqRCinPC5VKpJIKJdEgJUMlJVJJGpBIA0kD
UpTQgDqbaJ7nea7dbt7N83fv11q331qntX7We70/78/9vdf99Y91rOe+rus8
j+NxnPsqNpja6pgx0NHR6aygo6P9LeTManlUfgat++fvUYRpCE5j/LI5lI34
rzmmYSn5Ii/t827TpM4InyG0x7UsjDYPTRMsj6TqYV0mQdrca1by7vv3ZGRs
KeJImw+y/KyPpWq79ikZ2rxASp3xc34PMjh02Jc2V+E9s+4LVUOq6RHaXHtR
vOk7qQMlaf98Spu7qZyU/kHVNsfGt9Lm9Ia/2jy5WpBv6Pu3tDlTxtWWB1Q9
o2T+z7y8xl/v+dEaRDRLhdLmN88HBQRTNduqxAVN6jz8RTf/8dXFyGDxxGPa
XFPxZ4YuVSfTZ9PTrj9qIKvYtfk70u0iP6DNVxW6HBmiasvEeVbaXI9/aTCJ
5REkvBl1os2LtlVP2FF1oqbnP3NLS6fjGnaZoLMjOJo2t/vELqRC1XXZNka0
+beIqdV8t8rAwtDFhzaXiT7zeSVV85c4cdHmuZ8005n210Fdksw//rUb/DCk
p+oW7Tv/rO/5Q2ux8aVW8OPSjqfNN1+s7Bqh6qHrP8Zo+/sZpJg92tYJNTlb
3tPmDztO6I5Q9V42Tn3a9WvYVU37MnvhrmDFQ9p8+Q+ZZSSqPq5OnKbND4jy
3GuL6Ic1J5fu0OZajne5adrieSgjbW5cGru1zn0YQhN542jzFLaVvDR9TUZ6
fbnKFBL2OKBP46fUQeMVTa+widpP48dawvaInt4E0pTcIESbbzbdKHWSqgsn
rnPS5sbclXfqL4whjs9vltPm7vTp7A1UzRXZdYQ2tyetDTCyG0V2Fis20+bS
S76bjKn6RADjbtr8tXsmWw7rMGqOk13SpM7PXAp5RdMvQurW0OaDOzRPFW3u
R50n1sjSrt94lzeNpunZmHVo8/1cF+mqVHoR79uverT5fYbZG9VU/fbzCm7a
/EYEa0TThU4UfO6ODG2uZG/F20LV1gfNDWnz9YdrDuaztqKLEi7naPO5XQ9H
CqmawSb9n/2ppoJUg0otkukx2kSbZ8XWmDRR9br4rXy0+f0wju11rKWI6Y7E
Mto8T2jdqnqqrv18kvY8+CltnTHMipC5gpkRbe5qQ/DMUvUl5eaDtHk465bg
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
hOeJ543zgPOC84TzhvOI84rzjvcB7wveJ7xveB/xvuJ9xvuOnwf4eYGfJ/j5
hJ9f+Pn2t/ML78P/ab7/u/n7V/sy/ZixW41lFkrPhTEW2rTA5wffB1NvzYJX
vhw6w9wKon4c1yQps7CouNen9l0rrA3z1XLjmIFr1q1JTLeaofxk874jnNMg
cPW0AF9yE0w6HAWK3xi8QAHjujkN0C9d+JVuxRikjOWPsKU2QJGU0IesAQqs
kn/K5pbcAFGL9cc0GubAliP105xbG7yIFRyWTZuHtlkZ1YnD7bDiabHOQMgC
VFovczfY2AGTyZSbV64vguo5sBTj6wR+2y0to6pLoMvPZCYu0AVPvTxulS2j
8lbgTdop0Q2CpUe6023pCLdblZT9R3pAwOeiuHIFHREl1eJ+/GYvBPum80RI
0hMmDzh4NV+S4EGYQP2Pe/SEamRU9e7cPujNcLrztJme0HeOKeSdIsPnsXYm
cVkGwp9HcKJVcgC8xq3Tsh8wEHql+SOCFoPAcHfvwocWBoJJyNfoUNQQiAQf
zuml8hG2YLLPsIv6812y6nVOBcbf56tVYX6aFvcUFF3S8VzO0gT5yYNWhdyT
EKIDbBW3GkFynfJmce4JsNz5umR4TSOUT+dWVHKOw/pVU2wjtQ3g+b33uEcR
BZRebqLcSWqAip/a2SpxFAiOjqhioOoUq66dMhEUaFPy56N8bYAzI4kPREMo
IFCVOjhM1fh68PXi+8H3i/uB+4X7ifuN54HnheeJ543zgPOC84TzhvON84/3
42/8/7t5/qv9+XfzF9nTxXY+ZgaEPgp53xJpRJes9+Wb7JgBHitWxaIPDeja
VtuhrKRpeKN51rlXhfpee9WSfrJ5HD4178omb6lDa+Ynl69ZPQ7t++0G9s3X
ooK4xmnm42PgLM5TfKmzFpls1Am+Sl1vvHGYN0NLLboUtjjiU0mBebu7lqbN
tWiZv63V/bEpONZv4CQZW49Oyj65bCk9BXe+HTqYv6Ue6a+snTWzmoQ934Qr
077XIQ6J/VyuURPgSB6QXGZRhxbfxex8840CYZlFpOXU+0XJBSPrLxQIim2S
ZaRqHtUdR3d9pID9BV2pxSbqe7tQTMPMWwok3xG9NUfVvM2Z+tV+s7B9Um/F
ZWhCIm+cnx29PAdiBbu0q3yb//g8fj/8eQO7l7kc1JwHhUzEZz/agnafPpiy
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
aTae/n/aO/OoHL+27zcXUhKhUhIJIaFMOc5Kg8pUhBCFzCVTaFJCAwkJTdKA
BtGgIjqaVdI8z8NVXQ3XdTWXJu/1/ONda/euZd3r99zvu+71Pn/ude5z7+P4
fj/f7dwtcp6D2p6azwpX68KTqtPspGo5qH7vgb7nNt34Ke/Y7wpdTmpcy4WT
nsJAV/k9Zi4JnJRJkauErwhrij+kf6SepN6kH6RfJB8kPyRff/Pn3633P9WT
9Mdc2Te4NJeL2uzmXzP/tTccO+PeN72Ai1K64FW37vk7yBPe+eRcGRc1/Rzs
5KXHQG3k4Zd2+VyUz6kd4z4rX+CqrLvWvZVclJbJeoXQ99GoaiY6q8yf78/P
c7YXZx/f181FUfY/hX5LpIHsR/E1psLclOyMVfnDPrmw/szVW/JbualV9T1j
w9ZFoP6ZP0XtEjelefP+7sEHZSCWMntwazg3NW7z7EW2RxXYvCwRCqdzU1dm
lD/McqiDB3KC4YkreKnivZEu2pbt8GJJwHiHLS/1bOzU5g3nOyBN5GzCgsU8
VNrzkiijy41wZcs5d7ejPJTEo9++aoua4aFYhdu4Dw/1vctCKCSnBUSCP3yy
rOahMt/L8NlbtILShozOH4W8VM9SB+NEsy4w6qmNlpPjo1L15OXVjRhw8Yfo
ys/H+KihsV1rYgOZ4FK/PLr0JR81Hn7vTnAHC0g9yOfk+5IHRL8tZXJRK147
LQjXS8UlW9svSLD1on9c8/ieTw4q2ecs8NzETQl98z/e0FiI6+WcjNTOc1Pq
go3xpQ2leISx3SQ7iJu6LXLCQDWvEuseaF5IruemlOev3LyOfd8i6yf7i43/
3ZYqxkO5nCtUn87diBnz+tWL9/BQR+Lsss68b0Khj9K3WQ94KN+zC+U3GLag
l8PdgAU/eCh1tw+nLQdoqForn9g8nZe6Of+KVNXjNhyQEGqv1eOlzoi9bV2n
QMfP2zasFPDgpUSc9b45pHeg2/YA55NFvNQl0+OhXw90YcD6pwtwLh91btrc
kf0d3bhCzGRWqzEf1Vj+QjjhBhMHi3o9fr76oyeSfpM8kH6SfpM8kLyQvJE8
krySPJO8k3kg80Xmj8zn3/L37+bnP40Pi3saDeofq/Dy9PvZWSFp2JJycJmQ
RCVqtvFeU+RMxc1egjKiN8txuGeH5g45xFzm2sJlVA1unWW9urQ3A4/p23HE
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
f6XAEomIKsVvNRhUo7HU0ugzvDkQlHHodh0WSzjzH/P/CEesC7kXbWlAyaja
zCHDVzBS7vfu9Y1GpOwc93tlWKDzPKtYNcMmlJj7o0PYJRgNJ04uvrSqGQ/v
2aAZ6RWDJ11uDCrwt2BxaNjcNSIpqK+gkqW5n4Yhdm1hDkVZWDKzOfdCaCtq
Dcy9cPH2T7Trn8xhjrbhstP2Ax7s+1dWsKjb/EN0NJaajDLULMORw3t2nMEO
lK9QP3zTuhJf3Yg7tWZlF+os3pL28VUNrrG03W/t1422nmWR4d/qUeoTzWOH
KBNBo1zi1JGmP/e3v/n3P3r/M71Jfkn9L532eC5l+xtKzDeNrVVLxa6h9RUx
c34Dn45bhRIm4ycXWuGjt5OgvOIaF+19Er5Y7qN1n/Eb1gpYv405lYEewZ6/
hRQ4KOkEzqtF6d/x/EjgePpDDspfXfz7qdP5mPbO7+WDsQnYrjOrU88jAd3S
TOgrd0yA/Ouyl4rv41CKLzd45Mk4pGhzjvJ/iMGHwXYxdjVj0LWroE97YzRG
DqKbsuwY7OqNfnFB9iPuPVARFHBuFOaWKHPQnkVh2K3zOwysf4FDSfb8lMZI
VKd9bKy5MwIyBxWF9b0jcJcMLW6H5zDQhb6U2rwKRw5Umx3uNwRpoTHGGq1h
6IQLtnCGDcLXx/Jmz03CcHzJVyvDTwPQrL0i8gJXGAbGGTmWdnBQl/bem/nx
fTEuUS6q0tDgpGTlupaVbCyfMp9cj9yPrIes9+k+652sG5xUpLPAnAqzSsy4
fkTgShQnJRR560nBw+op/ZJ6kHqRepJ6k36QfpH+k3yQ/PyrfPxN37/pseJy
YixN5QeWc2em71lbhRZnEn0kz2fjp+K5Nw0lK3HCaPm5LT6ZqCJoKcU1vQJb
G9XjAz+9xvYu7iCug4U46dKzrezEA3Ro2Fujcy4fbz/Uu5Bs6Qn1aUdDNb/n
Yh6r+IRIzFe8IfbN5YtaKZ451hHu5xaJ07KetF+5XIRh27dNo196A3oJtcLp
DVnYIi+dcCwnBzmfFxVNqFTCnTteNzKgAF+ri9lnHK8Gp66EBtdzhWjzw0D+
hHMNysokVd37HA3HFyz4sbA5DSffrFzJvTsByudUPU1Y+A0DH6peKQxKAp1N
ozmm5bGYHKWqUG6SDNNc00s0eoMx0nnnXBsDBA4LIYZLkjYkuXowlu5Mhg+2
Wkc/RoTAtgMxt/JuJ4HoBrU36mvi4MG9c04npRNAydsmxvrSN4i8utVwgUM0
iGfWai8USAfjCWNrhe5QSJdcq/qW6ztQJUflbHg8gGebYfXFT7nwZna5+sYV
j/Cn12GKd3U+vJ2W+Pz51zA8Xgl2evRC0D3lq807Mx57Rc4XtrwrhnWvMmZd
2464WvACR5FZKUjtbZx2GTJwfpqeXIpEOZzdkP+jV74El1Q/mWXTWYdyT+bI
llh1/Pl5jfXNtV7xm0rQpJvefO9MHXAfLrHzSChH26Wr8tfoNIJLb8NadYlq
TP/o2qDW2QSyOvwdYeZ1+Ohl/RqvFy3wcMlc2q9djWguoO75YU8rHGDNGX3T
3ISFS3OLJGe1Q0LRsbjQeDqK9/U8UJJiTRlnVAtvpLRacIlCudyOt3TwnuOS
axRKw3qac1ekeicIK3HFPeRsw551sQZujV1wOptr+P6RdtSfUH0k68AAsh/y
Ofk+ub67ZdHp/XFlqFUg+/DQ/Eb0CZVwualUiXnVN86fUm9C34pIBZPganz7
SEfW9EozuvLe3c/NX4eljCdx+hEtOL5jr/zm4w3opNo4fpFOw8xjx1o7Khux
NiuxavryNlwQay5Fn2hCmquknuzFdhwN2IbzpFvwxb0ZexPi6Ng9MaH4WJWG
VPKxeV8mO/B6eFLtBeNWXKLUnyOl24XPQ6zTwq+1IdWceabVuxv1u9c26z5q
x+f5Ff0zWxlI6ndPqXnB/RN0rGy0bVzUwsROnQWmfcodaHFtrTGriYWD49El
Gbv/6IWkX6SfpN8kDyQvJE9kPsn8krySPJO8k3kg80LmicwbmUcyr2SeybyT
5wF5XpDnCXnekOcReb6R5yN5fpLnK3lekucpeT6T5zd5vpPnJ3l+/Kfn5V/N
x7EGzi22jxpx/Kp+7xvtEghKYQmfk27CiVjW888fSkHnpUutbGQT5mvu/Fki
WQ47xXBZ2q963PvwYLX/r0IoHx5cLBZei6Vvkxn7I39C4rThcOUMFnoKBrQ4
7WABc31qYEZBM65eb66zSLYKNi0twOjOFryWFOO3RbkWBDaJ+AT/pqGt8Syr
yb0NsBnaHhmItOFMndXxizY1QfblQ+94ZdrxpKDonle5zRAudL2TW5GOjpUT
Qi+O0CD8LUOoMZiJmScWjR1h3y+Vni1ydL7PQCmfnfYXpbohx97kV4NTB+p7
vPstvrsNBBiR9LlVnah8139wP9Ah6aHbZJBiN67yFtv3dnXnlPfJ9cn+Ts7w
YzbtqEZ99b6GddE5oCKRNXf/lwrkV6TprFyXBc72YYviuMvwzKDeuP3adHB5
YPNcY3UxVoo1/bSKSIG79slCZ1zysdnmbcgqrm9wVoY1ev5VNr6Qf7eVa+nn
KfWR9ZP9kfqQ+pH6kvqT/pD+kTyQvJA8/Y2Xf7d+Pra/Gqdlt+KAB6/bq6f3
8fMRywnBwlZ0Wznt8oUbD8Hybu5Iaiv7+WYnxtfHIXDrTll3UHcrSoaU+Ca9
fYd5zXe/Zy5rQ745S+4Yv/iEYjcsu7Z8a8OK3BiTvJ50lHron5wp1Yb+97W2
zj8eD05j+dKBN9vwAHPE8KlMKhz1kzv6gtGGu3f/XiExlgVWWy4kDFq1Y8yy
fb2fk/PgqWBLSB0XHU+Hpb+W2lgELzXyfa/50XFs/5xjn6eVwrx7Jvce32nH
82vPBo7X5mGYyoPzbuZ0zKnd6mZRUIxnNkDBdqkOvLc/5cbdXeXgr/HikF1w
B9a7F2pIe1bCJouqzdIKncj5a3vKvfzqKWNyPrkeWQ9Z764Q3+uP2+noo6eZ
XSJdhiFVNxXPXejAjL7sqwkXKjCiQu7lnMEO1C7+/mhBfBWeDAj66OnYiUs6
1RaMjtXgS06V+A0iXfjE3imkaFs9kvqQ+pH6kvqTfpJ+kzz8q37/zY//bj2y
7BI0bM8yceS7yONLmuHwXGqo4o4NEzt8rRXopbGgWxjToPeUiZsMz+m8dPoC
Q9VPxD6eZuJH931mPKZWcLbban/kTSZmuY37uraFYsaqWZ4s5sCf70lyHD5U
LCaSOoBbvfSodcdYkPz03hq1VCYOjMqZ2mangdo5LWXpcSYOeRjsn66VDeWG
ff2tGiwMak24PfT5J9zY43bm2QsW2jlEWC16UgTt4dJd34dZ2BkjErJTvRT6
yk073Nf0oLOBwLfDjHKIU0h6pH66B/VNHn3VfVoFX8t96fzBPUiVvwkSX18L
QT6e85c1s8cSW2o2FNYDxza57V2yvSiqLXmWO64RSlKOnN93phdvPi9Iz5po
AmnZ9R5mH3qxzD5h4qRmC8y6bjn8XaAPzfO3CWsV0eDNCtdN7Sf78OqXoZMP
jdugkXLcl5Leh7/VGyY3N7XDt8QDOoZL+5H/zEjtrlMdsCjiykwN137cFm1w
gqu9E+iKW/2UWP1o/GZy0MO8G8R0owdkDgygsfa410ALY4p+5HPyfeclE25F
v/7oj+cc9T1sHzPxdbu5mT1HPAb+cvQrSGBiiPaPC3sdUlBo/+zbod1MXBGQ
taBqKBOjn05snFzDwpPWSzeWm/9AZenTJYccWOjME72027wQd5lePryxkoXn
t9ucV5lbgmORj+j6C3vwhI0VQz+5DL15VMTBsActwp5GKLDvx8W9aipzH/Zg
hOLxlJWcNThtjUZcb04Pql7Zr/XKtw43fd38uHRaL3omfg5IZ38fnXgpn/9N
vxdXzq0rtjJtwg1fP4d9jO5Fn7rNsUrrWzDO6Rh/pUQfVsY6FrZwtaLAyazT
fG592P+zMrDpJzvHFT56QmN9OGZ62sflGR3DM2rLMiz60cVdbvT3oU4sbOMZ
eNLaj7ZK257ukehGqd6r5fLHBvAwSqiGVTGww9vjvXLNAL7zUSjY+IyFpF+k
n6TfJA8kLyRPJG8kjySvJM8k72QeyLyQeSLzRuaRzCt5PpDnB3m+/O38+B8+
/xmfZN6DxM5qliWPw8t0x9syeeXIIfNyfZfeOBzPV8l7Orcc6xcLl7hUjAFH
u98eb4syVJ1xI0K3egAgvX/k+Z1CvMgvsdhdeABWRrap55woxNcWO/yjtvfD
be9PnkKGhfiz6Wzg5oY+sE6d76C1pxCD5rGOHS/og4KRj5eWsMdHbVN6zs0b
g3jhkUKXi6V45ufbH8L7R0H+0tI8a48SnJybecLa8xccFliqfqKoGCWN5n9+
nTMCupVDSnrK7O+PZWL9RzlHoPx2nKpzfBE6ya7bZLNxGKqDrDlP6BXheV1L
918WQ3BwG2XfPlCIMn65HZUhg7DbUChOJPa//r8GldnTcvpgm8DLadLseoT0
9TOi09jj9XeOLWSPzdTb3h2+OQEHF2xrT9WpxPPiHczNqydh6aSHbTazasp8
cj2yX+eT+cm7GydBMaBm3VBoDeKTG0EFD37D1zjpNZcd6tCGxl0uLc5BHTol
fDvtWgPemZt//cl5Dqro7Bq/+NRGVBAucpuVxEEZbRdaLl3chCt5NDo6BTip
nHsRLRydzVP0Jv14/GGpdKkxJ5UQKlbZLkVD49VjjjoRnNTmiDmFTux7ntPT
+LUfRzmpgB+7blzyaUOuPt1dV3ZwUSu2WNjtrm1nP9eqj3zORXVf0DfPkO6Y
4j/JB6k36QfpF+kn6TfJA8kLyRPJL8k3yf/f/P53+/ff7U+hUue7kixO6kTb
gJbEI2s0HtDcZZ3DSaVE/6ixeuwF3GEbog4WcFIfmatLn19+C521/EVjRZyU
Fd/SqzfzwzBW6AD/uVZOqtG72rxDPhG93ZjrluZyUQ4eruoz+CthMlJ8WWsD
J6U4l3P5reBEsL7Mt3Yruz5fnzH/8dA0mL0uM3u5JBc1liXKl1qVDVfkZbtu
anBRHF3HUs0Z+fDl8a8gbksuavavE11hl4uBJ0pmzN+fi+pqeSk3bFY2ZUzO
J+uZPnp5aygnF/X58JrtGb1pKF+Veu+kHBelHqjmqP8mB7911R4M2stFRcdc
qzKXKER7q6NLDzlyUYljn2fx7CvBFcIdyq/iuKj5p8y36DiU452zSyvdOrmo
2HdXouxeVSFZP9nfmOKtXstF3NSdh5fNKl7U4uyw+eI5B7ipFIeo4W3uDfi9
iMPA25Ob+oSiKsZbmpDUi9ST9If0j/T3b/79u/X5V/s3uNlx17h3AiKr775i
/UqHiYKvnVePTcLcXssV9JhMEJt5Lm5vziQcWGBlPBz2HUpYhpqtxybgSNGL
IUH7NPD83fY77cc4PNp/L9pcLxX0yqVGYwPHYMOPFUaWAclw3FFFfkvUb9jO
PGXX55AHWzPEz0cDB4WpsfzKs4vgXpzT9lWvOSgaaz7fMflSaFkfwms8yUEN
OKeoyByrAF1JTs53BzkpQT16AW9ENXxQk3C9H81JaQvmc3pz1MPCbJWCr1aj
EOO2JKdsOAmy1zkZrFD7BQtyepK1Fn+BwHU7HRM7OSm5XJM1x+c1QvfAkdYU
WS6q8PAKh1+rm8D7ru6nwCNclGzSjh4x7WbwbZ3be+AZFyVJ/+qUeKwFZv+6
YDT5k6332cRJzxs0CJRYlujf2w+eRwJKT32NBwvPym2njPtByeW8lk1E/JT5
yhkesnaiIyBQ/tb8ZXEiqHClx19tHYIHT+G9b3MCGCkOeK5NGARaif6ys1QC
SD8eVi51GYCdZ0+eXVgdP6Uesl6yH7JfUi9ST1Jv0g/SL9JPkg+SH5Kvf5Wf
v/n7T/X9m59ZH2Q8Gw37MTfvaqzA6jcg7tTTYnKoH79EFX+/mx0NduNH7tCO
9yPtzVl+oRuJ4JMirGe8rx8L45VmPb99Hg/XZKedOdyPa+7z7Rh8Gfbn95dd
SDG3b6xlATlW3Ju58snwMO6c5jkRn8SCHxeKxPBaPzKd12XZPUoH2mFVBjxl
32/27Y5pqcyFrJxAvtOf+zFmEc9JScEisIwfM1tPZ+8n9+FO8ptSKAoTXnxW
agDpArufnN1SCWUrA05kGQ/ginnTO1fn1IDD1rfL9P0HcGRPo5vQngbIq1lh
Mdo6gPI1ZzbznGmCpY6S92rXDaJU3TXFt0tagBFsmTxxdxDr2hfyTKunwfLt
S+aZ1A7imbHjn5Z7tUGJ6WbPCeUhTJoH26dp0yFCITRJ/vUQxkdMHr23vBPy
hnd9+CE8jF86lUQPCXSz/dz7RcFpGINt1XZ/YN+Pyf7J5+T7U9Z/YyoIZ/rR
rImXZrA0CUPE2w9n2PWjl7v/u4H4DGxRPhQ94tvPPvdFhkxKfqD7WIJgbVo/
RhisWTVwpQjHbY209Hr7sVby5yH+X6X4ouC+sqzcAD4K6ma9ta5Es369uhOm
A5jZ8pBVxqpBI3rQ5pnBA2jf+PHgY9MGzI2flibbOYBpWy1nWJk3oeDpibaI
DYOY/71gOn1+Cy7+ZRcWytbvpMit8FXZNOS/6D5NpHoQnRdYdKpdbUNSP1Jf
Un/Sn4S7oqtmSw6hH0oZmse0Y+dQjuOh40PYtbniSjeTjvu6yyVj3gzhEmMD
97rlnRj12Ey0nTmEY126leonuvD97Ge30jcO4yK0ebnUtxun+Xqfnu08jJpB
r2Y+KmKgtdEjVkDhMEqdtLriwsf6w/O0PnGzo2ksJPkh+SL5I/kk+SX5Jvkn
80Hmkcwrmee/5fU/naf/1zzsc8y7bm7Afn/XzBlDilG4rksi8MieYbwnG9Q0
7Usgnr8e1jS0exgvmBo3rJpzC0/8XMCraTKMQjdOhRWvS8KOkxkDOpbDWKt1
yc8pJP3P+inMM3UWKlXgZflRYOHEMMr+ctpmxlMFW+9IRs3JGcZLzUev3C8p
hcIT0srT9w3jG2c3uiY9CpwWOcvvMBtGC+4DVye2pcCdyIrE2FvDmGIY5LA4
ORuK+MXbd/gP4+wdXLtSfAunrEfuR9ZDvk+u/zw42J35YBi5Hy84/u18HlaE
DC/UjRtGo+F7fXufFmPUmZSIw63DyPzwZq5vZ/mffus55sg4NlQiWT/ZH6kn
qTfpx9/0/qf1Tr5ePr0rk5uiW0pb7Dh7CR5qVgqxvnNTm2P5RoY9AkA+bUFE
+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
/JF8kvySeSPzSOb1b37/L2Ksd18=
       "], {{{}, {}, {}, {}, {}}, {{}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
            153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 
           166}], LineBox[{179, 196, 197, 205, 206, 219, 220, 221, 222, 223, 
           224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 
           237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 
           250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260}], 
          LineBox[{266, 273, 274, 300, 301, 318, 319, 320, 326, 327, 328, 329,
            330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 
           343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 
           356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 
           369, 370, 371, 372, 373, 374}], 
          LineBox[{380, 405, 406, 416, 417, 418, 430, 431, 432, 433, 434, 435,
            436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 
           449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 
           462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472}], 
          LineBox[{505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
            517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 
           530, 531, 532, 533, 534, 535, 536}], 
          LineBox[{555, 556, 557, 564, 565, 577, 578, 579, 580, 581, 582, 583,
            584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 
           597, 598, 599, 600, 601, 602, 603, 604, 605, 606}], 
          LineBox[{624, 625, 626, 627, 628, 641, 646, 647, 648, 649, 650, 651,
            652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 
           665, 666, 667, 668, 669, 670, 671, 672}], 
          LineBox[{679, 680, 693, 694, 706, 707, 708, 709, 710, 711, 712, 713,
            714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 
           727, 728, 729, 730}], 
          LineBox[{736, 759, 760, 761, 779, 780, 781, 782, 783, 784, 785, 786,
            787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 
           800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 
           813, 814, 815, 816, 817, 818}], 
          LineBox[{824, 847, 848, 849, 850, 863, 876, 877, 878, 879, 880, 881,
            882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 
           895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 
           908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920}], 
          LineBox[{932, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
            948, 949, 950}], 
          LineBox[{967, 968, 969, 976, 977, 978, 983, 984, 985, 986, 987, 988,
            989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
            1002}], 
          LineBox[{1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
            1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 
           1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066}],
           LineBox[{1070, 1071, 1072, 1095, 1096, 1097, 1098, 1099, 1100, 
           1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 
           1112, 1113, 1114, 1115, 1116}], 
          LineBox[{1122, 1127, 1128, 1133, 1134, 1142, 1143, 1144, 1145, 1146,
            1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156}], 
          LineBox[{1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
            1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 
           1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 
           1228, 1229, 1230, 1231, 1232, 1233, 1234}], 
          LineBox[{1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
            1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 
           1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296}], 
          LineBox[{1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
            1323, 1324, 1325, 1326, 1327, 1328}], 
          LineBox[{1339, 1340, 1341, 1342, 1360, 1361, 1362, 1363, 1364, 1365,
            1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 
           1377, 1378, 1379, 1380, 1381, 1382}], 
          LineBox[{1388, 1395, 1401, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
            1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 
           1428, 1429, 1430}], 
          LineBox[{1451, 1452, 1453, 1460, 1461, 1464, 1465, 1482, 1483, 1484,
            1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 
           1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 
           1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 
           1518}], LineBox[{1531, 1532, 1537, 1544, 1545, 1562, 1566, 1567, 
           1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 
           1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 
           1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600}],
           LineBox[{1606, 1628, 1629, 1636, 1647, 1648, 1649, 1650, 1651, 
           1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 
           1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 
           1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684}],
           LineBox[{1707, 1714, 1715, 1720, 1721, 1722, 1723, 1724, 1725, 
           1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 
           1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 
           1748}], LineBox[{1754, 1755, 1770, 1771, 1772, 1784, 1785, 1786, 
           1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 
           1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808}],
           LineBox[{1814, 1815, 1829, 1830, 1841, 1842, 1843, 1844, 1845, 
           1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 
           1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864}], 
          LineBox[{1896, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
            1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 
           1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 
           1932, 1933, 1934}], 
          LineBox[{1950, 1951, 1952, 1959, 1965, 1966, 1967, 1968, 1969, 1970,
            1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 
           1982, 1983, 1984, 1985, 1986}], 
          LineBox[{1992, 2010, 2011, 2018, 2019, 2031, 2032, 2033, 2034, 2035,
            2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 
           2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 
           2058, 2059, 2060, 2061, 2062, 2063, 2064}], 
          LineBox[{2078, 2079, 2080, 2087, 2088, 2093, 2094, 2095, 2096, 2097,
            2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 
           2109, 2110}], 
          LineBox[{2122, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
            2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148}], 
          LineBox[{2153, 2154, 2156, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
            2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 
           2190}], LineBox[{2198, 2199, 2200, 2205, 2206, 2207, 2208, 2209, 
           2210, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226}], 
          LineBox[{2232, 2233, 2234, 2248, 2249, 2265, 2266, 2267, 2268, 2269,
            2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 
           2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 
           2292}], LineBox[{2321, 2322, 2331, 2332, 2333, 2334, 2335, 2336, 
           2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 
           2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 
           2359, 2360, 2361, 2362, 2363, 2364}], 
          LineBox[{2378, 2391, 2392, 2393, 2395, 2396, 2397, 2398, 2399, 2400,
            2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 
           2412, 2413, 2414, 2415, 2416}], 
          LineBox[{2425, 2426, 2427, 2432, 2433, 2434, 2439, 2440, 2441, 2442,
            2443, 2444, 2445, 2446, 2447, 2448}], 
          LineBox[{2453, 2454, 2459, 2460, 2469, 2470, 2471, 2472, 2473, 2474,
            2475, 2476, 2477, 2478, 2479, 2480}], 
          LineBox[{2487, 2488, 2489, 2490, 2513, 2514, 2515, 2516, 2517, 2518,
            2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 
           2530, 2531, 2532, 2533, 2534, 2535, 2536}], 
          LineBox[{2557, 2558, 2559, 2560, 2561, 2564, 2565, 2566, 2567, 2568,
            2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 
           2580}], LineBox[{2610, 2617, 2624, 2625, 2626, 2639, 2643, 2644, 
           2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 
           2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 
           2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 
           2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 
           2689, 2690, 2691, 2692}], 
          LineBox[{2698, 2705, 2706, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
            2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 
           2737, 2738}], 
          LineBox[{2756, 2757, 2758, 2759, 2760, 2766, 2767, 2768, 2769, 2770,
            2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 
           2782}], LineBox[{2788, 2790, 2811, 2812, 2834, 2835, 2836, 2837, 
           2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 
           2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 
           2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 
           2871, 2872, 2873, 2874, 2875, 2876}], 
          LineBox[{2897, 2898, 2899, 2906, 2907, 2913, 2914, 2915, 2916, 2917,
            2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 
           2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938}], 
          LineBox[{2944, 2951, 2952, 2960, 2961, 2965, 2966, 2967, 2968, 2969,
            2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 
           2980}], LineBox[{3002, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 
           3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 
           3025, 3026, 3027, 3028, 3029, 3030}], 
          LineBox[{3036, 3038, 3055, 3056, 3057, 3070, 3071, 3072, 3073, 3082,
            3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 
           3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 
           3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114}], 
          LineBox[{3120, 3121, 3122, 3130, 3131, 3136, 3137, 3138, 3139, 3140,
            3141, 3142, 3143, 3144, 3145, 3146}], 
          LineBox[{3152, 3153, 3154, 3175, 3176, 3196, 3197, 3198, 3199, 3200,
            3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 
           3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 
           3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 
           3234}], LineBox[{3240, 3241, 3242, 3255, 3256, 3275, 3276, 3277, 
           3278, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 
           3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 
           3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 
           3318}], LineBox[{3324, 3325, 3332, 3333, 3334, 3339, 3340, 3341, 
           3342, 3343, 3344, 3345, 3346, 3347, 3348}], 
          LineBox[{3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389,
            3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3399, 3400, 
           3401, 3402, 3403, 3404, 3405, 3406, 3407, 3408, 3409, 
           3410}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{2.000000000000005, 0.}, {-0.5000000000000004, 0.}, {0.5, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], PointBox[{{0., 0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-1.5757574142114161`, 
     3.0757574142114206`}, {-1.0757574142114157`, 1.0757574142114157`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzkunkwlu3/BmwnqSiVSippkaKNInyuiCJJQiqVZKtU9vZIlmyRrVDJvq/J
zmknkX3f991t35fX/cx8e2dO807zzPN95jffefunOea4zvP8fI7j+Fz3dd3u
XWqP5DWoKCgomlZTUJD/53hOr31BYAax//X/CMIwuKdSx+71ZCD+w2MYluLv
biBfbzbd0+5jO4ROmpZ8IfOeqVtLfZcx6TLNVjL/dvbg65CQPnRTe+cTMj9I
l1MbuowNW6eOkvmCQ1LU3350IWXxs3ZkXmKDCnvsMoZEtfNk/tIid0NyTxuK
u5TjQubNJJT4UpbxA9nx/WSe8mpui+W6JmTnGRJI5mnS9Zqsl/GMiOZffGnV
e8UPF6oQ0XjIk8w/vfPR2X0ZM7DGLMgs818/dW6S21yElBcVHMm8jHBO+uVl
HE+ZRUlef0H5uHDH3mR0uaPPmsyz/nx5fmgZa8fM05N5xU1Lg3F0DhAVMPKM
zBceqJwwXMYxMpZ/8draz+SkDTNA/rC7P5k3jF7FIbGMa7Ie3CDzST5Tmze+
KAGtqy9tyfxRf5Vv65fxpl/P1pH5vGiZNBrRGqiJO/qXfq3KKVcpl3HTJZO/
6vvwTmfP+FIz2K+7FEnm994t7xhexkMGKWPk/nI+CmeNtLRDVfa+EDL/rk3h
8vAyFmRYe4W8nm2VpFpvRje83lr2jswzpRxl7FnGclLEdTJ/mpPFosWnH9iU
lkzI/MUnr5nJWOuDJzWZv1kcur/mDQk8YzaEkfkEhvUbyFj/KN/2UokptMP8
9BVyfoqNpb3IeM0DP1FyfnR4Hp1XVJxAMgd3cZD5vWq7Dykt458TBmvJ/E3m
cpNa9TG0+lsAE5l/Q5m2qm4Zr/PtOE/mjXq2Od8wHEGGWmv2knm+JTuum8tY
wZn6BJn3fpPBkE1PQo1hx5dklnmV+x5eZPzJo4aNzA8elrlWuLcftSuwHSev
3/16QyoZUzLQypN50XV3KSokutGGwO+KZN6KavZx5TIO/LaGmcw/9qH3aVBv
R+63TY6SeRGjexualrGOmOZVMr/9bJXYD/pmdJfn5W0yP3fs3fDPZUz1IO2v
/iQT4VCdRDU62nWDi8xnhlapNixj9sj9G8m81ZfVvDX0xYjGhIeRzOdzsLPW
LuPqb0rk8yCHTyedRI+QppDGDTJv+oBgmV3G9880ipH5r/T73C8cyUv7VdUh
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
TwZU1UPstYGsvuBYlHd/slRqTROwnR8L49+SjK5VJ5meJDWDksPU6y82Gciv
f9atNbcFlOzyrZjnc1bsj5+P18ep4MHhp90K6w0CXMf3FyCmt9FzLxdaYfuT
cBcVw19IdmYtb6V1G6jeTuSh1SxFqysrL1WtaQfJEb/1DB7liPW026phm3YY
Np72Y6+oRCaJj2XiKDuApn5qn/uGGpR+emdvg34HGJ+RirC/UoeK1lEcLmjq
AFGrQK0XXg0r9MP1XUvMlsZodoJk5gR/WFAzovrwmOdsdyfw9qpnil9vRaGs
T4StVLsgt57lgFVHG2JInKMxKFvOZQKl/E7dDuRqe6CvRqQbXniGXXJf6ERF
zgcvWfl2g+EXG+KFXTeKKqUUekXdA0UZnhw/2HsRIRHil3qjB97StvSbRPSh
VOuDmvUxPWD2Pv2eyukB9EDI4fID6l5wsw+4sbVyEF28UqZjcLEX8mbeZyfe
JSFlcRer4bu9vz9P8Pzg+fpv+/9/7ef/ul8Jh5+K+NypgPrvuyK+2dWAJGNP
aKxgOViPl6zp5q0GDq3ih1U0ZZDyUtsosa4S1svafnv0IRXKZBzhUFI+7Hd9
Ws77MhbS3px1nRbPAZ/o07N+TIFw967jNpn4DFjNWOAqcmV57hLLeOI1wyFA
n2GT5ZkquMVrIb/xYD04LUwF8awtAV7pkVWX8suB0+oHSYOmEOa/G39vLiyF
4/o88TUZeXDBbIRUUFIMKikbgyIVsuBq9ZBPNn8hbKtqMFtFWwOXU9V437Q2
gvGs4QHNCSvg0qM3iW1Ohrde68KsdJ2Qod4pUsi9byvqwXl8vSEppvVmfC3M
h4qeDbnYAk6GdlzKF+phkcb6+WRcKzhuYC61/NEAs5bXdl/b0w6Wzzp0XvA2
wcmLC4esl9/3SZFRD0++aoZVcuGrItd3we5G+703brRAyvMArimH7hV6UeU3
NDkIt//+fmLvwrNEd/pWmHxnJrlx+f2P80xT8K6gVjA26djnQdkPW2Lip8ZF
24C4UJhvgQZg1Vl63w2FbSA3LchdYzq0wh/cP1xPXG/cD9wvPB94fvB84f7j
/v3bev9TPXF/2HgfzrZx9aMM2WeSFNKdUH3DuL1/rB+d3ZOTFP+rAyanQ3bw
5wygOwLqueevdPx+/6W8lUV5yqwOXivccPQxmEKaDlEhHdT1kOH57KFUwyTS
E2JNN/pQD+fPOtc0sfYhmdujURqUXSvWZ+m8l1RZ1YuU48UPBaMuOHjepMmK
qgeVRPCUU5p3g/9lxUx5im6U/DLdI0a2ByrdN4a8l5hENwLnmd8cawDJ8Mjn
8sv3ienwTudW1A4yfNeniJ4hFLoufaMzbzvQmYQ7USyS0JPrY+dVfdtASLY8
4JztMFJ/byIgxdEGReK7XWbYRtCDaPXKC16tIPhVkmVD0AhySvbZ/3BvK5je
EeFwPbn8/hwpeDjkWwv42NMnmxSMomPvuAcoz7aAh+Qz2Uc3xtARLlnONagZ
NOPuAcXIGGoeLAp0mm4C2sYa+6MW40jnaZm2i1ATPEnKFqTbOoEacq9rrLdo
hBRZXvHnkRPoYNXdz0w1DSv6w/XE9W4IiqzzKmtE1zjTj15PJMEmnZkBz7Od
aMLAl6c0rBdGPSTrD39qRwwJxrvHtvSDaIuwPctiK5qVEjJjcxuAyVMNVKIP
WlAW99DZ07uGQHE4uYdGofH39wN4fXj9eH94/7g+uH64vrj+uD+4f7i/uP94
PvA843nH5wHP79/N6z/1A/cX98fH7cV5Qp6a6Nolv4P5UBfaqMmy6xknNfHG
+lxFXkEXkrrd9jZgjIqQD209OqfTjZrPWrwRzacmOp/r24W1daBc9yuhFmI0
REyEZtSpmHYUYFXueomB8vf76GQCH+uJw5REUOfc+P0dpBWYuU8nRNuRiphN
2aHDW9mDcvzHXoQdoSLSA08yBMr2obsuxhT61ZREwP2D9Bq1/Wju+8TxxNeU
RAjDnLa20eCK83Ce60zntF0aDZHMukRx910beuTV+55VlJYQbm0OKXvTilwy
FQ1c0mmJF9W3Hw47tiCT7K0e5hJ0hKVR8mZD7WZkLN4++bSQjuCgUopSrW5E
qY1Xn61SpCcQISYXdK9hRX14/Xh/p18Olwf60hOPqXNoHELqES3fDe70UXri
VetVQZaJut/vzxK6vRX6NXUr9Mf9wf37kz//th5/t79To5kcnhcpiJCX7YVm
YQlIfY5xq89uCkJic+HS7sRUlGXjLVYzuQRBnxR4y79koNP2131FNZbgWnHv
At/RPGR+YGmeuX0RxsrvVPFzFaHu2+aqT+4tgs/nGTPwK0XtG6wfZz+jIEhu
o5Z7Er6jR6OJ3ULL7+/q3K1Guje+oV2uWrzmtJSE12e7/ad2RCJX9ropxZYF
8M3ZXK5nVIkifh0W335zAcQ4bd2br9Si3U82BlW3zUNe0v/T3pdHUx21/5qL
ikyRBo0aSNE8eU6lUiJlbKZZhpRSJEmoTJExUpSEUIRIeczzPGc8puOYOTg4
JffcP26/tbZ1V+td7+/9vfdd6/75rO/ez/5M+5y9j4PKXD+VRqRJiru4mfyC
3QVfw3XeUFGlp2Bmz+RPqB1I2HrrXSv6rane6uP5E85Qz4YLRLXj7r2v+Ucu
cVIWmf1auk4jAmfvt9GyzOGkHPAdfJMq8B6DVBc7dXVMQII4w6h5Sz9yT/Ec
Pr6IBTrKM+92VfWioUZtUqIOC/gixlDTogftuKa4FJdwUYIWqe09UBKCS9Mv
6O3U+An6VxS2IC8NP443rm4S/Ak3Vzb+rjjXiVCkHG5TwgIvqfPch5LpWA5+
PxY+Z0H2gdR9iyW7p/Un1yfxmewPFp9nyUUJq04XNZz9FjfJJCTPK+eiZC+q
VzF5G4w7v7utWCnLTTFQlxb1vR2EL/fxHtltz00JcvGUYvW+mrY+iY/ET/Ij
9SX1J/0h/SP9Jf0n80TmjcwjmVcyz2Te/9F8/i0/ZB7+WX8oLmEhq7mpeM65
zH7hui48atgXsPETFU+LrpVydqJjhpaE4PtzLbhqe0KuZ3cnPvWOUz1X1IBX
eIZorJpuvJHfO7Hw0w9cs/h3adGz3j/fB83mett87WMlxi1lHCihMnG4P2WV
okMVtowlH5iIGkOXx7s/BndV4txrcVXena3Yf2XleX5PGhb21cmLWrejWXf8
gVDVDmQ2O82XXkTDD6lXLK6JtaMHJdM7Kb8Tg7t3DGn3teILOSeuFfZdmHl+
rsG72hack9ac8lqlBx2X5133rqXiwGRmvpxkH5adyN9xpK4Zd7Rtlylg9GPF
ZG5FtFwTqpz1/7DuwCBaHXt/SbSpAWvmOUbJig/hjolLQZvD6vHQAqrfOdoQ
Co/y2Is71+FrozCTvCQGcuy3n/vZ8QdqP4kVqXAbxiOXzTJYPrVIHyozpV0c
wa3V2lI/vtSgXhifHfeuUczw2iSu3lWN7z5oHFkrxsSB4NlxJ2Srp+lF6kPq
R87f+iI29JBHNd7c1BT4W7sfM33viiqXVvz5fim5PomPxE/yI/mT+pD6kfqS
+pP+kP6R/pL+k/kg80Pmlcwzmfe/5flv+sqv+7ZF0KcYpJrFDMU0qaj7Pt/8
g1kh0I23WAgqNqPPrH1cK3fnw68Tx6QOZrDPaQkqJzrulsGO81Il+ZytGEst
itO1r4AOiaxoueQ21Kt97rWDKwmpXlGB+jc/Y1Co3gw7N3OILt66Z0NVEUac
4qwsqnuFxv5jOSOPc/Ft1/qLsCsL5m/c5antW4cBGj1ff4qkgv6Ds29fWtfg
pG337Di7eChXSjy80LwSt3VsWWC46B2Y3jj0tNKqDG8pWVrdFonCwnwRuN6R
gallPgt7b8dh+tHx7m+936fhIZ+T80l8JP6ckNqbVL0q4JO1t12h1YFuyw7Z
rxWrgRAB25X+wzSceVK6a3NCLaQnJAa6vqDjJtVTwVxQB6fXy3f93t+NCp8r
VvvE1ANvNe2Y61gPLj567ufo3EY4MrtraW1kH/5c/Fty2ZkmUCzfdKL50gC6
5q2t8clr+vN5EMmf1IfUj9SX9JP0m8zD3/z+d+thWxmXp+TQgW9pMTPUqysh
Pn6qulOHhlxL75UcmawAt9n13HJy7P243tGpWrECTJs63ohvasfQqebbmo7V
4H/FqzGsvxVT3wvbj+rV/rm/79fqmL2iLh2Wuqm8Ljo9hnq5NmHxBzOmPeeb
9yB62JWOu2UiEu4xy0DrPt/DytEulGryHtetL4X7e2/cK77Qg5bRz4Oq00vA
+hIGttT04q7lT+8ZCReDx10eud9H+7GWu+6Jk2chjM/RuiaWP4AvtmuUHN1R
AD9EdOVE3g7iw8we9WTefGg69/TnvPND6B4SOaNoNBfaRU1YmUsZeCTz+6xk
zlzI1Iq2zW1h4C7BwybJS3Lg/jI1t6VvhvG03TG54uPZIHj/0PLS8yMYs6RS
Zdg3C2Y9t2LOWjqKlt7mM+lDmXBQMUfVqXkUnZScCjxOZoLst8qeta+Y6Gu3
oaOhKGOaHuTzlo32zqbR7HO6SUFf07Y6OOvIlH5xl4pUU29BXfZ9v9vavz3F
twnf/Apf+m1fE4jcqfw8qNaAvZ+XKiQoUoF+Yd/MduE61Ljccaf2cAtIRD7b
Fd9Sg85vK291XW2dho/Ez1K4m7MutArPhyQKH/JrgxkvUq+E367A6Bs0U8/C
dqC0XF20WqMMzWaddcnlpcE+8dZSTaNiDLshfY2+rxOshkfUHqjlY306I7/S
kQ77ZNRMRw5mo8uioBvXi7vgVVS3wueT6fjt4aqziVI9ICIaoHBn1nc0Gnji
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
wCs2MurGUA2mr9cwjyudABt+S2NxkzrkOS976FPoBLSXhKg50xuQaxWr3tZ6
ArJ5NxyruNCMyTbfZGWOT4CHtmuyxQAVQ0MeVzjOmwCpm+L3NFPY97G31U2d
jeOw1PUqz1f2+f+p3Kr91qHjcOpWqHDKORpaDTInLUzHwXq0/7T5Bvo0PUi9
SD3J+WR/cn0SH4mf5EfyJ/Uh9SP1JfUn/SH9I/0l/SfzQeaRzCuZ57/lteh5
m6b9QSZy79eV9tPrwz5nUdmQBCbuqQ+ylOrtxa18E+/Oy4zhO6u11zfY/df9
3POimsg79j1p6bKyEo/8MXSZkKi529UzbXy7TqwK030UI+bctMte3I9nFJc8
NGsYwWdPYwPf9PZPm0/216i0NtZbO4JmL+fcM04fwI7YeeO2E8N/Xr9JvCSf
v63/t/4LY34JXeFiAHfNjB3zU9Pwh0P+Rm1OBmRvjnwe+fobrjm/nM+WgwGn
vZ4cWYzxKG3C0rRg11xx/o0WpvH4wipH7hy7Tl4reuRoeBzmuSiVHWbX7Stk
J0SZn7Fn43bprez6p/txz9q9n9E2ND3Gd2oIxPjnGfA5hOHPszHH7/Gy+weq
H3+nnIuc61ynOPkZwNkp3bssrxjp8mJheUsYcFJu6ibHUTo6/RzxLGTXWzxs
tj2xpKP1gHp/EbvO+KL+WyiEjiICJqn9ixgQps4dIRvWhjfrOhQo0gx47lI5
+8qvdox4Huu4lj1+aOOv/LcaNByJF5eNZtc7L8+53BLSiTd7D/EVs+tLz/MG
YqLpmJKSIfy/67JG5RZN9vu1ioPgz/JZDPgY9rRwdHY5+34v+sRBkM3309e6
U/GVqMF8GTpfmAGLZr8NyjhTg4JCETrPRNn3m697F6/jq8M3Ijv9aOIMeJn8
QtMvugH5OTWMpCUZ0CoURuHVbca9dfSS7VIM8K1PYCRNUVH9FW/25oUMQL3R
JQzN1mn6kfqS+pP+kP6R/pL+k/n4m1//bn3+Wf//0bz9LS/GLUrzt11nglvu
3JLzbql42/aRg5AhE+bSs/ZZ/8zA3XqsZo7zTBAUpGTIXM3BxmUZH3RuM4Fp
07Hx3Lo4vCWtMeh2hwmpN4wVGhgvkddKdWYguz6QUEApCQ7ARbYcNrns+vDT
3lWKi31x3cXSyVLOUajmoGR/lBhA2g4OLwd1JrwRcFzJx1mKn/of7XfZyoT2
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

       "], {{{}, {}, {}, {}, {}}, {{}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{118, 119, 120, 127, 138, 139, 140, 141, 142, 143, 144, 145,
            146, 147, 148, 149, 150, 151, 152}], 
          LineBox[{159, 160, 161, 168, 169, 185, 186, 187, 188, 189, 190, 191,
            192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 
           205, 206}], 
          LineBox[{232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
            244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256}],
           LineBox[{262, 276, 277, 290, 291, 292, 293, 294, 295, 312, 313, 
           314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 
           327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 
           340, 341, 342, 343, 344, 345, 346, 347, 348}], 
          LineBox[{354, 355, 370, 377, 378, 382, 383, 384, 385, 386, 387, 388,
            389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 
           402, 403, 404}], 
          LineBox[{434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
            446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 
           459, 460, 461, 462}], 
          LineBox[{468, 469, 472, 486, 487, 488, 489, 490, 491, 492, 493, 494,
            495, 496, 497, 498, 499, 500, 501, 502}], 
          LineBox[{508, 509, 523, 530, 531, 536, 537, 538, 539, 540, 541, 542,
            543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 
           556, 557, 558}], 
          LineBox[{578, 579, 580, 581, 582, 595, 596, 597, 598, 599, 600, 601,
            602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 
           615, 616, 617, 618, 619, 620}], 
          LineBox[{624, 625, 626, 638, 639, 648, 649, 650, 651, 652, 653, 654,
            655, 656, 657, 658, 659, 660, 661, 662, 663, 664}], 
          LineBox[{686, 687, 688, 689, 690, 691, 692, 693, 699, 700, 701, 702,
            703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 
           716}], LineBox[{733, 734, 735, 742, 756, 757, 758, 759, 760, 761, 
           762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 
           775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786}], 
          LineBox[{805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816,
            817, 818, 819, 820, 821, 822}], 
          LineBox[{834, 847, 848, 855, 856, 861, 862, 863, 864, 865, 866, 867,
            868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 
           881, 882, 883, 884, 885, 886, 887, 888}], 
          LineBox[{894, 895, 896, 914, 915, 916, 917, 918, 925, 926, 927, 928,
            929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 
           942, 943, 944}], 
          LineBox[{948, 949, 950, 960, 961, 963, 964, 965, 974, 975, 976, 977,
            978, 979, 980, 981, 982, 983, 984, 985, 986}], 
          LineBox[{990, 991, 992, 998, 1012, 1013, 1014, 1015, 1016, 1017, 
           1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028}],
           LineBox[{1034, 1057, 1058, 1059, 1073, 1074, 1075, 1076, 1077, 
           1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 
           1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 
           1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108}], 
          LineBox[{1114, 1131, 1132, 1139, 1153, 1154, 1155, 1156, 1157, 1158,
            1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 
           1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 
           1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188}], 
          LineBox[{1203, 1204, 1205, 1214, 1220, 1221, 1222, 1223, 1224, 1225,
            1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 
           1237, 1238, 1239, 1240, 1241, 1242}], 
          LineBox[{1254, 1255, 1256, 1257, 1271, 1272, 1273, 1274, 1275, 1276,
            1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 
           1288, 1289, 1290}], 
          LineBox[{1296, 1297, 1311, 1318, 1325, 1326, 1327, 1328, 1329, 1330,
            1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 
           1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350}], 
          LineBox[{1354, 1355, 1356, 1361, 1368, 1369, 1370, 1371, 1377, 1378,
            1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386}], 
          LineBox[{1407, 1408, 1409, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
            1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 
           1434, 1435, 1436, 1437, 1438}], 
          LineBox[{1444, 1451, 1461, 1468, 1469, 1481, 1482, 1483, 1484, 1485,
            1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 
           1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 
           1508, 1509, 1510, 1511, 1512}], 
          LineBox[{1516, 1517, 1518, 1534, 1541, 1542, 1543, 1544, 1545, 1546,
            1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 
           1558, 1559, 1560}], 
          LineBox[{1568, 1581, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
            1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 
           1604}], 
          LineBox[{1608, 1609, 1610, 1615, 1621, 1622, 1623, 1624, 1625, 1626,
            1627, 1628}], 
          LineBox[{1632, 1633, 1634, 1642, 1643, 1646, 1647, 1648, 1649, 1650,
            1651, 1652}], 
          LineBox[{1662, 1663, 1664, 1665, 1679, 1680, 1681, 1682, 1683, 1684,
            1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 
           1696}], LineBox[{1700, 1701, 1702, 1711, 1712, 1713, 1714, 1715, 
           1716, 1717, 1718}], 
          LineBox[{1724, 1725, 1726, 1740, 1741, 1745, 1746, 1747, 1748, 1749,
            1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 
           1760}], LineBox[{1773, 1774, 1775, 1784, 1785, 1798, 1799, 1800, 
           1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 
           1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 
           1823, 1824}], 
          LineBox[{1840, 1841, 1842, 1849, 1855, 1856, 1857, 1858, 1859, 1860,
            1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 
           1872, 1873, 1874, 1875, 1876}], 
          LineBox[{1880, 1881, 1882, 1888, 1911, 1912, 1913, 1914, 1915, 1916,
            1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 
           1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936}], 
          LineBox[{1942, 1943, 1950, 1957, 1958, 1959, 1963, 1964, 1965, 1966,
            1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976}], 
          LineBox[{1994, 1995, 1996, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
            2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 
           2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034}], 
          LineBox[{2040, 2060, 2061, 2062, 2065, 2066, 2067, 2068, 2069, 2070,
            2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 
           2082, 2083, 2084, 2085, 2086}], 
          LineBox[{2092, 2102, 2103, 2104, 2105, 2114, 2115, 2116, 2117, 2118,
            2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 
           2130}], LineBox[{2136, 2137, 2155, 2162, 2163, 2175, 2176, 2177, 
           2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 
           2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 
           2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208}], 
          LineBox[{2217, 2218, 2219, 2226, 2227, 2239, 2240, 2241, 2242, 2243,
            2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 
           2255, 2256, 2257, 2258}], 
          LineBox[{2266, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
            2281, 2282}], 
          LineBox[{2288, 2289, 2290, 2313, 2314, 2322, 2323, 2324, 2325, 2326,
            2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 
           2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 
           2349, 2350}], 
          LineBox[{2359, 2360, 2361, 2362, 2363, 2376, 2377, 2378, 2379, 2387,
            2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 
           2399, 2400, 2401, 2402, 2403, 2404}], 
          LineBox[{2408, 2409, 2410, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
            2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 
           2451, 2452, 2453, 2454}], 
          LineBox[{2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2483,
            2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492}], 
          LineBox[{2498, 2518, 2519, 2526, 2527, 2539, 2540, 2541, 2542, 2543,
            2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 
           2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 
           2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574}], 
          LineBox[{2587, 2588, 2589, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
            2601, 2602, 2603, 2604, 2605, 2606}], 
          LineBox[{2612, 2613, 2614, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
            2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 
           2652, 2653, 2654}], 
          LineBox[{2658, 2659, 2660, 2667, 2668, 2669, 2670, 2671, 2672}], 
          LineBox[{2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
            2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 
           2721, 2722, 2723, 2724, 2725, 2726}], 
          LineBox[{2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
            2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 
           2775, 2776, 2777, 2778, 2779, 2780}], 
          LineBox[{2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
            2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 
           2829, 2830, 2831, 2832, 2833, 2834}], 
          LineBox[{2840, 2841, 2842, 2843, 2844, 2864, 2865, 2866, 2867, 2868,
            2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 
           2880, 2881, 2882}], 
          LineBox[{2886, 2887, 2888, 2894, 2905, 2906, 2907, 2908, 2909, 2910,
            2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918}], 
          LineBox[{2924, 2925, 2926, 2937, 2938, 2945, 2946, 2947, 2948, 2949,
            2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 
           2960}], LineBox[{2964, 2965, 2966, 2970, 2971, 2972}], 
          LineBox[{2976, 2977, 2978, 2983, 2984, 2993, 2994, 2995, 2996, 2997,
            2998, 2999, 3000, 3001, 3002}], 
          LineBox[{3007, 3008, 3009, 3024, 3025, 3026, 3027, 3028, 3029, 3030,
            3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], 
        PointBox[{{2.000000000000005, 0.}, {-0.5000000000000004, 0.}, {0.5, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6], PointBox[{{0., 0.}, {0., 0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-1.5757574142114161`, 
     3.0757574142114206`}, {-1.0757574142114157`, 1.0757574142114157`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6818794481731195`*^9, 3.681879470250151*^9}, 
   3.6819682842967896`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"S", "[", "b", "]"}], "\[Transpose]"}], ".", 
    RowBox[{"W", "[", 
     RowBox[{"-", "i"}], "]"}], ".", 
    RowBox[{
     RowBox[{"S", "[", "a", "]"}], "\[Transpose]"}], ".", 
    RowBox[{"W", "[", 
     RowBox[{"-", "L"}], "]"}], ".", 
    RowBox[{"S", "[", "c", "]"}]}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.681909751078945*^9, 3.68190977336522*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "i"}], "-", "L"}]], "+", 
       RowBox[{"a", " ", "c", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "i"}], "+", "L"}]]}], "+", 
       RowBox[{"b", " ", "c", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"i", "+", "L"}]]}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "i"}], "+", "L"}]], " ", 
       RowBox[{"(", 
        RowBox[{"a", "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "i"}]]}]}], ")"}]}]},
     {
      RowBox[{"c", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"i", "+", "L"}]]}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"i", "+", "L"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.681911410488577*^9, 3.6819115302604275`*^9, 
  3.681968290759159*^9, 3.6820578182246027`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"F", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "i"}], "-", "L"}]], "+", 
          RowBox[{"c", " ", "r", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"i", "+", "L"}]], " "}]}], 
         RowBox[{"r", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"i", "+", "L"}]]}]},
        {
         RowBox[{"c", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"i", "+", "L"}]]}], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"i", "+", "L"}]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"r", "\[Rule]", 
     RowBox[{"b", "+", 
      SuperscriptBox["a\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], "i"}]]}]}], ",", 
    RowBox[{"c", "\[Rule]", 
     RowBox[{"-", "\[ImaginaryI]"}]}], ",", 
    RowBox[{"F", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"S", "[", "b", "]"}], "\[Transpose]"}], ".", 
      RowBox[{"W", "[", 
       RowBox[{"-", "i"}], "]"}], ".", 
      RowBox[{
       RowBox[{"S", "[", "a", "]"}], "\[Transpose]"}], ".", 
      RowBox[{"W", "[", 
       RowBox[{"-", "L"}], "]"}], ".", 
      RowBox[{"S", "[", "\:0441", "]"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "/", 
      RowBox[{"%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "]"}], "2"], "-", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"1", "/", 
      RowBox[{"%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "]"}], "2"]}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", ".", 
   RowBox[{"F", "\[Conjugate]"}], ".", "J", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "-", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "/", 
      RowBox[{"%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "]"}], "2"], "-", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"1", "/", 
      RowBox[{"%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "]"}], "2"]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.6818804339956226`*^9, 3.6818805278279896`*^9}, {
  3.6818805904885736`*^9, 3.68188068938523*^9}, {3.6818807255973015`*^9, 
  3.6818807335607567`*^9}, {3.6818863693492713`*^9, 3.681886400319321*^9}, {
  3.681886448609396*^9, 3.6818864493413973`*^9}, {3.681911148431588*^9, 
  3.6819111610523105`*^9}, {3.6819116313052073`*^9, 3.681911631577223*^9}, {
  3.6819143670586834`*^9, 3.681914374232094*^9}, {3.6820782905511503`*^9, 
  3.682078291963231*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"Re", "[", 
      RowBox[{"i", "+", "L"}], "]"}]}]], 
   SuperscriptBox[
    RowBox[{"Abs", "[", "c", "]"}], "2"]], "-", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"Re", "[", 
      RowBox[{"i", "+", "L"}], "]"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "i"}], "-", "L"}]], "c"], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"i", "+", "L"}]], " ", "r"}]}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.6818806814697776`*^9, 3.6818806900912704`*^9}, {
   3.6818807260573273`*^9, 3.681880734435807*^9}, 3.6818864030813255`*^9, 
   3.6818864513434*^9, 3.6818865203245077`*^9, 3.681911167972706*^9, 
   3.681911422462262*^9, 3.6819115353677197`*^9, 3.6819116341263685`*^9, 
   3.6819143752771535`*^9, 3.6819208045868893`*^9, 3.6819682947883897`*^9, 
   3.6820782944713745`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"Re", "[", 
       RowBox[{"i", "+", "L"}], "]"}]}]], "-", 
    SuperscriptBox[
     RowBox[{"Abs", "[", "r", "]"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"Abs", "[", "r", "]"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.6818806814697776`*^9, 3.6818806900912704`*^9}, {
   3.6818807260573273`*^9, 3.681880734435807*^9}, 3.6818864030813255`*^9, 
   3.6818864513434*^9, 3.6818865203245077`*^9, 3.681911167972706*^9, 
   3.681911422462262*^9, 3.6819115353677197`*^9, 3.6819116341263685`*^9, 
   3.6819143752771535`*^9, 3.6819208045868893`*^9, 3.6819682947883897`*^9, 
   3.682078294508376*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"Re", "[", 
       RowBox[{"i", "+", "L"}], "]"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"Re", "[", 
         RowBox[{"i", "+", "L"}], "]"}]}]], "-", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], "-", "L"}]], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"i", "+", "L"}]], " ", "r"}]}], "]"}], "2"]}], ")"}]}], 
   ",", 
   RowBox[{"L", "\[Rule]", "Infinity"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"Re", "[", 
         RowBox[{"i", "+", "L"}], "]"}]}]], "-", 
      SuperscriptBox[
       RowBox[{"Abs", "[", "r", "]"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"Abs", "[", "r", "]"}], "2"]]}], ",", 
   RowBox[{"L", "\[Rule]", "Infinity"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6819170339292192`*^9, 3.6819170434947667`*^9}, {
  3.681920826912166*^9, 3.681920837037745*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox[
   RowBox[{"Im", "[", "r", "]"}], "2"], "-", 
  SuperscriptBox[
   RowBox[{"Re", "[", "r", "]"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.681917047408991*^9, {3.681920810267214*^9, 3.681920838505829*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"Abs", "[", "r", "]"}], "2"]]}]], "Output",
 CellChangeTimes->{
  3.681917047408991*^9, {3.681920810267214*^9, 3.6819208385448313`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Inverse", "[", "F", "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"J", ".", 
        RowBox[{"F", "\[Conjugate]"}], ".", "J"}], ")"}], ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "/.", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "+", "L"}], ")"}], "\[Conjugate]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", "\[Conjugate]"}], "+", "L"}], ")"}]}]}], "/.", 
    RowBox[{
     RowBox[{"L", "\[Conjugate]"}], "\[Rule]", "L"}]}], "//", "Simplify"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.68206219762309*^9, 3.6820622128449607`*^9}, {
  3.6820625113490343`*^9, 3.6820625136111636`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"Re", "[", "i", "]"}]}], "+", 
          RowBox[{"2", " ", "L"}]}]], " ", "a"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "a"}], " ", "c", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Re", "[", "i", "]"}]}], "+", 
           RowBox[{"2", "L"}]}]]}], " ", "+", 
        RowBox[{
         RowBox[{"Conjugate", "[", "r", "]"}], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], "\[ImaginaryI]", " ", 
           RowBox[{"Im", "[", "i", "]"}]}]]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Input",
 CellChangeTimes->{{3.6820756066076374`*^9, 3.6820756191623554`*^9}, {
  3.682075673727476*^9, 3.6820757694199495`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Inverse", "[", 
       RowBox[{"J", ".", 
        RowBox[{"F", "\[Conjugate]"}], ".", "J"}], "]"}], ".", "F", ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "/.", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "+", "L"}], ")"}], "\[Conjugate]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", "\[Conjugate]"}], "+", "L"}], ")"}]}]}], "/.", 
    RowBox[{
     RowBox[{"L", "\[Conjugate]"}], "\[Rule]", "L"}]}], "//", "Simplify"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{3.6820627687437563`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Re", "[", "i", "]"}]}], "+", "L"}]], " ", 
           SuperscriptBox[
            RowBox[{"Abs", "[", "c", "]"}], "2"], "a"}], "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], 
             RowBox[{"Re", "[", "i", "]"}]}], "-", 
            RowBox[{"2", "L"}]}]], "-", 
          RowBox[{
           RowBox[{"c", "\[Conjugate]"}], 
           RowBox[{"r", "\[Conjugate]"}], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], "\[ImaginaryI]", " ", 
             RowBox[{"Im", "[", "i", "]"}]}]]}], "-", 
          RowBox[{"c", " ", "r", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", "\[ImaginaryI]", " ", 
             RowBox[{"Im", "[", "i", "]"}]}]]}]}], ")"}]}]},
      {
       RowBox[{" ", 
        RowBox[{
         RowBox[{"c", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Re", "[", "i", "]"}]}], "+", 
            RowBox[{"2", "L"}]}]], "a"}], "-", 
         RowBox[{
          RowBox[{"Conjugate", "[", "r", "]"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], "\[ImaginaryI]", " ", 
            RowBox[{"Im", "[", "i", "]"}]}]]}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Input",
 CellChangeTimes->{{3.6820758016387925`*^9, 3.68207611210855*^9}, {
  3.68207614689854*^9, 3.6820762195346947`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  TagBox[
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Re", "[", "i", "]"}]}], "+", 
            RowBox[{"2", " ", "L"}]}]], " ", "a"}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", "a"}], " ", "c", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Re", "[", "i", "]"}]}], "+", 
             RowBox[{"2", "L"}]}]]}], " ", "+", 
          RowBox[{
           RowBox[{"Conjugate", "[", "r", "]"}], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], "\[ImaginaryI]", " ", 
             RowBox[{"Im", "[", "i", "]"}]}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Re", "[", "i", "]"}]}], "+", 
              RowBox[{"2", "L"}]}]], " ", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "c", "]"}], "2"], "a"}], "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], 
              RowBox[{"Re", "[", "i", "]"}]}], "-", 
             RowBox[{"2", "L"}]}]], "-", 
           RowBox[{
            RowBox[{"c", "\[Conjugate]"}], 
            RowBox[{"r", "\[Conjugate]"}], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], "\[ImaginaryI]", " ", 
              RowBox[{"Im", "[", "i", "]"}]}]]}], "-", 
           RowBox[{"c", " ", "r", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[ImaginaryI]", " ", 
              RowBox[{"Im", "[", "i", "]"}]}]]}]}], ")"}]}]},
       {
        RowBox[{" ", 
         RowBox[{
          RowBox[{"c", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Re", "[", "i", "]"}]}], "+", 
             RowBox[{"2", "L"}]}]], "a"}], "-", 
          RowBox[{
           RowBox[{"Conjugate", "[", "r", "]"}], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], "\[ImaginaryI]", " ", 
             RowBox[{"Im", "[", "i", "]"}]}]]}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", GridBox[{
          {"1", "1", 
           RowBox[{"Log", "[", "\[Rho]", "]"}]},
          {
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "%%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "+", 
              RowBox[{
               RowBox[{
               "%%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", "2", 
                 SuperscriptBox["\[Rho]", "2"]}]]}]}], ")"}]}], "1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Log", "[", "\[Rho]", "]"}], "+", 
             RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]},
          {
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "+", 
              RowBox[{
               RowBox[{
               "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", "2", 
                 SuperscriptBox["\[Rho]", "2"]}]]}]}], ")"}]}], "1", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Log", "[", "\[Rho]", "]"}], "-", 
             RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]}], ")"}]}
         }], ")"}], "/.", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "+", "L"}], ")"}], "\[Conjugate]"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "\[Conjugate]"}], "+", "L"}], ")"}]}]}], "/.", 
      RowBox[{
       RowBox[{"L", "\[Conjugate]"}], "\[Rule]", "L"}]}], "//", "Det"}], "//",
     "Simplify"}], "//", "Apart"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"D", "[", 
     RowBox[{"%", ",", "\[Rho]"}], "]"}], 
    RowBox[{
     RowBox[{"-", "4"}], "\[ImaginaryI]", " ", "\[Rho]"}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "2", 
     SuperscriptBox["\[Rho]", "2"]}]]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%%", "-", 
   RowBox[{"%", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "2", 
      SuperscriptBox["\[Rho]", "2"]}]]}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.68206378617095*^9, 3.682063802526885*^9}, {
   3.6820639721105847`*^9, 3.6820639888355417`*^9}, {3.682076236577669*^9, 
   3.6820762563498*^9}, 3.682076492405302*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6820638046140046`*^9, 3.6820640060775275`*^9, 
  3.682076258006895*^9, 3.6820765029229035`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{"L", "+", 
        RowBox[{"Re", "[", "i", "]"}]}], ")"}]}]], "+", 
    RowBox[{"a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"L", "+", 
         RowBox[{"Re", "[", "i", "]"}]}], ")"}]}]]}], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{"Im", "[", "i", "]"}]}]], " ", "r"}], "-", 
    RowBox[{"a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"L", "+", 
         RowBox[{"Re", "[", "i", "]"}]}], ")"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "c", "]"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"Im", "[", "i", "]"}]}]], " ", 
     RowBox[{"Conjugate", "[", "c", "]"}], " ", 
     RowBox[{"Conjugate", "[", "r", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6820638046140046`*^9, 3.6820640060775275`*^9, 
  3.682076258006895*^9, 3.6820765029789066`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"2", "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"Re", "[", "i", "]"}]}], "-", 
    RowBox[{"2", "L"}]}]], "+", 
  RowBox[{"a", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"Re", "[", "i", "]"}]}], "+", 
     RowBox[{"2", " ", "L"}]}]], 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"Abs", "[", "c", "]"}], "2"]}], ")"}]}], "+", 
  RowBox[{"c", " ", "r", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"Im", "[", "i", "]"}]}]]}], "+", 
  RowBox[{
   RowBox[{"c", "\[Conjugate]"}], 
   RowBox[{"r", "\[Conjugate]"}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
     RowBox[{"Im", "[", "i", "]"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.6820765220319967`*^9, 3.6820765500726004`*^9}, {
  3.6820766004334807`*^9, 3.6820766166714096`*^9}, {3.6820768487456837`*^9, 
  3.6820768702099113`*^9}, {3.6820787729837437`*^9, 3.6820787746078367`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Rho]", "2"], "+", 
     RowBox[{"2", "\[Rho]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"Im", "[", "i", "]"}]}], "+", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"Re", "[", "i", "]"}]}]]}], "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{"Re", "[", "i", "]"}]}]]}], "-", "1"}], ")"}]}], "\[Equal]",
     "0"}], ",", "\[Rho]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6820769132733746`*^9, 3.682076943130082*^9}, {
  3.682077044243865*^9, 3.6820770522213216`*^9}, {3.682077439858493*^9, 
  3.6820774762705755`*^9}, {3.6820775580042505`*^9, 3.682077714267188*^9}, {
  3.6820787229468813`*^9, 3.6820787479003086`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Rho]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"Re", "[", "i", "]"}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "+", 
           RowBox[{"2", " ", 
            RowBox[{"Im", "[", "i", "]"}]}]}], "]"}]}], "-", 
        SqrtBox[
         RowBox[{"4", "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"Re", "[", "i", "]"}]}]]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             RowBox[{"Re", "[", "i", "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "+", 
              RowBox[{"2", " ", 
               RowBox[{"Im", "[", "i", "]"}]}]}], "]"}], "2"]}]}]]}], 
       ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"Re", "[", "i", "]"}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "+", 
           RowBox[{"2", " ", 
            RowBox[{"Im", "[", "i", "]"}]}]}], "]"}]}], "+", 
        SqrtBox[
         RowBox[{"4", "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"Re", "[", "i", "]"}]}]]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             RowBox[{"Re", "[", "i", "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "+", 
              RowBox[{"2", " ", 
               RowBox[{"Im", "[", "i", "]"}]}]}], "]"}], "2"]}]}]]}], 
       ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6820777179503994`*^9, 3.682078748532345*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", 
       SuperscriptBox["\[Rho]", "2"]}], "/.", 
      RowBox[{"\[Rho]", "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "+", 
            RowBox[{"2", " ", 
             RowBox[{"Im", "[", "i", "]"}]}]}], "]"}]}], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"Re", "[", "i", "]"}]}]]}], "-", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"Re", "[", "i", "]"}]}]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             RowBox[{"Re", "[", "i", "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "+", 
              RowBox[{"2", " ", 
               RowBox[{"Im", "[", "i", "]"}]}]}], "]"}], "2"]}]}]]}]}]}], "/.", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}]}]}], "/.", 
    RowBox[{"i", "\[Rule]", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
        SqrtBox["\[Pi]"], " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["5", "4"], "]"}]}], 
       RowBox[{"Gamma", "[", 
        FractionBox["7", "4"], "]"}]], 
      SuperscriptBox["\[Beta]", 
       RowBox[{"3", "/", "2"}]]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6820778856889935`*^9, 3.682078058663887*^9}, {
   3.682078093898902*^9, 3.6820781340481987`*^9}, {3.6820781690171986`*^9, 
   3.682078179034772*^9}, 3.682078396113188*^9, {3.682078439378662*^9, 
   3.6820784966349373`*^9}, {3.682078592720433*^9, 3.6820785979657335`*^9}, 
   3.682078630267581*^9, {3.6820787574588556`*^9, 3.6820787601750107`*^9}, {
   3.6820788133260508`*^9, 3.6820789308457727`*^9}, {3.682079243528657*^9, 
   3.6820792847740164`*^9}, 3.682079334006832*^9, {3.6820794441921344`*^9, 
   3.682079448753395*^9}, {3.6820795533033752`*^9, 3.682079793834133*^9}, {
   3.6820798267720165`*^9, 3.6820798904216576`*^9}, {3.682081792462448*^9, 
   3.682081819995023*^9}, {3.6820845200584574`*^9, 3.682084547859048*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
yCKOcKcZDlv1Ph2xJs72oX+9boazCSIW5x2JS+tui9WY4vqiwK69XsRyJa9t
zU3Q9M2S+SeEuNndzbnaCO1X5xY8f0DcOJHn42aEXuHEBzYRxOZ75pttMsK0
NkvncwxxOy3hjvBFiJeo1RSnEevECpmVnYNjuATNo4T4vU2WrKEBdB8aW80p
I6Yc9G/4qg+liKRl98uJJ/VFOk30Mf1IwizxHXd/dnvscj4N/xiJhdUNxL+r
fZIT9BCdJKG34jvxz1Yt/b0n4J1sPBPXR+zM5uNl6uBiSlLaxkHi6MtXeJ10
IJUmMaXCITZY2T57Shs5TyXiL00Riwmygs5roipXoj978Qgo4eu9pvsPIy3P
OFR5CbHibHCH2mHcyU9SqVhG3C46eiRVDVovJO4zVhOHKI3G2xxC60uJHX/F
iU27Xq9YdQAlRcaf/aWI5zZyWgL2I/5V0k3BjcSWPIcFplXJ53gJlsQW4iU5
uf71APuNhPfRncQ6s2EStD1oKDPe0KxMHJntofxeBc9pSZ/O7SH2bWAtZOyG
e4WEuKMqsUHAnqa/u8D7TuJdhAbx9vwvljcV0fPO2EHsOLGQRnZHngKqq5OE
MrSJR/9lj3zbgcAPEjalesQNv6tKTsljdZ3Ekp4L3PymWZodW6A8Tv9ldIlY
NXrE4c5mGIjcYn0xITbieSi6VxbRdkPxLEviXHcaz+uNeP0w7rqeDXd8PUnJ
W9JoL9U2b7TjrmfyabbhBqwXeLG1xpm7XqlF3SKSwE7zpUdciB0LvrkvkoDR
BaHxKjfu/CTb9XnEkZTtXfLGmzu+eXrkovWQ1lY7lh/AnZ/qw8Ndq6DuNrFN
7g5x57U+EayEZcLTZVn3iMXiumazliODs7gtNYQbD1wVU7QENatppRIPuPlE
lltnCZCT5fw44SE3X7zMlvn82BbCtIyKJqaUuTDXzId20W3NVXFc34jybp4L
x06V7Q8SiGlLPm7J5EUo38jyJUnc/s0b3j2mIH97wkRgCrd9f4G2/Qy12eDE
5wXp3HiBljFzijrmO6cs4Ck3bp533es3VanRIsA3m2vdjj6vUerpKWHrmVyu
U2f0ng1RXcVrj3s+///44iNtvdRHR6/KTxRwvTt2lW83tchp+8orRVxn7EtU
/kJtjeqeHC3mWkhB/gKTOl0e3m5XyvU5t68ODdS1g4dpg2Vc0z4db31H3bts
KtmigmtHj41apdTzKpm3eqq4jmStC8qlXjU+b3OpmmvVC2Ov4qgJdwW1v37g
2nfjqxdXqbT88h2GtVxTKGefd+3raru8quXT/92YnuJJ5Z0jPa3X+P/+f7eG
xVAlN7d8aWzmupP28nQO9dDJu+VaTK7ft72ffk0189qbWtPC9YsGx7631IBk
9u0jn7muyv0cWk9Nr0m0ffuF63gdfR8G9f0vXZ0DnVzrCU8LtlMH1s5TLOv+
/378HSnroi489HL13u9c/4nm6f1O3Wxr9aeoj+uAo689Bqma4Ws7lAb/v56n
8Z4cql1JXUX+MNdZdauv/KQG9VxLk+P8/3mJThmNUxsUe+xkxrjukRVs/0P9
cS7iRNpv7vMNTnpv9Y+6zP+IkuQU13a7dCN4cJKR9XfdLLfegtjmT+bharrt
dD2FTfz+XcICPjzx2DJ5fQ7Xay/eu7MQf0WyfvXzEfu+fNDRIwjpUZsfMYuI
xbRNZy4uxYmKzRwtAeJE24mI9mVIM88cfLGcmFIt9Jh3FRqUbfotVhF3/tYY
ylyNPws3964R5rYvLB0zEYZOTkaX73pue7UNU//WYXriaYumDLGOrG6bswSk
Plox/23mxvlinP0koR0rQ8/fxu3/uWn9IymkqD6tF1IkHs2Jv8+ShtadJ+96
qMSOh6rKMjcjaU36C2894hCx4FxNBdQOm+fL6RPfLlB2XKiIiTfSud3kexzl
yXYlxxpFaJqkZR65yB1/i4io/k78zkxNWmHN9a+Z4vDd0NiXEpJ1jdjUSeOG
riquCJoGXbxOnCL2+8xHVSR0SQYu8ycOjDr17OB+jPkn33K/S8w/7VeucgDx
n5KuHnrI3b+CNSYqh/Dz4mPb9gziyQ7+LJ8jGH80T+nSM+L+qc8veY9ist5q
5nsOse2z8B+3j+IfdgRxXhCv2PanL1ID/GKVObxlxLk5F/PeaWJDZ8/PTc3c
9fpMi2bpwMBok4fLH+JDz1x6k0/BMDJw//QMsW7Z1tyJU7jQMLrgGoUDSta3
/N/HTsNM9VX07XnERmI8E+On4SymURIjSKx4pylb2wCBnTb/yiWJKy6s0BI2
RJlRjr+AJnGiVvHMNSMU19se+6pFXLBRO63QCIVU2aXZJ4gf1967P2KErHWp
scf1iVt4pleeu4TolujngcbEK6aeUfYaw0UnoGuhBzGPT/2n/0yxWfX8vvlp
xDtrPYerLCCds2YO6wnxL2+2G68lJNa3vE/LJDYezNqhagmhv7p6h/O4+Tbu
UiyxxH9FR2z8S4g3f2o8W2iFLjnFqDnN3PnkMhvzbdAe/+NCM4N4XI933S8b
tCzOkUpuIaaH6Qcp2OLTkEzuga/c/dlVOfDCFiXpotV+A8Sib0IdXtmhaNWX
wBPDxPcPTLOn7fDcP1pXnEO8wGL9g732yDBZ+ZU2Rlx5ZkCdZo/UpqbkkAli
gdEifV4HJO4PsTKaJlYpfHj3kANic4/Lbef+rsf+uaIzwAGPRBeNc3/npBxX
r9X/4ID/AYN7uRA=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {2.038524904435235*^-11, 0.9999997468964037}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6820779511737385`*^9, 3.6820780593629265`*^9}, {
   3.6820780998972454`*^9, 3.682078134742238*^9}, {3.682078174239497*^9, 
   3.682078179780814*^9}, 3.6820783969642363`*^9, {3.6820784401507063`*^9, 
   3.682078444627963*^9}, {3.682078477635851*^9, 3.6820784972249713`*^9}, 
   3.6820785992258053`*^9, 3.682078631042625*^9, 3.682078760823048*^9, {
   3.6820788151321545`*^9, 3.682078931351802*^9}, {3.682079268287073*^9, 
   3.682079285246043*^9}, 3.682079334895883*^9, {3.6820794450501833`*^9, 
   3.6820794495794425`*^9}, {3.682079555451498*^9, 3.6820795707233715`*^9}, {
   3.68207960111511*^9, 3.682079655919245*^9}, {3.6820797439302783`*^9, 
   3.682079790147922*^9}, {3.6820798278500786`*^9, 3.682079891220703*^9}, {
   3.6820817963686714`*^9, 3.682081820892074*^9}, 3.6820845493651333`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Rho]", "2"], "+", 
    RowBox[{"2", "\[Rho]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"2", 
        RowBox[{"Im", "[", "i", "]"}]}]}], "]"}], 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"Re", "[", "i", "]"}]}]], "p"]}], " ", "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"Re", "[", "i", "]"}]}]], "p"]}], " ", "-", "1"}], ")"}]}], 
   "\[Equal]", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Rho]", "2"], "+", 
    RowBox[{"2", "\[Rho]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "+", 
       RowBox[{"2", 
        RowBox[{"Im", "[", "i", "]"}]}]}], "]"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Re", "[", "i", "]"}]}]]}], " ", "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Re", "[", "i", "]"}]}]]}], " ", "-", "1"}], ")"}]}], 
   "\[Equal]", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.68208427131723*^9, 3.682084282660879*^9}, {
  3.682084878573963*^9, 3.6820848837322583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"Re", "[", "i", "]"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["s", "2"], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], 
              RowBox[{"Re", "[", "i", "]"}]}]]}]}], ")"}], "+", 
         RowBox[{"s", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "2"}], 
               RowBox[{"Re", "[", "i", "]"}]}]], 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{
                SuperscriptBox["s", "2"], 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", "2"}], 
                  RowBox[{"Re", "[", "i", "]"}]}]]}]}], ")"}]}]}]]}]}], 
        ")"}]}], "/.", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "+", 
         RowBox[{"2", 
          RowBox[{"Im", "[", "i", "]"}]}]}], "]"}]}]}], "/.", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}]}]}], "/.", 
    RowBox[{"i", "->", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
        SqrtBox["\[Pi]"], " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["5", "4"], "]"}]}], 
       RowBox[{"Gamma", "[", 
        FractionBox["7", "4"], "]"}]], 
      SuperscriptBox["\[Beta]", 
       RowBox[{"3", "/", "2"}]]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6820949974277287`*^9, 3.682095126724124*^9}, {
   3.6820951735168004`*^9, 3.6820952119800005`*^9}, {3.682095301264107*^9, 
   3.6820954204619246`*^9}, {3.6820959086648483`*^9, 
   3.6820959141251607`*^9}, {3.6820984805969543`*^9, 3.682098485166216*^9}, {
   3.682098791003709*^9, 3.68209880221235*^9}, {3.6820988358322725`*^9, 
   3.68209886114272*^9}, {3.682098901672039*^9, 3.6820989528539658`*^9}, {
   3.682100534112252*^9, 3.682100549259118*^9}, 3.6821012798959084`*^9, {
   3.682101316173983*^9, 3.6821013167210145`*^9}, {3.682101505133791*^9, 
   3.6821015701805115`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
IJoLx6F+oZvEzxs9TLMTuLBdueXOZuJ+S5vRFylchA3d26FErFK7/vnHW1yk
F8lEfiL76SJN1mgkh4s5WqGPI4m3PCxeYVHKxTqTo035ZH/6L878aveaC9Hl
ehLnie9nXX7sU82F748NDRuIpVOP6KbXc1HRVqb0huz/5kvCSwRdXAyFh0RX
kvohNjXQK9rPRUhThk0wsUlg6915Q1z0CK0pNCVOO5O7cNMoF6Mzg/QekPrj
aLdLLVmaB7m2EPkAUq8SGSacB7N5MLWkBy8lrrbRSC9X5OHdvOIQBqlvS3b8
UO5X50FE1NZ8FfFXkzTFdUY87Kqvpbcqk/ozu1em8ygPGQ3O/DYlNpaxCszZ
Tjx4VV186k3MzA716zjGg1Ba1SIZYpPV89l1Z3hI/ew0vp7U4292No9KI3iY
rdvnHUvqucujCovreTwEFHy69k2WDfmzcRfjnvFQOlJF9yemm9k9i3nOg+wa
uVt/SX+Y3/x7XhidB96LuG3CxO2/V/R7tvJwiS1/cZz0mx3bMqL+HeeheJIR
XUD60biEid0dIT4MLMo2LSJuHZw/qibKh7eqTW6iOKlXzweWqUjyMe+6rpcn
6Wdci6jE2fJ87Pt5fkSe9LsbZ2hOE4v5kOWKy6lNUpAp1xXq2MWH2fUUD+Mf
FIZ2ahTF7OEjieNVd5L0wXpqjruZDR+eOqXZWd8pxP2ZaMix5ePVZ8f7/3wj
/dq4MdPPhY9zEt+VaIMU5uX5QT6AD//Rpc86e8k8dZMWvOsuub87wSqiHRT+
WVqwSjiXnB/puViyncwTL+71FT3gQ0r5v/vSbRRy2+Ks5j/lI5UxMXdWC5k/
5JzVvpTw0a7cnSVE+rjBZfHyyw18qDY3hqfXUNjgv3uiaoyPu19i3+UXURg5
0R9kMcGHjlPpprRCMh85hI3VT/HhcuLJydACCgstCkeZYp2QnYyq25FPQXL+
3GHBrE7SV1TaGh5RaK3g9qku6oSvLGfOLTJXnJrp1ehr2Qk15+OOq+MopN+9
mr0ovRNiEQ3Rca4UHDYbrudldOISwvPFXcj1u5itN+90glUYd+gCmQ/vqy8R
l8/thJz+JT0XMj8W3axwFyroxNq/Fl1qthQ+xo/ocWo7MTnH65GVJYWJC44v
U350QuFOinqCAQX7/UZ1Myy7EGmqxMkbYcFRdVfWy11dmCOudKP+JwtOnW6+
x/d0YVKpZejrMAuunqnKb/Z3YSPH+oSugAWPyDG3UMcubJqaykv6xIJfMX1y
5GwXMnx2RmmSuS1GcZdBT1YXLHzkRwxfslDc5pZUPtKFtu9vAuDHwpqP+SJ9
Kd14e8Kt2/ATExpbj/1K2tKDawVU6sQaJoyNjBOK+npw/dhQiEkUA7zha++y
I3uRkP56UrimA4OG1pHKq/pwzDOqvq6nHdpf9AaEW/pwMeT0hL1YO6q1zjaf
CfuEq+JR+iqibYhrbXPZq9WP0NMT9SckWiGwoSeIVPfjj/j47iyJFhTsV9y8
xvszvAJq0+cONCG77tLtLvkB2Hw6XCfFasRo7dEg+coBPNA8bTbXoQH8hNe/
Znt9Qe2b1sDT8nUYaVqnHD5rEFSF9G8/wXucub6QHlA2iHrai8+nc95ibt3C
2T32Q9gc/9ja4FoNbNryxudPEqsGq7leq8aww51T7IdfcXhZbMjls5VkLn0a
OWunAB8/3rr1K4WO0oZTllwrAQxpVXKNsXQ8N1sm98SaONDraF4UHXnzc9J3
HRQg3e2+zwl/Om4ybhZedRaAypAuHd9Px9k9UZ1SAQKsSjb2DFSkQ9fcboPE
PQG8ry+Upuu+hvZTso3uC9B7dtJsSPU1Fqox3t57JEDLhRErNZnXmDe+d9+2
ZwIkjZvNuDpYDvGX209GlgmwLWZidsrjcnSuMEoTbRGg1qfjuZtBOdgZ3+1b
2gSo9P1p16RRDsbMp1rZDHJ+dcpvc7ly1H9Zmr+JK4CalMKs5cM0lOWq14Z9
FqDkoX7nyiIaXipxrloPCmDdUW1Ju0tDYeTNvZoCkn+aUbwzmYaHLopc+k8B
mt8p/3fOn4ac5ubs+FEB6oJvj8gfpyFrY7yH45gAMZyN7gUHaUjP37XCYEIA
1hMH3v7tNKSqS/+amiLrt8XKbsKUhv8DBzEEMQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {2.038524904414457*^-11, 0.43975605703370785`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6820951099321637`*^9, 3.6820951276251755`*^9}, {
   3.6820951748328753`*^9, 3.6820952127670455`*^9}, {3.6820953046593013`*^9, 
   3.682095317295024*^9}, {3.682095386689993*^9, 3.6820954213589764`*^9}, 
   3.682095922443637*^9, {3.6820984816990175`*^9, 3.6820984861312714`*^9}, {
   3.6820987921157722`*^9, 3.682098803015396*^9}, {3.6820988371113462`*^9, 
   3.682098861844761*^9}, {3.6820989078003893`*^9, 3.6820989540310335`*^9}, 
   3.6821012819830275`*^9, 3.6821013176120653`*^9, {3.6821015067318826`*^9, 
   3.6821015713525786`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", 
   FractionBox[
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["5", "4"], "]"}]}], 
    RowBox[{"Gamma", "[", 
     FractionBox["7", "4"], "]"}]]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.6820985463847175`*^9, 3.682098558709422*^9}, 
   3.6820986074242086`*^9}],

Cell[BoxData["3.4960767390561593`"], "Output",
 CellChangeTimes->{3.682098559309457*^9, 3.6820986081422496`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dissFunc", "=", 
   RowBox[{"Interpolation", "[", "\[Beta]Dissipation", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.682099931788801*^9, 3.6820999522699723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Re", "[", "i", "]"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox["s", "2"], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], 
            RowBox[{"Re", "[", "i", "]"}]}]]}]}], ")"}], "+", 
       RowBox[{"s", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], 
             RowBox[{"Re", "[", "i", "]"}]}]], 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{
              SuperscriptBox["s", "2"], 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "2"}], 
                RowBox[{"Re", "[", "i", "]"}]}]]}]}], ")"}]}]}]]}]}], ")"}]}],
     "\[Equal]", "a"}], ",", "s"}], "]"}]], "Input",
 CellChangeTimes->{{3.6821000308594675`*^9, 3.6821000399209857`*^9}, {
  3.6821006417584085`*^9, 3.6821006465256815`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"a", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"Re", "[", "i", "]"}]}]]}]}], ")"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"4", " ", "a"}]}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            RowBox[{"Re", "[", "i", "]"}]}]]}]}], ")"}]}], 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        RowBox[{"4", " ", "a"}]}]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6821000410260487`*^9, {3.6821006129227595`*^9, 3.6821006483987885`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ArcSin", "[", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"a", " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                 RowBox[{"Re", "[", "i", "]"}]}]]}]}], ")"}], 
            RowBox[{"2", 
             SqrtBox[
              RowBox[{"1", "-", " ", "a"}]]}]]}], "]"}], "-", 
         RowBox[{"2", 
          RowBox[{"Im", "[", "i", "]"}]}]}], ")"}], "/.", 
       RowBox[{"i", "->", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
           SqrtBox["\[Pi]"], " ", 
           RowBox[{"Gamma", "[", 
            FractionBox["5", "4"], "]"}]}], 
          RowBox[{"Gamma", "[", 
           FractionBox["7", "4"], "]"}]], 
         SuperscriptBox["\[Beta]", 
          RowBox[{"3", "/", "2"}]]}]}]}], "/.", 
      RowBox[{"a", "->", 
       RowBox[{"dissFunc", "[", "\[Beta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "10"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Beta]", "-", "0.5"}], ")"}], "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682100058221032*^9, 3.682100160369875*^9}, {
  3.682100200686181*^9, 3.6821002681730413`*^9}, {3.6821003023919983`*^9, 
  3.6821003542139626`*^9}, {3.6821003904580355`*^9, 3.6821003905290394`*^9}, {
  3.6821009152030487`*^9, 3.6821009181922197`*^9}, {3.6821011562918386`*^9, 
  3.682101173034796*^9}, {3.682101227804929*^9, 3.6821012662761292`*^9}, {
  3.682101331000831*^9, 3.682101495222224*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
qas3R9dPYItqOj2f31m1eHp+ngf/P7//D/tnlfY=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6821001826511497`*^9, 3.682100268773075*^9}, 
   3.6821003033130507`*^9, 3.682100354982006*^9, 3.682100391774111*^9, 
   3.682100465706339*^9, {3.6821011470583105`*^9, 3.68210117432687*^9}, {
   3.682101238452538*^9, 3.6821012669931707`*^9}, {3.682101349704901*^9, 
   3.6821013947874794`*^9}, {3.682101444587328*^9, 3.68210149584626*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6820768951823397`*^9, 3.6820768966464233`*^9}, 
   3.682098540399375*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetR", "[", 
    RowBox[{"extQ_", ",", "extk_", ",", "intvl_", ",", "init_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Q", ",", "k", ",", "M", ",", "r", ",", "x", ",", "externalSymbol", ",",
        "localVar", ",", "a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"externalSymbol", "=", 
       RowBox[{
        RowBox[{"Unevaluated", "[", "intvl", "]"}], "/.", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x_", ",", "y__"}], "}"}], "\[RuleDelayed]", 
         RowBox[{"HoldPattern", "[", "x", "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Q", "=", 
       RowBox[{
        RowBox[{"Unevaluated", "[", "extQ", "]"}], "/.", 
        RowBox[{"externalSymbol", "\[RuleDelayed]", "localVar"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k", "=", 
       RowBox[{
        RowBox[{"Unevaluated", "[", "extk", "]"}], "/.", 
        RowBox[{"externalSymbol", "\[RuleDelayed]", "localVar"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], "=", 
       RowBox[{"Rest", "[", "intvl", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{"(", GridBox[{
            {"1", "1"},
            {
             RowBox[{"\[ImaginaryI]", " ", "k"}], 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k"}]}
           }], ")"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", GridBox[{
              {"0", "1"},
              {
               RowBox[{"-", "Q"}], "0"}
             }], ")"}], ".", 
           RowBox[{"(", GridBox[{
              {"1", "1"},
              {
               RowBox[{"\[ImaginaryI]", " ", "k"}], 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k"}]}
             }], ")"}]}], "-", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"(", GridBox[{
               {"1", "1"},
               {
                RowBox[{"\[ImaginaryI]", " ", "k"}], 
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", "k"}]}
              }], ")"}], ",", "localVar"}], "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"r", "=", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"x", "[", "localVar", "]"}], ",", "localVar"}], "]"}], 
            "\[Equal]", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"M", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                SuperscriptBox[
                 RowBox[{"x", "[", "localVar", "]"}], "2"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"M", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                  RowBox[{"M", "\[LeftDoubleBracket]", 
                   RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                 ")"}], 
                RowBox[{"x", "[", "localVar", "]"}]}], "-", 
               RowBox[{"M", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
              ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"x", "[", "a", "]"}], "\[Equal]", "init"}]}], "}"}], ",", 
         "x", ",", 
         RowBox[{"{", 
          RowBox[{"localVar", ",", "a", ",", "b"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "r"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.681981910254899*^9, 3.6819819102568994`*^9}, {
   3.6819819550304604`*^9, 3.681981958593664*^9}, 3.6819820539961205`*^9, {
   3.6819820893091407`*^9, 3.6819821638084016`*^9}, {3.6819821968892937`*^9, 
   3.681982374550454*^9}, {3.6819824591172905`*^9, 3.681982466001684*^9}, {
   3.681982496787445*^9, 3.6819824970684614`*^9}, {3.68198550092527*^9, 
   3.6819855010492773`*^9}, {3.6819856625915174`*^9, 3.6819856874869413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"TEM", " ", "dissipation", " ", "for", " ", "X"}], "-", "wave"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]Dissipation", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]]}], ";", 
    RowBox[{"l", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]begining", "=", "0"}], ";", 
    RowBox[{"\[Beta]end", "=", "1"}], ";", 
    RowBox[{"\[Beta]nstep", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ProgressIndicator", "[", 
    RowBox[{"Dynamic", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Beta]", "-", "\[Beta]begining"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Beta]", "=", "\[Beta]begining"}], ",", 
      RowBox[{"\[Beta]", "\[LessEqual]", "\[Beta]end"}], ",", 
      RowBox[{"\[Beta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}], "/", 
        "\[Beta]nstep"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"GetR", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Beta]", "2"], "-", 
             SuperscriptBox["z", "2"]}], "z"], "/.", 
           RowBox[{"{", 
            RowBox[{"z", "\[Rule]", 
             RowBox[{"z", "-", 
              RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]}]}], "}"}]}], ",", 
          RowBox[{"\[ImaginaryI]", 
           SqrtBox[
            RowBox[{"z", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", "l", ",", 
            RowBox[{"-", "l"}]}], "}"}], ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Beta]Dissipation", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"\[Beta]Dissipation", ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"Abs", "[", 
               RowBox[{"r", "[", 
                RowBox[{"-", "l"}], "]"}], "]"}], "2"]}]}], "}"}]}], "]"}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[Beta]Dissipation", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"SaveData", "[", 
     RowBox[{
      RowBox[{"config", "[", 
       RowBox[{"\"\<isotropism\>\"", ",", "\"\<data\>\""}], "]"}], ",", 
      "\[Delta]Dissipation"}], "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Alpha]", ",", "l", ",", "\[Beta]", ",", "\[Beta]begining", ",", 
      "\[Beta]end", ",", "\[Beta]nstep", ",", "r"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.6819834520840855`*^9, {3.6819836586929026`*^9, 3.681983900753748*^9}, {
   3.6819839402120047`*^9, 3.681984013145176*^9}, {3.681985694423338*^9, 
   3.681985703157838*^9}, {3.6819858075458083`*^9, 3.681985836340455*^9}, {
   3.6820076377667065`*^9, 3.682007638221733*^9}, {3.6820997225348325`*^9, 
   3.6820997636201825`*^9}, {3.682099831025038*^9, 3.68209983683637*^9}, {
   3.6821004047038503`*^9, 3.6821004048188567`*^9}, {3.682101052581907*^9, 
   3.682101053534961*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Beta] - \
$CellContext`\[Beta]begining)/($CellContext`\[Beta]end - \
$CellContext`\[Beta]begining)]]], "Output",
 CellChangeTimes->{{3.681983878160455*^9, 3.6819839014897895`*^9}, 
   3.6819839406980324`*^9, {3.6819839707717524`*^9, 3.681984013694207*^9}, 
   3.681985705915995*^9, 3.6820076393247957`*^9, {3.682099734120495*^9, 
   3.682099764043206*^9}, 3.682099838075441*^9, 3.682100406986981*^9, 
   3.682101054173998*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
dcunvM3DfNmFta+H51O/ykOo59vA7zPzKX/zMClk1uTR6/Opb+XBvnfPW1s8
8imP8+B3RufU+cv51L/y0Gi1rs+D0HzK5zwIVuyufRafT32MnafkHc9eSfMp
r/Owpcf4gkf1+dTP8hD5+FGJr4GI8jsPrsOjXFwGiaiv5eEQdJOnzxBRnrOv
1/+kus1KEfW3PIi6XzoQtUdE+S6E54ZRl9b7iKjPCWGzcUXur2AR5b0Q84sP
PTj9QUT9ToiGAr+/7QUiyn8hnDM3KzwrRNT3hBAu2tBfoVNAHghhLjP/PrZv
AfU/IbYtHXrFbVwB+SBEjeOAohcLCqgPss/vMaApf3MBeSFEVviDAxWHC6gf
CrEmreLOV/8C8kOIwhEJC6ufF1BfFMJqwgSlKLGAPBFi4eva1DBZAfVHIdyt
hV886gvIl3wE5uqfsegkpj6ZD59RI3vkm4nJm3w4bQhJ2z5FTP0yH4a3B7vV
LRGTP/kIWj7pjeN2MfXNfMzYd9Ml2UtMHuWDcVu0rmuAmPpnPn6elyY5vBKT
T/nocXutjmeKmPpoPjynxk65ohCTV/kY/dft+40GMfXTfAQ3jLrq10lCfuWj
o5vq/j4zCfXVfDi8W+E2abKEPMtHg51dRsNiCfVXEZSG7fYFbZOQbyIUyqIL
hh2VUJ8VYfb6xP1h/hLyToQ1nZX8ns8k1G9FMEmXGbtwJeSfCJy9syKeiyTU
d9njoHR/WZWEPBQh5VHssc86Uuq/Ilit/mfT195S8lGEhP45GzSWUurDIujN
6tomzlZKXooQ0rm78/E1UurH7PVfO5Jm4SolP0UIrJu8If60lPqyCMGXT4TY
3JaSpyJ06Tvk3YtwKfXnAnjGthPppEjJ1wI4LMtcZSOTUp8uwJf1Ef/bXicl
bwvgmm1h49FORv26AHeNl591MZKRvwXg3s2abD9KRn27ALxzDfP62MrI4wKc
uZiczlslo/5dgMFz+rbZuUtGPhcg4d9624oTMurjBRAY2rRxuCEjr9nXD6sf
/viZjPp5ASbdHLO5IE5GfhcgZZ7FnL8CGfV19vWUTt/1y2TkuRjB4ddfNf6U
kedieK714mV0kZPnYvb9euTQs2Zy8lyM0PH/Oo6cICfPxfhT0mbux3ly8lyM
aw37XIaul5PnYjavNiYed5WT52LoOK8dkHBKTp6LYf1gbJP6hpw8F+PZYssT
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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta]\"", TraditionalForm], 
    FormBox["\"dissipation\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Medium,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.5380288321105335}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.681983878160455*^9, 3.6819839014897895`*^9}, 
   3.6819839406980324`*^9, {3.6819839707717524`*^9, 3.681984013694207*^9}, 
   3.681985705915995*^9, 3.6820076393247957`*^9, {3.682099734120495*^9, 
   3.682099764043206*^9}, 3.682099838075441*^9, 3.682100406986981*^9, 
   3.6821011358516693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]Dissipation", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "5"}]]}], ";", 
  RowBox[{"a", "=", "20"}], ";", 
  RowBox[{"b", "=", 
   RowBox[{"-", "20"}]}], ";", 
  RowBox[{"L", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]begining", "=", "0"}], ";", 
  RowBox[{"\[Beta]end", "=", "1"}], ";", 
  RowBox[{"\[Beta]nstep", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ProgressIndicator", "[", 
  RowBox[{"Dynamic", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Beta]", "-", "\[Beta]begining"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"\[Beta]", "=", "\[Beta]begining"}], ",", 
    RowBox[{"\[Beta]", "\[LessEqual]", "\[Beta]end"}], ",", 
    RowBox[{"\[Beta]", "+=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}], "/", 
      "\[Beta]nstep"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"GetR", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["z", "2"]}], "z"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["z", "L"]}], ")"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{"z", "\[Rule]", 
           RowBox[{"z", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]}]}], "}"}]}], ",", 
        FractionBox[
         RowBox[{"z", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]}], 
         SqrtBox["L"]], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "a", ",", "b"}], "}"}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]Dissipation", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"\[Beta]Dissipation", ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"r", "[", "b", "]"}], "]"}], "2"]]}]}], "}"}]}], 
       "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"\[Beta]Dissipation", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"\"\<L=\>\"", "<>", 
      RowBox[{"ToString", "[", "L", "]"}]}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"SaveData", "[", 
    RowBox[{
     RowBox[{"config", "[", 
      RowBox[{"\"\<isotropism\>\"", ",", "\"\<data\>\""}], "]"}], ",", 
     "\[Delta]Dissipation"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Alpha]", ",", "a", ",", "b", ",", "L", ",", "\[Beta]", ",", 
    "\[Beta]begining", ",", "\[Beta]end", ",", "\[Beta]nstep", ",", "r"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzltImnEABXBnTAxGoyi7PNiyC5XFJIu1LppQwejC+lglFT1EJVtkTbCE
LjiDiqLLIrqsgXvS9rBVLrOsxCBIJj3Elom5sqKgtYdmyz1Il+/8Hw6/p3M4
MXUtVAOTwWAk0oHfvH92fsgvJIqM5D1YvK28gMysd0Sp5yD4J63NYwqFbEnc
M2hy5mfCQ+5/ETzejxZDsdrfCu1DZW/hKaXqgiufs7uhh3/XAyMGawch9cAw
AUsy/R9gLj9eC8v/iYnTORodjGZsEuXlEisc52htcJZ7vbVLy/FJbbCw/uzW
TetY0DN/4Xcnnw1TE3WPYW+rIwyO7VdFQcvRMA8m1f0l9k9/TIYagVAIb12V
z+FosIHo9RtfwZDhgQp4rrdXk15gUg1skwXI4I1xoxmm614ooCEjtx36ogI7
4Hzje+L4mrkH8igL8VFsnPOAljXJ88BJwdUJrDp68humaeSXULSs98H1gALO
ITS+DIcPbawE+GZDmQKVCUXpUDRTSvQ2OF7DsFAXcZayquDoUl4fNDdLR6Da
NE9kzZ1qoXPb8AkKii1foDVok9jkTjFCd+RT4tfvXauQy1YTgyKnrDDicoa4
WKNqucZunlAB7wFjpGHi
  "]],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Beta] - \
$CellContext`\[Beta]begining)/($CellContext`\[Beta]end - \
$CellContext`\[Beta]begining)]]], "Output",
 CellChangeTimes->{
  3.6819842145946984`*^9, 3.6819846799593153`*^9, 3.6819849627094865`*^9, 
   3.6819850179586463`*^9, 3.6819854204846697`*^9, 3.681985526319723*^9, {
   3.681985580334812*^9, 3.6819856275885153`*^9}, {3.681985722170925*^9, 
   3.6819857521626406`*^9}, 3.681985846702048*^9, {3.681986070458846*^9, 
   3.6819861174905357`*^9}, 3.6819881645650673`*^9, 3.6820029714608145`*^9, {
   3.6820030187975216`*^9, 3.6820030746117144`*^9}, 3.682003124470566*^9, 
   3.6820031563573895`*^9, 3.682003225235329*^9, {3.6820032930072055`*^9, 
   3.682003317838626*^9}, 3.6820033542457085`*^9, 3.682003406092674*^9, 
   3.6820036383379574`*^9, 3.682003683561544*^9, {3.682003776350851*^9, 
   3.6820038224924903`*^9}, {3.682003864354885*^9, 3.6820039027290797`*^9}, 
   3.6820039331628203`*^9, 3.6820039984765563`*^9, {3.682006728841719*^9, 
   3.682006754818205*^9}, 3.68200678550596*^9, {3.682006816884755*^9, 
   3.6820068653965297`*^9}, {3.6820069161554327`*^9, 3.682006968623434*^9}, 
   3.682007197874546*^9, {3.682007381727062*^9, 3.6820073961888895`*^9}, 
   3.682007459272497*^9, 3.6820078872839785`*^9, 3.682008122688287*^9, 
   3.682008190764402*^9, 3.682008327869632*^9, 3.682008431130802*^9, 
   3.682008490011907*^9, 3.6820085407709923`*^9, 3.68200858221506*^9, {
   3.6820529760446463`*^9, 3.6820530100665917`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9kwlMU3ccxzvAxeAGymAo45JkHQpjHNmCA/wiUUE2BF2QSTrtCAgzzuEk
nGEymNtQikxIhkzxAHHgBRPkEAmXBRG6FgotZ98r5b4WECaHMFp+7J+8NK+v
7/f7fT+fX7cHfXc4RIvD4YSsXurP/0+hX7SZHhBn+MCTjf0JHLGnvzbPi+4z
kJAiGPj5QDTKzM+PHSrLRsImQXCEcww9zwXntsvVvMcJyLqiPvlwT++5sOWm
gH7/ADc4Fp95uF3G+CH1N0Ww9Cou4z/JpPeLYSlLsrmvvA5dWU64m24pbmzN
+itzMYfqlSNNMRcw9nU+dvAu1c5aV6J6H6OzN+Y+1a8Ck+WcfSWjCLmrb8ty
qmF/tvSYxLeY+tUgs/cLuVNwKZw0pw723twE5VwF9a/H1okuh4wdVaibtV7t
8AymHxS0/dpUTfM0ICOAv3EhuxaHNQ0bYV9x32o5pZ7me47Nkc4z354Tgo1V
F2yCc75UKySikeZtxpJB/NFXPzbhjHq88BaYWn6YEp/eTPOLwKQlvu/4UIQ1
GWL4tRh7nw4TUx4x7OKmAh1jJPDSNJCg8FNO/JULrZRPgsTQN5JsrrZB3Y13
qRXSmZXya/eklLcNFTMlny+Xt0MTR9YG3uzBouDaDsovxff+3GNWEhks1OOY
t4OzWMQXtMiJRzs8DByfXG/sxAnN6UCs8IzE9nEX8ZGhAPOhK7e7oa5m+EAG
PeG2UefkHuIlR4RR/pOgE72YU5eblYNXGVdg7tpH/DpR4eDr/2i5Dxo8bl0I
fq4SxZQpiGcX+sysjC46MNCMd74be7zseq2TGOLbgyNFjwa1Rxm0NKtPDxbu
DIuW32KJdy/S3ra9yNnPQhPXsA9hn9yNTEtmiX8fFtIDTbjlLDTleArUyXGT
q2DJB4PLHuECk3eUlIeB9aGmPP/V+zU/DGqS4ySDlkrKx8C9yuU4PlKSLxZe
NYueKjsl5WUhvyvNP8lVkj8WCUKb7CQTJeVXQrqsn6ijrSSfSoSnJsi/GmWJ
hxJVoaW/GDxlyW8/DC0VLzetzrvGpx/8qdC6fb+x5Lsf3JOp06fCWOKlwjBn
161jq7zW/KtQMVRnpVuyzk+F6bsW838EMbQPA3A0a2CmtjDEcwBhmT5Wu35Q
0H4MIDxLP25vjIL4DsL1vZ3VGyz7aF8G4fHwua/gZS/xHoTw3yYdp+ge2p8h
NC9sT1251038hxChys4rMVjfpyFw36z36EAX+RhGx5lt6YkhneRjGKnZXfq1
qXLyMYzpj5/lRubLyMcwRD6D0we9ZeRjBBsD5p3159vJxwi07nFNRU/byccI
5nZ6pJz2lZKPUWSc8NF96bf+/xqFnZaR8TfJreRjFPwsrru2XEI+xnBqa7rQ
RyomH2OYm2/4+6qxmHyMQcXfbV+YIyIf41jaw4/aMNlMPsaRtmGv7+uIF+Rj
HLmvBUmdgU3kYwJ+brfM/yxuJB8TcC3LdYh1byAfE9h8Lqpnv56QfEyCCT/7
bvPv9eRjEtKSV0dUUXXkYxJiG6+DB0JryccUlu5c0593qSEfU9CpcuDZ6laT
jyl8+YIj2a1dRT7+QdhR96DO45X4Dz5eHaQ=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta]\"", TraditionalForm], 
    FormBox["\"dissipation\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"L=5\"", TraditionalForm],
  PlotRange->{{0, 1.}, {0, 0.5682675228144447}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6819842145946984`*^9, 3.6819846799593153`*^9, 3.6819849627094865`*^9, 
   3.6819850179586463`*^9, 3.6819854204846697`*^9, 3.681985526319723*^9, {
   3.681985580334812*^9, 3.6819856275885153`*^9}, {3.681985722170925*^9, 
   3.6819857521626406`*^9}, 3.681985846702048*^9, {3.681986070458846*^9, 
   3.6819861174905357`*^9}, 3.6819881645650673`*^9, 3.6820029714608145`*^9, {
   3.6820030187975216`*^9, 3.6820030746117144`*^9}, 3.682003124470566*^9, 
   3.6820031563573895`*^9, 3.682003225235329*^9, {3.6820032930072055`*^9, 
   3.682003317838626*^9}, 3.6820033542457085`*^9, 3.682003406092674*^9, 
   3.6820036383379574`*^9, 3.682003683561544*^9, {3.682003776350851*^9, 
   3.6820038224924903`*^9}, {3.682003864354885*^9, 3.6820039027290797`*^9}, 
   3.6820039331628203`*^9, 3.6820039984765563`*^9, {3.682006728841719*^9, 
   3.682006754818205*^9}, 3.68200678550596*^9, {3.682006816884755*^9, 
   3.6820068653965297`*^9}, {3.6820069161554327`*^9, 3.682006968623434*^9}, 
   3.682007197874546*^9, {3.682007381727062*^9, 3.6820073961888895`*^9}, 
   3.682007459272497*^9, 3.6820078872839785`*^9, 3.682008122688287*^9, 
   3.682008190764402*^9, 3.682008327869632*^9, 3.682008431130802*^9, 
   3.682008490011907*^9, 3.6820085407709923`*^9, 3.68200858221506*^9, {
   3.6820529760446463`*^9, 3.682053016561963*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]Dissipation", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "5"}]]}], ";", 
  RowBox[{"a", "=", "110"}], ";", 
  RowBox[{"b", "=", "90"}], ";", 
  RowBox[{"L", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]begining", "=", "0"}], ";", 
  RowBox[{"\[Beta]end", "=", "1"}], ";", 
  RowBox[{"\[Beta]nstep", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ProgressIndicator", "[", 
  RowBox[{"Dynamic", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Beta]", "-", "\[Beta]begining"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"\[Beta]", "=", "\[Beta]begining"}], ",", 
    RowBox[{"\[Beta]", "\[LessEqual]", "\[Beta]end"}], ",", 
    RowBox[{"\[Beta]", "+=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}], "/", 
      "\[Beta]nstep"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r", "=", 
      RowBox[{"GetR", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["z", "2"]}], "z"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["z", "L"]}], ")"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{"z", "\[Rule]", 
           RowBox[{"z", "-", 
            RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]}]}], "}"}]}], ",", 
        FractionBox[
         RowBox[{"z", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]}], 
         SqrtBox["L"]], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "a", ",", "b"}], "}"}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]Dissipation", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"\[Beta]Dissipation", ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"r", "[", "b", "]"}], "]"}], "2"]}]}], "}"}]}], "]"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"\[Beta]Dissipation", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"\"\<L=\>\"", "<>", 
      RowBox[{"ToString", "[", "L", "]"}]}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"SaveData", "[", 
    RowBox[{
     RowBox[{"config", "[", 
      RowBox[{"\"\<isotropism\>\"", ",", "\"\<data\>\""}], "]"}], ",", 
     "\[Delta]Dissipation"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Alpha]", ",", "a", ",", "b", ",", "L", ",", "\[Beta]", ",", 
    "\[Beta]begining", ",", "\[Beta]end", ",", "\[Beta]nstep", ",", "r"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6820114137847967`*^9, 3.6820114579963255`*^9}, {
  3.6820128952045183`*^9, 3.682012904934075*^9}, {3.682012970434821*^9, 
  3.682012972767955*^9}, {3.682013080090093*^9, 3.682013084846365*^9}, {
  3.6820131651239567`*^9, 3.6820131765366096`*^9}, {3.682013380878297*^9, 
  3.682013390227832*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Beta] - \
$CellContext`\[Beta]begining)/($CellContext`\[Beta]end - \
$CellContext`\[Beta]begining)]]], "Output",
 CellChangeTimes->{
  3.6820114703900347`*^9, 3.682012907174203*^9, 3.6820129748300724`*^9, 
   3.682013085366395*^9, 3.682013179231764*^9, {3.682013382343381*^9, 
   3.6820133907778635`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxFk19Ik1EYxtdwWRONaFgZuhmVK8wgg8rQ0gi9qEQLkzJc5l8INKIbu+gm
u4kwKgK9iA+0wIsGSaHSl5Qaac5M02Zl+a0yTa2JYRmFdJ5XvscDY/z2vOf9
95zFFpRnF1ktFkuR+uB78RgnSh/fbb3g8KYHKi/ttVi03EW+qdiV6VbcHFM1
mdV8G/o+N/V6xUY8uLYGp0GxJ6yU8V7Ej5UonsrCL/eh98bx/gPwVeh2f11F
sr0J8TklzNcCfS14c15126xbhz5YzPyt0K+A69Vtf90T9JNUzHpPwQmbFCfK
aUf85SLW7wCvB7fPulWFZ4hvKmQ/z6F3bFCcLQU7Ub/3NPvrQnwWOFCJhC+g
9xSwXx/0NPBZtFfRg302nmL/L5E/CrzgxStweSznAbuG8hVnSIE+6FvzOR/Y
dc+pGNXyqvul35Oc9zW4MEaxjOMHa03RnH8A921gJ9qJGUT8nePch3D1OsXF
ct5gnu4o7scPtucqRjaHF6w5j3FfQ8ifkKP4F9LNgj1Vq7m/t7i/86hiWU/y
O/D2I9yncFy2Ymmv6j3uR2Zxv8Pg+UzFPT4csDZymPv+gPqPDimWcR0fwdcO
cv9gz3CEYkmXN4L7XeH0w0D9sQzOA3bVpdMf0cvtnE/0pQfoVwD5vfs5L9jI
TKN/YFeDjfN/ApeF0E+wJyKF+wBrQ0vo72foa/ZwP2Djxm76LbxsF/f1BfHn
/umm/2CXsYP7A2upiXwPo4iPn9PNfYK1mW18H8KpCdzvV8Q3/tTN9yLs28J9
C9dO6+b7GUN/tqBu7h+sndnI9yR696Ru+jGOfptj6QfYM+CkH6JPRNMP0R2j
uunHN+SzRtEPsHYroJt+gD3WSPoxAX1uFf0QHl9JP8Ce/hX0YxL5H4bTD+Hr
YfRDuGw5/ZjC/aRQ/h/BRoiNfgh3WunHd9Tv89EPsJE8r5t+gF3Bv7rpxw/o
NX/oB1hL+a2bfghfbKMfQfRzfoZ+CIfCrwU/gvJ/1+nHtLzHFsX/AVnA7tc=

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta]\"", TraditionalForm], 
    FormBox["\"dissipation\"", TraditionalForm]},
  AxesOrigin->{0, -6.776177181366805*^-7},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"L=100\"", TraditionalForm],
  PlotRange->{{0, 1.}, {-6.777010452818644*^-7, -6.77621686095975*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6820114703900347`*^9, 3.682012907174203*^9, 3.6820129748300724`*^9, 
   3.682013085366395*^9, 3.682013179231764*^9, {3.682013382343381*^9, 
   3.682013392798979*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "1"}], ";", 
  RowBox[{"L", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["z", "2"]}], "z"], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], "-", 
        SuperscriptBox["z", "2"]}], "z"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["z", "L"]}], ")"}]}], ",", 
     FractionBox[
      SuperscriptBox["z", "2"], "L"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Beta]", ",", "L"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6819843581189075`*^9, 3.6819844992299786`*^9}, {
  3.6819846227580442`*^9, 3.681984637183869*^9}, {3.681985647371647*^9, 
  3.681985651591888*^9}, {3.682003747727214*^9, 3.6820037570447474`*^9}, {
  3.682007008787731*^9, 3.6820071101335278`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
weO1q1WiOc5WTTopupQGigJb1/of2eH/Aw75gSk=
      "]], LineBox[CompressedData["
1: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
YYc=
      "]], 
     LineBox[{{-0.007861957322007554, -66.38814639490418}, \
{-0.0029857609885440032`, 108.02480879784306`}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]], LineBox[CompressedData["
1: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
nw/pp0LQKPX3ygoF+Dt+JX+bpML/AJ+pxbQ=
      "]], 
     LineBox[{{-0.007856366189250353, -66.38814639490418}, \
{-0.002980169692037636, 108.02480879784306`}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
EtcO3aSge34uAutrVPR/fwj6/z/kfwCCfDZI
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-20, 20}, {-66.38814639490418, 108.02480879784306`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.681984447922044*^9, 3.6819844996820045`*^9}, {
   3.6819846241931257`*^9, 3.6819846392419868`*^9}, 3.681985653635005*^9, 
   3.6820037575207744`*^9, {3.682007039176469*^9, 3.682007110653558*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6820533478109093`*^9, 3.682053349722019*^9}}]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 653, 18, 111, "Input"],
Cell[1236, 42, 108496, 1737, 584, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109769, 1784, 2445, 67, 150, "Input"],
Cell[112217, 1853, 195, 3, 31, "Output"],
Cell[112415, 1858, 253, 5, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112705, 1868, 6445, 194, 461, "Input"],
Cell[119153, 2064, 317, 5, 31, "Output"],
Cell[119473, 2071, 1159, 29, 33, "Output"],
Cell[120635, 2102, 315, 5, 31, "Output"],
Cell[120953, 2109, 1161, 29, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122151, 2143, 2109, 56, 97, "Input"],
Cell[124263, 2201, 2785, 79, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127085, 2285, 822, 19, 57, "Input"],
Cell[127910, 2306, 490, 13, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128437, 2324, 2819, 73, 107, "Input"],
Cell[131259, 2399, 9652, 169, 368, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140948, 2573, 1092, 28, 331, "Input"],
Cell[142043, 2603, 99805, 1607, 585, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241885, 4215, 468, 14, 31, "Input"],
Cell[242356, 4231, 1542, 44, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243935, 4280, 3619, 100, 130, "Input"],
Cell[247557, 4382, 1147, 31, 51, "Output"],
Cell[248707, 4415, 757, 18, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249501, 4438, 1439, 43, 76, "Input"],
Cell[250943, 4483, 259, 7, 31, "Output"],
Cell[251205, 4492, 221, 6, 49, "Output"]
}, Open  ]],
Cell[251441, 4501, 768, 23, 31, "Input"],
Cell[252212, 4526, 1435, 41, 48, InheritFromParent],
Cell[253650, 4569, 665, 21, 31, "Input"],
Cell[254318, 4592, 2255, 62, 52, InheritFromParent],
Cell[CellGroupData[{
Cell[256598, 4658, 6505, 182, 240, "Input"],
Cell[263106, 4842, 145, 2, 31, "Output"],
Cell[263254, 4846, 1348, 37, 33, "Output"]
}, Open  ]],
Cell[264617, 4886, 1120, 31, 33, "Input"],
Cell[CellGroupData[{
Cell[265762, 4921, 965, 26, 33, "Input"],
Cell[266730, 4949, 2419, 71, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269186, 5025, 2587, 65, 66, "Input"],
Cell[271776, 5092, 11863, 204, 236, "Output"]
}, Open  ]],
Cell[283654, 5299, 1471, 46, 77, "Input"],
Cell[CellGroupData[{
Cell[285150, 5349, 2576, 70, 66, "Input"],
Cell[287729, 5421, 7360, 131, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295126, 5557, 348, 11, 66, "Input"],
Cell[295477, 5570, 112, 1, 31, "Output"]
}, Open  ]],
Cell[295604, 5574, 203, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[295832, 5583, 1219, 37, 46, "Input"],
Cell[297054, 5622, 1092, 35, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298183, 5662, 2037, 55, 66, "Input"],
Cell[300223, 5719, 9319, 166, 233, "Output"]
}, Open  ]],
Cell[309557, 5888, 562, 9, 392, "Input"],
Cell[310122, 5899, 4408, 113, 262, "Input"],
Cell[CellGroupData[{
Cell[314555, 6016, 3795, 96, 289, "Input"],
Cell[318353, 6114, 489, 9, 31, "Output"],
Cell[318845, 6125, 16592, 286, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335474, 6416, 3990, 106, 294, "Input"],
Cell[339467, 6524, 1508, 23, 31, "Output"],
Cell[340978, 6549, 4430, 83, 264, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345445, 6637, 3629, 95, 276, "Input"],
Cell[349077, 6734, 368, 8, 31, "Output"],
Cell[349448, 6744, 2752, 59, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352237, 6808, 1095, 31, 91, "Input"],
Cell[353335, 6841, 20073, 345, 237, "Output"]
}, Open  ]],
Cell[373423, 7189, 364, 5, 252, "Input"]
}
]
*)

