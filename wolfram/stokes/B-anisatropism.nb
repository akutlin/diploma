(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    307100,       5924]
NotebookOptionsPosition[    305143,       5861]
NotebookOutlinePosition[    305487,       5876]
CellTagsIndexPosition[    305444,       5873]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "0.5"}], ";", 
  RowBox[{"\[Delta]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "5"], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox["\[Beta]", "4"], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "6"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "6"], " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "-", 
       
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StokesGraph", "[", 
  RowBox[{"potential", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Beta]", ",", "\[Delta]", ",", "potential"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.674544170356062*^9, 3.6745442692012367`*^9}, {
   3.6745443349557533`*^9, 3.6745443350649533`*^9}, {3.6745447786899548`*^9, 
   3.6745447807959585`*^9}, {3.674545450795561*^9, 3.6745454509575615`*^9}, {
   3.6745458663811283`*^9, 3.674545890769972*^9}, {3.674546137058609*^9, 
   3.674546164769258*^9}, {3.6745472934476814`*^9, 3.674547294648883*^9}, 
   3.6745555859959393`*^9, {3.6745556737824965`*^9, 3.674555693263935*^9}, {
   3.674555730444801*^9, 3.6745557309752016`*^9}, {3.674555761665456*^9, 
   3.674555762305057*^9}, {3.674556587797*^9, 3.6745565882494*^9}, {
   3.6745569310320096`*^9, 3.6745569361352186`*^9}, {3.6745573398607464`*^9, 
   3.6745573424191513`*^9}, {3.6745642986633368`*^9, 
   3.6745643009721413`*^9}, {3.6745762939443274`*^9, 
   3.6745763379298134`*^9}, {3.6745764096165433`*^9, 
   3.6745764160633545`*^9}, {3.674712814948949*^9, 3.674712829670068*^9}, 
   3.67489907248208*^9, 3.67489913476031*^9, {3.674900022612542*^9, 
   3.674900058680545*^9}, {3.674900929485424*^9, 3.6749009829927893`*^9}, {
   3.674901107401928*^9, 3.674901121059504*^9}, {3.674903500588253*^9, 
   3.6749035006990623`*^9}, {3.674903556176386*^9, 3.674903556288048*^9}, {
   3.674903615343217*^9, 3.674903633580159*^9}, {3.6749037100622063`*^9, 
   3.6749037101731367`*^9}, {3.674903781918785*^9, 3.674903850805203*^9}, 
   3.674903884039955*^9, {3.67490399369001*^9, 3.674903997129931*^9}, {
   3.674904439256669*^9, 3.674904441335742*^9}, {3.674904486090357*^9, 
   3.67490448738435*^9}, {3.674905076330832*^9, 3.674905154036186*^9}, {
   3.6749051972049103`*^9, 3.6749052767574177`*^9}, {3.674914348814907*^9, 
   3.674914363495038*^9}, {3.674951415422606*^9, 3.674951435098222*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzkvHlUzW37N1yhEMpQSEikUCRTEgcZkyFpMqWEIqmoJKlQMiSkSCMVQpoV
Go5SGjSoNM/tdvO052o3ve3rfe/rXevsWcu61/3c6/7dz3P9c63POvZ5fs/j
MxzndyeWnLHQOifAx8dHmcHHx/u/zet169yOCqRaBijIVtQMIYHB+0CZ376P
I/CPOoFBuEVhOu/zQR56Nbt+cLHnRKINr65C69qzewzveyYjyqunSiifjP7U
j4y4tYq8+hVR0T4e7vl9YsFf9dvdaouec/Da9ovavHrzLZU0Hj7yVns5r54n
/0rzoSMLrds+GfPq0xpHbXh4JaVanFe3fWSZ13eegR+vhbry6sbO1+z6x3Cf
sP9fdQXPLs+zh2ko/1rJglffkUqdfW4MH/loNoFXFxESLQy26MJWu9gTvLpe
YFZwyBg+eAEm8eotOesCHLa3IYu5SpNXp4neSrk5hr3vC0/m1eObntzWnUlF
11lqG3j1UK94C70xTNUpE+LVxczzNhpm1OPxpq5bvPon0WD3M2NYW9lyNa/u
aXiOM+t8OeZoj2rx6o6zGJJiY7jV8oIwry6a0tb7UKQALf21/uJPO3TmFM8x
PHFU6q/z3UjenUN98w0lX559xqtfMj9oTxvDy0foI3fH6lozk2uVD/rBzLiF
D3j1F1XH74uM4cpRz1W89WaB609tX54By2cP6fPqpsu07m0Zw+YJNgq8+nC/
EM3MqhjS9PW28eoTZtxdxMNuGbMFeXX3GUM+X35VQUPz00e8ukGR3BUenjRJ
l49X9zgunyLwohGClUPdefWqzGAdHk46T/mLf8kKc7cVmc2Q/Oz1Gl5dtdDH
SG4Mv5JaO5VXP9FlNkWT3Q6t1DYrXh1V/ZQOj+Hp3kH8vLqyt94222U9MMDc
58Crr3j7zsJmDPeaqS/l1V3ZBlcLVtBhkwLlGq/+fJSvIH8M73M7vYxXH/0g
ZWO0gwlOrxb8df7HvuFKPHzS8//lz7x+/T2WPhuWvXzxlz++pn6S42Ev50mz
eOtXli2tdLPsg98fNirz6tnzKX48nG329q/+La8pNUjcGwCpww3nefWbYnMe
8LDSb5zCq8e6XNwXETQIegMLLf/KR8GStE9j+PUS6vPkvfypOkG/i8vH8le/
tzCEh2/JdXPGMIgsCG1jbuFLlVoctJCXz7o3BUqsMRwonzWJl09bm4YL2oYj
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
fjM3x/8AFY5s/4rhVnyp+ulvknZhC3wr0NM7/IIvNYrPoOv7mrHvT2ZJUouR
L7Xw1Hb9uYGdIDavdYFkO19qfNUBPrWpPfDBqu5J4Hr+1F2T1wq/FKVDXOqM
xLJD/Kkvq9c9sksZ81H9z982r/hT7fcuTZuYw4RJ+pQmpWv8qbSfk0SnZTDG
fZ6sk+tJfsnnZ9lCjpDXGJ95e7dnKubhW/q0CXPjR/FjyZp3U/b9RtXsyzfv
NY6i83k96wNXK3DnTSXJ1cJ8qeF+vm6rfGtRpFM10nQFXyr1a46mgkEjapYs
ePRsP1+qcp95WmZXE07a/OtzxGW+1OJJ38Qodi24Zr7eim/efKnRzZ8OOgm0
j73fmA6rjPH14VPNpx/3O/FcYcLe+A6+VC/rSvuaGT3oeW/3ZPl5/KkbF2pV
Ne6joa3jTPDfy5/q6xT4aet9OpL+mPbGnWF+mT/1pHaFo/1dBvbueee44Dl/
arnlrY5ld5h/++3QgaHJGtNYSPqN1IvUk9Sb9APpF9JPpN9IP5J+Jf1M+n1c
Hoj8kfkk8/unfP63++Of9YNdv6+LlenY98i3S3SvyObApzwF60ed/bCFeXN3
yo4cWKiTpPXucj+UUfC9zbEc6F9fbOdh3geTTpi0zb+TA9W5stLmlzgQnNV4
zMwvBxrC7eOWynPg5Sb5wtWBORDTvEasaux73rtL5wK1gnLAmI/ytKCRDZw9
zWKn/heY/Dy5X1WZ8xI+HS48HFYSPtGRDVWbbw/c3zEISjYLLtmEZUO0vOmc
2auHoPDrxbSl57Ohn2+3hK/EMCxqpTF6l2SPOy/Zzz/mf0SmQbGJSPa4/kl+
SP7+1fORzzffqaj97m4S5oS9ORh6oR7OZ1+Rnh/zGbdtuhHx0a4eFLRkzmYP
xWKQqHd+tn09+H10bjLeG4Ofliqe2XejHgJX+pnFpUSj4Ce8bDaGV35Y+dLb
9juGz6TupArWQ8Szlh26zzKx0+Q3n/PVOpgfbn5zuXMBqvR81aC21wBzDVWk
sKIYt2Wv4f/4pgos7p1lHhwuxVCbBYsZmeUwGh2+Z+vkOkzLeko3q/4O7ubU
xtsedZgp2z1f6VXKuOd/CPy+dLVuBcbD6FUvegkcjnKabHKsCidEKQjOrC2C
0Ee+a64J16Bhvpep0+p86BGcJVtrWYuZQoyvtBOZ4/oj+yf5Ifn7393/v9rP
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
ir25UxqZ05joq3TK5MIvKpbOnu99PpKJ7IP38lnKNAxbdDj7x34WUooXz4t1
peH5jh82HAYL6cGG8L6HhpJX9sVIvmCP44/kl+Sf1MfJ22Cg7ggdc4y/yxwe
e+/V37XPcF4WHR+b/XL2ncrFHekGVw+tZeCupy7MqgwuXhY6pOkTwECJ/IET
8+zG/ClqklomxsTWFUM5Rhv4uKf6LH/OPSZS3ket8WHwsemQA5NSzvzjT9J/
pD9J//7Nj//p+v2/zf/LrIk79vsw4OgDieBjP/j40SXraPlEJiSmbn4a4shH
yrwplYm3mGB+/eHN7wf4f+73+R/UZIwK2Rj89uIaj5XD8KBY3fN3PRt7VdlV
nruGoPpH2OgKRQ5qJEXtvF5NB5kpvToKCwdxU3gWLWIRHVjs3ydW2g0iZ6f3
5WVC9D+/RyevJ+uT5+cZ7u9J3cuCI/NCbxzp4+Fw/NsL/OVs8HB3Ca15ysMj
QNM/M4kD4qUqktpKPKzr2/V2qJkDVW3eCe6FXHRO+2CUlcqF/qwET4oFF01/
TLamBPJgr6VfUOVCLp5suDqh5yEfWIwt3aW5HHRcVsvSOTsIHRB0Ic56/Jrc
T9YjzyPxkHjJfsh+SX1I/Uh9/6ke12+rXunyqEeNMNOB/YZj72OvB6kTB+ux
wl4zo+xyC6r4+fQ7XmnAudp75m9yaMb3xlumrn75Gz1eWB6ZodiIvow5bfEH
GpEfe/3Wu+e1Y88btrFJh+rxgsUSpe71bVjwOODSjb31Y7nvqDRY1D5uP1mP
PI/EQ+L923l7Tv2a3FlXhs95q5uDi5rwwjqDxZ1LKlC5q+2uzsom3F6/MqVj
byWGB/mkOd5rxPv2pz7cWVKD7IJPt+yG6rBH4mnqoEkdXlui/25CUBX2acSI
eks2oO6eY94zxMpw5siD2uHbpRgt/P6j7a5mPLm629yMXYy7XjxbcO5zM6as
7esU/1KAggUyaw7sbBl3PVmfPJ/ER+In+/uneFgztGfMlkPYfussfY4xBeOX
PYizep0G60pkcrc7/kDtJVteBIVmgmF9hEjOpSQsue9dH5mbC0dMiktti+Mx
II1qXCBSCC8kD3zb/TMGhT4u2fzcoBTePVC2+5wXjnuXr2hq4yVA1bfsPqvS
VEw5f0K4yysKfu2z1fzKThu3n6xHnkfiIfGS/fzt/P8DAqqYcg==
       
       "], {{{}, {}, {}, {}, {}}, {{}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{138, 139, 140, 157, 158, 159, 160, 161, 162, 163, 164, 165,
            166, 167, 168, 169, 170, 187, 188, 189, 190, 191, 192, 193, 194, 
           195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 
           208, 209, 210, 211, 212, 213, 214, 215, 216}]}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
            261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 
           274, 275, 276, 277, 278, 279, 280}]}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 
           304}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{363, 364, 365, 370, 371, 372, 373, 374, 388, 389, 390, 391,
            392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 
           405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 
           418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 
           431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 
           444, 445, 446, 447, 448, 449, 450}], 
          LineBox[{454, 455, 456, 475, 476, 489, 490, 491, 492, 493, 494, 495,
            496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 
           509, 510, 511, 512, 513, 514, 515, 516}], 
          LineBox[{558, 559, 560, 567, 568, 569, 570, 571, 572, 589, 590, 591,
            592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 
           605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 
           618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 
           631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642}], 
          LineBox[{673, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
            689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 
           702, 703, 704, 705, 706, 707, 708, 709, 710}], 
          LineBox[{716, 732, 733, 740, 741, 754, 755, 756, 757, 766, 767, 768,
            769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 
           782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 
           795, 796, 797, 798, 799, 800, 801, 802}], 
          LineBox[{808, 809, 810, 831, 832, 834, 835, 836, 845, 846, 847, 848,
            849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 
           862, 863, 864, 865, 866, 867, 868, 869, 870}], 
          LineBox[{893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
            905, 906, 907, 908, 909, 910, 911, 912, 913, 914}], 
          LineBox[{922, 939, 940, 941, 962, 975, 976, 977, 978, 979, 980, 981,
            982, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 
           1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 
           1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
           1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 
           1036, 1037, 1038, 1039, 1040, 1041, 1042}], 
          LineBox[{1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
            1067, 1068, 1069, 1070}], 
          LineBox[{1078, 1101, 1102, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
            1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 
           1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 
           1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152}], 
          LineBox[{1156, 1157, 1158, 1178, 1189, 1190, 1191, 1192, 1193, 1194,
            1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 
           1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216}],
           LineBox[{1244, 1245, 1246, 1263, 1264, 1279, 1280, 1281, 1282, 
           1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 
           1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 
           1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 
           1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 
           1327, 1328, 1329, 1330}], 
          LineBox[{1334, 1335, 1336, 1341, 1347, 1348, 1349, 1350, 1351, 1360,
            1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370}], 
          LineBox[{1376, 1397, 1398, 1399, 1400, 1413, 1414, 1415, 1416, 1417,
            1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 
           1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 
           1440, 1441, 1442, 1443, 1444}], 
          LineBox[{1448, 1449, 1450, 1465, 1466, 1469, 1470, 1471, 1472, 1473,
            1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482}], 
          LineBox[{1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
            1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 
           1529, 1530, 1531, 1532}], 
          LineBox[{1538, 1539, 1540, 1561, 1562, 1582, 1583, 1584, 1585, 1586,
            1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 
           1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 
           1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 
           1620}], LineBox[{1626, 1643, 1644, 1645, 1649, 1662, 1666, 1667, 
           1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 
           1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 
           1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698}], 
          LineBox[{1707, 1708, 1709, 1714, 1715, 1717, 1718, 1719, 1720, 1721,
            1722, 1723, 1724}], 
          LineBox[{1737, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
            1751, 1752, 1753, 1754, 1755, 1756}], 
          LineBox[{1773, 1776, 1777, 1778, 1779, 1794, 1795, 1804, 1805, 1806,
            1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 
           1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 
           1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836}], 
          LineBox[{1849, 1850, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
            1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872}], 
          LineBox[{1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
            1899, 1900, 1901, 1902, 1903, 1904}], 
          LineBox[{1910, 1911, 1926, 1933, 1934, 1948, 1949, 1950, 1951, 1952,
            1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 
           1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 
           1975, 1976, 1977, 1978, 1979, 1980}], 
          LineBox[{1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
            2008, 2009, 2010, 2011, 2012, 2013, 2014}], 
          LineBox[{2018, 2019, 2020, 2026, 2027, 2028, 2029, 2030}], 
          LineBox[{2036, 2050, 2051, 2058, 2059, 2072, 2077, 2078, 2079, 2080,
            2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 
           2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 
           2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110}], 
          LineBox[{2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
            2138, 2139, 2140, 2141, 2142, 2143, 2144}], 
          LineBox[{2150, 2158, 2159, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
            2169, 2170, 2171, 2172}], 
          LineBox[{2199, 2200, 2201, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
            2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 
           2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234}], 
          LineBox[{2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252}], 
          LineBox[{2261, 2262, 2283, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
            2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 
           2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314}], 
          LineBox[{2318, 2319, 2320, 2344, 2345, 2346, 2350, 2351, 2352, 2353,
            2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 
           2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372}], 
          LineBox[{2377, 2378, 2379, 2386, 2387, 2392, 2393, 2394, 2395, 2396,
            2397, 2398, 2399, 2400}], 
          LineBox[{2409, 2410, 2411, 2412, 2413, 2426, 2429, 2430, 2431, 2432,
            2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 
           2444}], LineBox[{2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 
           2468, 2469, 2470, 2471, 2472, 2473, 2474}], 
          LineBox[{2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492}], 
          LineBox[{2504, 2505, 2506, 2511, 2514, 2515, 2516, 2517, 2518, 2519,
            2520, 2521, 2522, 2523, 2524, 2525, 2526}], 
          LineBox[{2539, 2540, 2541, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
            2552, 2553, 2554, 2555, 2556}], 
          LineBox[{2584, 2585, 2586, 2600, 2601, 2610, 2611, 2612, 2613, 2614,
            2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 
           2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 
           2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 
           2648, 2649, 2650, 2651, 2652}], 
          LineBox[{2658, 2679, 2680, 2681, 2682, 2703, 2704, 2705, 2722, 2723,
            2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 
           2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 
           2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 
           2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 
           2768, 2769, 2770, 2771, 2772, 2773, 2774}], 
          LineBox[{2780, 2781, 2795, 2796, 2797, 2798, 2799, 2800, 2814, 2815,
            2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 
           2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836}], 
          LineBox[{2842, 2843, 2844, 2865, 2866, 2867, 2868, 2869, 2883, 2884,
            2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 
           2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 
           2907, 2908, 2909, 2910, 2911, 2912}], 
          LineBox[{2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930}], 
          LineBox[{2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952,
            2953, 2954}], 
          LineBox[{2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970}], 
          LineBox[{2974, 2975, 2976, 2983, 2984, 2987, 2988, 2989, 2990, 2991,
            2992}], 
          LineBox[{2998, 2999, 3000, 3032, 3033, 3034, 3035, 3036, 3037, 3038,
            3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 
           3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 
           3061, 3062, 3063, 3064}], 
          LineBox[{3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3112,
            3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 
           3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 
           3135, 3136, 3137, 3138, 3139, 3140}], 
          LineBox[{3146, 3169, 3170, 3177, 3178, 3196, 3197, 3198, 3199, 3206,
            3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 
           3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 
           3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 
           3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 
           3251, 3252}], 
          LineBox[{3256, 3257, 3258, 3266, 3267, 3268, 3269, 3270, 3271, 
           3272}], LineBox[{3276, 3277, 3278, 3286, 3287, 3288, 3289, 3290, 
           3291, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 
           3318, 3319, 3320, 3321, 3322, 3323, 3324}], 
          LineBox[{3330, 3332, 3349, 3356, 3357, 3363, 3364, 3365, 3366, 3367,
            3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 
           3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 
           3390}], LineBox[{3396, 3401, 3402, 3409, 3410, 3423, 3424, 3425, 
           3426, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 
           3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 
           3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 
           3475, 3476}], LineBox[{3480, 3481, 3482}], 
          LineBox[{3488, 3489, 3490, 3517, 3518, 3531, 3532, 3533, 3534, 3543,
            3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 
           3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 
           3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 
           3577, 3578, 3579, 3580, 3581, 3582, 3583, 3584}], 
          LineBox[{3588, 3589, 3590, 3609, 3610, 3623, 3624, 3625, 3632, 3633,
            3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 
           3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 
           3656, 3657, 3658, 3659, 3660, 3661, 3662}], 
          LineBox[{3669, 3670, 3679, 3680, 3681, 3694, 3695, 3696, 3697, 3705,
            3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 
           3717, 3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 
           3728}], LineBox[{3732, 3733, 3734, 3749, 3750, 3751, 3752, 3753, 
           3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762}], 
          LineBox[{3770, 3771, 3772, 3773, 3774, 3775, 3776}], 
          LineBox[{3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794}], 
          LineBox[{3803, 3804, 3805, 3806, 3807, 3808, 3809, 
           3810}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.2090629622270728`, 0.}, {0.8350950368936221, 
         0.5272012520796961}, {
         0.8350950368936221, -0.5272012520796961}, {-0.3634026589311146, 
         0.7221948220318323}, {-0.3634026589311146, -0.7221948220318323}, {
         0.15043374943398566`, 0.}, {-0.13475554313192517`, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.5, 0.}, {-0.5, 0.}, {0.5, 0.}, {0.5, 0.}, {0., 0.}, {0.,
          0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.290785217297691, 
     1.9168172919642406`}, {-1.8039170771024509`, 1.8039170771024509`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzsvHdQlFnX9gsGQEwkAwpKMACCIqggAsuICiIKCAJixIgKks0ICCJgwIQo
oKiAYgIxA6tFJOecJefQie6mSV/3nPP6VW3qnKmp533OU3W+d/6Zumb13vde
6/pdu29GZuQPOpgeHicgIBA3TUCA/3fXp5qafmbjKI5haosraoaQ0HBvW9mj
LbEj8F91QsPkVrWp/M9H3LCs2fiLi7023135dR1qt8Emnt5yZ6EYv06Zo70n
7g0H6QnL1fl1JzExNl/3FtvM/avu1bN+3n0Wuq89Yc6vt1zR+cHXO6PMF/Hr
OapPdgRcYqJL+5tD/PqUhlFXvlZprJ7Jr7sFOeawj9Ax1v35VX79kKe7B4en
2ZMf/1VXC+4OtjOhoupTDQd+fR2lWfIwT++MtR/Pr08XFiuIdOjGNo8PNvy6
ZXh65DOeNj4OE/n11kzNsAtr25HJWLKDX6eKXUm+yNP3/CeL8Oufmm55WYg3
41WJ9Sv59ed3PzlY8nTzrjJhfn3GqZxV+1N/o3VT9xV+/Y1YZOBBnjbXdlzK
rwfvP8ySOFKOmeajpvz6JQm6zAyebnM8PplfF0tu7wuYnoeOj03/mp/5c/FJ
wTw9YVTur/OdT9qU2fziG8o8tLvDr588ZXyOytOLRmgjvry6qXhSrbbxIxBP
kL3Orz+osvafztOVo8FL+Ovtw1fYrl2UCoskh3bz68cWmF5bw9OnPruq8evD
HGGq/Zki+LHbUp9fHz/Ndx5f+6VKCvHrgdOGQr7kV0F9y+0gfn1voZITX0+c
aCHAr9+wVk0e96ABIrWfB/LrVWmRu/g68UjjX/OXqTjlp5zWAkl3ni7j13UL
Qg4o8fQTueWi/LpNt/2kHf0d0NbcfoZfR91HGiY8PfVehCC/rn3PUt9tQS8M
MLZc4NeVo6IdXHm6z36rIr9+tX+vc54yDbTUGt359fujAnm5PL3Fb98Cfn30
lZzrgXUMuPxk7l/nvxn6WoOv9wT/X/M79XvFNebufljw8MFffHylvFHi67ue
EyX461XKFCv9HNlQ/GqVNr+eId34iK8z7KP+6t/RXaN+zrUBkDOpP8KvX5wh
dZ2vNYpxEr/+wefElrcRg2A5IOv4Vz7y5H+84emn8s33kzYLUnZFFBeV8/L3
e3PBM76+otTD4mmYPvd5O2ONAEVufoQsP591L/I0mDwdrpo+kZ9PN9f64+b7
RzBt7+dh/vpM6Q/iu3g64unhLP56DPjh+GPLEH4/GP6dX1+2LPINX1/3nCHC
X++z0nbh0uVcVFmkM5W/f7CcVhhfOwtrtfLX276/qvpImoPT/IvS+OtPP5m6
ja9TBK1z+HWNCpsB4XEsPNRbMZ6//rvhp80iPF04kyHE39/T6Gi2SycDbxac
y+Ovz7q8WtiVp1dtWVbOX78/V+ZoQxENJW5mTuKvl7tsx+HrJaUd8/jrL7j9
ePvYrQ+nUC/k89fPjAu4GsbTwiu+ifHr1zMamK6bu3B/I7eMXz9Y/FjUnacX
BeyX5Nc13OeP2zG7DU/abJvD31/Kx1lgJ0+PP7tlOr8eEsa8pdzRiBuWFwvy
61M+LTylwtPmOZQk/vm0vpl6THSpxZNfev+av79E/g9hnr559+0s/vrnJ23u
fZ1RijOqllfxn+93bdehbzy9M3FkBr9+rXhdTcXpTPS566/IXx9pMuldDU9H
eMj+9fxnUQtHLtnFYRxnCr9fXNZy3ekqT8dsZ/LnBbt/z5SOk3oPLW21FP7+
gQ4+Na94+uWgAY1fT5WxCqanZYBHnCWdX8+N+rqLxtPnntf+5f+3F93v036U
wKnv4tP4+3PXiWmm8nTaimD8y9/JZ7Ik5GrBvnrfX/ORY2y3FOfpkIs7+TzC
r9A7OurYCPtrjf/icz9zeGgpT+ssV07k19sOH35s0dsKez/WtvPrlECn6F08
fZ/G/Kv/+9RNERdku+D25Lm9/HrxiMmT8zzdt1+hkb8+fuv6Zc+29cHWuaL8
82CEn/6uSJ7OGar8q/89KnW05iQaZCwtFeefT0P9YSBfw09dNr/+kZte617K
gKk5lVL8um1L6lO+nnMp4S9/ult3r5vc0w/tCeby/LraHevvojzd6KX6V35M
nPI1wydw4GnZYf55MW9DbEMYTy8/WJHN398inHtxuQwX6nWDF/HrE0Wvz+Tr
3PHPOv+af8nxplTNIVjq+r2Zf36DdWHGfP2o8eBf+ahLNxXebcTL+94Jdfx6
2O6KcEuePuXV89f5Dsx/eNR0NwMF/u+/ZpqK6Uh/7YSFrHHKpXX1QGi8WFex
enhdOWYzkndoy7QBobHJeMKP4+t+wn/t53NT2EkvDP/o9d5CB6M/f/mjexSF
L1eu/d/aZdtFiz1rP/3RL1sil7udTvij6y5lTLn1OP6PFkiaJxZtZ/1Hs65t
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
bOw5qUaPiKzEVK5nRsL1dBRYslFMtKsED+z45TbhcjJuj9YyjYn9gbUrtSw2
xX/Dwhn6Kw1qvo6Z3zT9LR43JqfikXvrPqbKFuCOlx7KtEoKOmrGb1bwTRsz
f9If0j/SX9J/kg+SH5Ivkj+ST5Jfkm+SfzJvZB7JvJL5I/NJ5p28D8j74l/l
9T/N49/l5Z/eT/+U77/j9e/4z52kpf99agomFf46eWsS731o7eeqW6b8/ZRr
1N/QMHTB23qt+2k47+KFsA87aMjpnW0duf4rnr73TG9RMx1DtB8nh/98jW6F
LH2LZAY+vRLpfFynCYWEzvUYRvHm2lgdnbkmG+uz10x9EUzFNW/8x9n/zkfd
2fcFc2L68InkpmKtzUUoNi6jJ3RpL3IHyp/PiC3B8GrPGruv3ZiyUTjlhn45
LijJEOrZ04WT39WwGhdUYc2cmBcs1U4sr9yWRbGoxd2bVA1hZQdKakYdsD9S
j0odB6/6XGlHNf2fBZ/zG7CgzKv5oXj7mPORdXI9uT/5fPJ85PnJ/sj+MzLD
ymnSETgrz1a6fz0T31/aKeSR64S0wwPwMp2JKrlNEy69vgcTHmbGO23rR/O9
LbKF42Jgx9G8MzsL+/Hr3IyY8ffjoaxA+OImCxb2a3/Noyp9hfulriXbq1lY
LZQmoP4NIch1tsep/Wz8st49on7BT0h+33f0aQsbTUc0pF6fSAO79pP3hew5
uKZq2VLzN5nw/aIg6wuVg45lp3oqunMgxfGN7xe3AfQ4y1IKkyoAjx+OWyYO
D+DvB2VqunGFUO9gtCbCm4snDCyvbt1WDOzzevt8RQdx/P10ofyqkj9/nk7y
QPJF8kfy+Xf8/Z82T8axl+Ett2th1+WcDW/3NgDLSpa2Rr4G9r/yf34urx4+
mr3J8/9UBTcpXO51nXrIP75gefDhX7B/uvSs9QvTIVvNDZMoKfBL85u6xN0f
UJViFr85FOHtg2Vpl62/gH/QZYMvP8rhlcd8WmBTLezeGRyjyy6BhKLX2/QX
VIPGzWfWZ/cXQc3XIzeVVlaAstaZlAKhAvixe+ZaQ6lS+ORkn766JBvOnN2V
4JtRCDmTLX0cpDKgPfu8t1dcDhzz0pq8xLsemlY5ub0Kb4SCfjmtYe1G8GnW
S3ve3ASTBaav7bnVBBd01k34MtgMdzwLdsaWNsPOkpedHUqtY85L9kP2u2vJ
PU+6SCus2mO/6olNG0yoT3OrWtAGbouaTWc9bwc7X3f7siXtsJ3aukpqpAPW
Cn29ZyXXAVw3g0qbw11QVHpaw1qoEzY2JlW5l3WDpf2FS3kNnUC3EqmhGfeO
6Y/s/2uJ0ZBzaBd4BbyPoIT1wfSrwj4zjLvh05kpVnEeVDgtfiNfa6gbxALY
Ts6KNGiblhyy71UPCJ2kCi3No4HYUxP3YsteODd/o3ylBx1add37bo/vg/dU
qglLkQFPaLlhmm/7wDW0XN8mnwGrj7rdVFKlQlB5xcPac0xIuXHYdtIVKgy4
P85yXtQPGjVXNr4vpQLnyX7qoqJ+eO1VdHq1Cg1WBR1Nb7/IAquPe4V+XKLB
AXfG5FhlNjyg+r83KaYBO3/rteOlbJj06VJX42I6ZBsG/Vp4hQNJlNOLfC/Q
wU9427wq1QGgZAcUbCykQ+lCqR7PigG4enG38uTNDPhSp7fULY0LKYwZxotf
Mf78eT3JD8kXyR/JJ8k7mQcyL/8qf/9unv6Hl/93Xl5l25q9ja0HZckUMz/B
UkQ3K1PbB7/BUmu8tJxbCR41atKL5HFximJaI59RjB63L0Q8npgPwYdkny18
G4sh66eJnlTJgzsF1eVCVrcx065gBc7IA927tvdF0y6h5xFxC9v6KjAo7W1y
Ni3C9VIT/OLnVEBRpmc/+0wB0uNY+kfCS2GVm7uD9JEcrHy8oFvXvRgsAl9E
ym9Mx8SDDx5nxBbC7IdCjs6hP/Dg7d17H60vACVU8WWIfkb7xsvpUyXzYMEr
6SLXOa5o8HKr/R7xPEieaejQUX0EX6V2h78Wy4MpJpmh26fr4sPuEK++2w1Q
63ys5+naUnQP//ZyzrlGSG10cIjeVYqVznGWCluaYeD224+Si0qxuj66aESo
Ffa9i94yfU0Jhiaoj9N50gYTE2xkT9wsQqvKq72O47uBTqFKr5E5jlah1Wtf
8bSAmfnO/nF6QD7fI64qb1xNO1glddgH+heg1f2tAkebOuC24qMX2Ro5KJCq
HWLyqRMmGNonTvuQhmqPDoW8MO+CE6VPVkzIpOBrXasLKdgFa1SvFNWqfETD
zBgc5XRBzRm9UoPmJ2P6J+dD+kP6R/pLzpv0g/SL9JP0m+SB5Ivkj+Tzv9u/
f7cff8eHbG9SzZaFv+Ho/sd7w6pb0Cv+s5pAcS2c3T688MGqFjxvVVl7z7MG
uqwZKpG3mzFFk3O4/FApPKGuVqjKrceq5vE/3scWQeG47YYdOnVoFHrr/DTP
r9D9KPHcpTXJeDB+TtGJg1Ug7bjJPYz389uerRqlRYYVsADNFbefaMQH5Xvm
y8IniJb9Etei+QW5AfaBcxUaILjhwZWQ822YH1fYs5r3fnUjZ/wnt59VOHRy
84VNF7IhutWxJ2FeOd63Yapwd6RDe22yk5JZMS5/8ertx+c/QefS0luxeXnI
Sa/bZ9dDgU6WLnu2dwZSs+bpKh1KBKdKepXH6hTUZI/07uV9b0Sm+S/VVOsY
cx6yH3L9HmGjCH3JZggZfSoo0d2J002tqW/PtIBBi5FWcmI3ZqmY7b6V2Apy
TibT6x71oliLjfFPVhts3fGtefIGKo7QbLa2KnaAmaJmoLkuDT+k6KQ92NwJ
6mFHy49q08ecf4Pngo1DInS4aHfPT/ziIJrr3zvrdKwLPv1+o7NJj4ECcxkS
s7y6ee+/0RL7NjJxV9DHvaMPeuDUyg/PLvHel9sy9ZRfvOmF7UVqGqfMWUht
2HjY7GcfGH16Xii3h43PU7fE/7CnQkM/nl1jx0G9hCnrzvVTwblu4qZrJwdQ
VOr4FM3LvO+HpCHjIhcuTqrZNL5OnP7nfZacP+kP6R/pL8kTyRvJD8kXySvJ
M8k7yRvJw7/b3/+0fyRPpJ+L2iYItooNYTyz4jwnngkOmb0qzT5DOFf2p2Ox
NxOWMBL6lg8M4dumagWXXcw/v7/yM//6oodz6FD2LeiNzT1Byuwjild0lejQ
7XZiyWcFQYrDJ9NpvxzoULK9wIOlPojMC6syhqT6QTgmpd3YlIs3w979GDjb
D9fNthiLuQ6g+syHV3sb+uGMb3D08occfLrzyr7qbSyQsTfc6/9egJKkILhk
5CsdDj9QMyjSF6AIxC4tbxNiQGpliXtnxTAGd8VpZwwzIFh98PitryN4crpw
XU4MA+6yF6cpPhpFXZNqCS8Lxpj15P7k+cn+yP7J/cnnk+cj50nOm/TjX51f
W+r1VosRNk6wdOAUP2CBd4/KeQs7Nt6aKG6/qfnv65sEnA+rZ7Nws+2Rz8s0
2KA6fPBFswYLF+11qA2+wgadZq6O86N+XCqiWnu6iA2nP+osqpnQjwdtHn/6
uYAD6Y4KR+c7MDHRknL8tgcHDGbGD+tWMXD98ANWeS4HOl90dKwwYCDVSNH2
wYIB+Dg/c4nwBzpmbjgYln9hAKK8d/z8IEfHnGbzz55lA5BcePm9zk0aspcO
vnq1nAvcSZaMRyNUNFTY5WF8gws2qmUB5aepmJF8cP7xbi6kneEyqrAPz0xY
8GTYaBA0ZvRMNRzp/fPfj///vb+dpos8Z/De391t9i5ZUUABncAn2WIudHg6
X629QzcVJuet/ChsT4e3O29fGY5Jh+rd+5e3yNLB4Abdceqeaijyol9om0UH
6b6ej2Jn66DV7daiIz502EbRTgh4lQCWepoTg/3ocNL2qkhEZviYzwuNrPz0
2ZoODN4t/akuFxa86JUINqTDgmU7UzeJFsHBn/uy7+vQYTdtTaHewlL4udv/
9y8VOgTbrr21YW3FmPOQdXI9uT/5fLJfch7kvP6uX5vSLeODUlNRb7XxVP21
dJBts/rxbEY6Hri3rrq3mQbOWcaqYkczsdFOZ0+MPw3yn3BmtP4ow9njFnke
2NkD3zt7V1mVV+Ckws0fj+7tBrUKA8qIdDVqvbPXKvXtAh9vUPAMzcXQs77p
51qpQBmOeV7fUYDZE1KrWzZQQVtyBl56VoSdOUGLL1zrA5en7uNu2pXghCNC
DbsDe6HIKXh/gkcyQk7tSc05DND50lwecfQDznXd2TWfyfhzn72Qbd7gW18A
kdYhmrr7anHa7kTDHamdcOrznY7OjN8omuoRuk6uE/ZUSQZ6L2xACaZJOT2Y
970X+PRc2slGnNZBjXsj1QEt/jtmOH1uwudHPr/JCue999qPqH8bx3vPVB81
jlRph2TBWPc1Ua2Y+FtnIO9GGyxbf3VcyOZ23Nl7WWRmTytkBIS++9zcgRuF
zrYpr2sFr+OtK4wvdWFH74P0s4Et4Dn3XEODfw9uVNulZvGc93P+1+vof7MP
k7Qshje+awIN9lv5XYeoKDEQmHhsRhMYm/mVqPDy0xGuXBDp0Qj6c6Pv+4XQ
8OQkq5ShygaQHDwi9EaDjkMzt8h66jRA5+tcndpOOkbNDBefd7EedNNSIPMZ
A4UYHhfWXP0Nz3Ud9w7bMvFeYMnJ0jl18GOiQP3EOf14XLh2TgPWwGxHzgSp
9SwcCXf6cTivCoplWHfyHNgYs8URimdWwuOXl3cdj+Tg5ZsX7rwJKQfZhLkS
sysHMHxEL9HDrAziF3EvlksMYvKjptQm/VL42GVo/Hz7ED48+fhLmGkJiAjJ
yKyyFqRs73PhBM4phLM/X6zOaxagtD8+MvG7SyEIvUh0OKU1jM9E5HZYfysG
rtWupldyI+hz5oVl2dJiuCs6I2aP6CjqRavmi78vgtxPg0lezFHMe/nx0xT9
IujdZ/DigoMARap6UWhL6dj9yeeT/JDryf337X/u6uT9AnNEtXxnRjAhfMFJ
+5NzruBBwUrqKcN+KHk68NCz/iHIXR2Q6u7vh1vHjd9Kq7wFwxTrGounLOgN
O1bu++IzUJd9CdhnzAZhp8m/r4hRwGuXrrEzlw2XXGI/TDVMhRp2fiMtmgMb
haPL469mQFG1zbQ1uwbG9H/WWN7sqHgOaAt0569qHYDA0ow68Yf5sGTncu17
7lxIzt+uZ3WjEF7lLdlsMWkQJi9yClq2sPjPv98g50vOn/SP9Jf0n+SD5Ifk
i+SP5JPkl+Sb5J/MB5kfMl9k/sh8kvkl803mn7wfyPuDvF/I+4e8n8j7i7zf
yPuWvI/J+5q8X8n7l7yfyfub/D4gvy/I75O/u7//03n6V/NzUd2Y/VSKA3hr
3SyvwmbwNNliMn8CB2r3J151bmmCKXQzgQYmG24svfZj6kAjfFgeX3/Bgw0t
l+1qimoT4Uqyotw0dzYceBP6IndWDDCHvJa3uLHBq9Y0KsI2ArjxS8pzefra
DXrWhllBYPZiXnwWT+u+yLi48a0P1Oa9CMvg6TmpzauuX/eAh2ryD9N5OnDo
rZ1a4174PPmgI19TJVmS/SqzgPb0VGPtVg5MSchRe6nUBrYGv7wVqtkQgBkL
1UwbwH1IVPF4Khtufz/T933Xb7CSWliX8J53fom402uFamD8DcmPE5+wYZqP
SWbbxwpwPV4WbRPMBjEx49E4u1J4F3Xq0yc/Ntz99FIsQqII4jdV1s/0ZMOK
viyu7eVcuGggvfjCeTZsihII+FmeBhbyzKn7fDlwPjyXO/lix5jzkv2Q/ZLz
IOdFzpOcN+kHeb7+mbdWpb/igL+wY9Duqk6YJr5NTqSQA0vkPJu+reqG8OlK
2fIDHDjQPjykEdwDzyUWaEkpDoDy/o5KSncvKMxZa/d7+wCkbpDX01CkgvSi
C6bevPdmvXcT+m7kU8F3VYWgwOsBuEwP93I7T4OTRuZOu2oHIGAqld2+iA6U
qGkgJ8aFl85vGpiFdDh3feH44Q1ckAsJLIq5wIBQVkhylwcXes8FZU1YzAS5
rmNnut9yYabM+0yRQiZMPnZv7mgLF+6dZ+YnnOuHPafmJSnOG4TTD61rRRaw
QGpwvIW15SCEuzbSJuSyYLm4QWvk7UFQEguc+tKVDT7n7pvm5gxC0eGN5wXm
caBaMPryS5EhsHPmXJ2ZxoHV0e6ntDYNQb12jFrXqQF4fEJExt1rCDZ+MnO6
NIMLE7ZZBRyjDEFwF9esIJELzkYnvk8eHYK0irCi+kOD4HNC3kFq+vD//v9b
ELyQPJG8kTySvJI8k7yT+STzS+abzA/J7//w8v8tLxp+598v4PnJ9EV46lWN
08s6qnKL2bB1k1EDN74SrbIi4UguGwydFbLnNpXj6qZUyUsMnt9l83PuPfiN
8/OKfL+Lc+Cjv+DrSaW8N5CNKg+/vGTD26JhGU7WZ5y0dv525zdsUN8as7G/
LhVjzasKniWwIfbY6/XB5bmY5mUjb4hsaH22yefl0eIxdXI9uT+5njwv2Y/R
+pHqZ+ZDoJ3kKW6kPYAuGv7tB94MwTW/Cm1rZS6arC/glggPw+MDt0PKpQdR
xWT9MftFHODYbxA8u7AJJeMcBg/rcWBcTvGpea7NWMuwXhtrwYGil/G0gZ8t
6DNrgtYaJw4cmVgfOFmiDafL2P+ecYsDqXU2YLavHd0Fb61e854DbSsXTSqM
7UBMd9oUW8SBPFHo9GF3YutpyfFH2By4ZBvVeHp9N94zr8sSmDcAI4PnVtwK
7EGnMugXMxgAm4Rq+c7SXrzA1PK67zAAhhvsdulPp2LC27Qzt0MHwPzrkzbF
D1SUmdj9UzB9ALbpPkt/YUHD9+xojzbmAGjm2Pf/HKChiy/35voFXBA6znW8
9JiOdnFNkyR3cSFTwkSnVJ+BTj9nF0z344KX3Mz4knoGXhc2yen7ygXdjkFt
fy8mvrvoOxLfw4X+kwL5dMV+rF+IR6wUBuFtrKKL+K9+lBEYmNDE4/3Yi8NK
LYdZeHDKikoTHncK1mldp4TYmGDo2BTxaxBqMzclx0axUfL7G8Xi4UG4z2yK
CDfg4LK9Z3z3r/jDK5K8/h2P/+Pff9a/f5o30u9mKe6ZjHmNeCzAfEJQdAE8
nWTlfWZiE7qvWN7wcUMBzFNYfHhaSxNm/yqQe2iVD4tP5Gn0BnfgzKN2QszT
keBxtF59m0kDrtjZrHqDt95P/eTWWs963NkudbDwYgFYxNoIH1Bowfok1uSJ
a3JhleCz2doGrTjHPq3TyDoLpHq/9bZvbcNpFbPlf+WkwVbdA78zFrWj9fR0
iYzoFMiI06rPLWvHs0vakjtFee+jUvWtPWYd2Pr7inH1aBxITNWo1a6sxSly
p2bkvcmHF4vvNJs3VaEk60TPw3m54PLxBkNPrwLHf52T5eCQOeb85H7k8zwu
rc2e0VOKT1xTVXVjU2HJwhU3Q6RL8GjdbKkA/WRoFFMP2l5RhApzfhooCsXD
wtfaGZe0i1BMqzBAHu6O6Yfsl5wHOS9y/qQ/pH9/58c/nde/2v8Q66rJecoo
Wm77VpgiwkFtsZCR+DkCFK/J0d3aVWzez2nSpka7BCi/V6Tv3v+a/ef3kTO2
jAT4vGahPsTGJ0cJUnLXb7hi8p6FWZvPPKteKUhZdTBmz7AgG50e1apY5Ixg
suYBqtoZDjIsWOhTOYzBFyal/6jh4Btj9d+a7UMYKLdz1g2jARQcvVex75cA
5ZZtycA4C/aY/cjnkecJdrYPMecMYqr82ydBSWP3I/sh+yXn8XfnT0reYFBu
PYh39+/xHBbm4sbgb56yyVyUejGSlG3GRZXe/M2LFXj/vO+uFecJF08VeT9i
+g7gYphv5t3HxalQdv5qNwe/3Q17dRIG0bNTLP6HJefPf79Azofs79/9fPeL
OyS9qKOoKmActVyDA9fNfhd81xCgGHTvD383ngPqaputrU4JUHLqT3XVlrL/
/Puwp2mXDzm1scBc1OhGr7EgxdD8w9yQJWw4mvfxpWOtAEXaSVfy9mU23AqT
O245OIJa84su9IRywK2lutNTeATT4LRIidAArNEa/LpkxjCenW72qd91YMx6
cn/y+b6bLbK3LBhCJ/NfU4zbB8acl+yH7Pefnk8/fW1QgO8gbnkW7vhTgwsL
xJLlbndwUVGw+uKDS1zQVsi7amXMxQmnz63IzObC+WHHxOa4AezquHB395xB
6HoalaoxawDLXRrDNp0YBNy1sWpX8R8/xvTz735ecJSJ+qh1D14VbVsUYc5C
v4gu+lnlXrRV9X48WZKF48SznMUHenH0+hFL66L+P3lUXz4no1CpC89pn3K4
uEmQEuhvWel6qwvl5B9JBecLUA6ehpHEKd34Re/lIhZzGLmOi/bcXdWLq9Y6
yxjXjeCLrzFt7yN7UN5WsaLLlIUPWSKCTFk6vowZ+bxwIxsXRnzUDnlHw8vD
9hITtTh4bttCr/aNNHxmY9/mv2QAQ0Ysa5trqZgzLir01goq9p6do2p+oB/1
3PpEB3qoOCFZxS6HzsSigz9EU2JouNHywWiKLxMDM+aGdtnxnrNp/4iWLBNP
Ro98cVVg4Gr/q/uXfGKg4+jxo/sbGEiVF14UtpOBDwtsX8Q+ZWLB9JbtQX10
bJtT5WR5qB/LTedXD96k47nnDYNh8lyUWCb05vU5Kh7++kFqCe97/pxlu9m+
uVQ8EtqwfLnEEEb2DT0buNyHlzbbm72fMoxqcre3ixb2ol/OJJPIjFEsaFh8
fOWMHhSPszhJsxKgtOV/2M0O6sbOJVHW2xZ34wrRKQOvE1m42tsueQ+rEzVX
fVyXu4iNCluPVO7L6ECVTzOl+oPZY+ZP+kP6N5c5pXxTWDs2XnCRUhLkjHk+
eT7SP9Jfsr+uczfKBQdakeNy6O3exxyU3WdmImjdgrcLMmb81BnA909s9DdS
mvDVzeeGu2oGMAqin2ctaUSDeNa2GVe4OLpmldfdx/Vop40y45UHeTn1Wvfs
6O8/9xc5X3L+pD8kPyRfJH8kn6T/JB8kPyRfJH8knyS/JN9kHsm8knn+p/yQ
PPy7/ducEqp6PbsLDKcItS5lFMDmG5ccp27ugonOJ2Qt7YtANGlNnciHTlDU
vt4RnF0M9SJ1l3f/aAdzfdkrCarlEFYUI922rxWsOYdcDkhXgrHIuwTlnCYo
kxg4rn+pEr6Xqi5bYdENefFi0+rtc0E2dofl2sxu6Bjs22+SkQHOFwOjzK/0
QJJAbGRVcDJ4+ek9zDNuhEjVg93Jiyrh8MUrMlPK66ECV9Q/d68ArpLy7HPl
ddDuxWaFupfDk145e4/5NbBBdXmjkVoZjOvt+LQ/qBK+OSs/+fq4BE5kent6
KpWDgrjSstbMIgi843RJQzMX3IrCC+e8SoQFx377FOzKgo4wx/Lp82Jhyc0L
RzR1SuHsFJGWFsFCkHvqEdvkVAwjAaG+q+TzYJVxi/fh8kJI+H5Lb1N/Jtg2
LFsQdLIA9rbfCVH3/wWfUhS2p9f1wKhfWPVw/Ysx+5PPJ9eT+5PPJ89H9kf2
T86HnB85X3L+pJ+k3yQPJC8kTyRv/5QPcr4PT4vvff2tHc0SNzT7fuL93J1R
dNDZswNXPldTOOjAgUkJAlSHzZ3Y+W6l80xlzp/3l6lnRN/W7uyGResfM/33
CFLodt9WP3neDT/FNglnJwpQJC9nPTbf1QOvne6YxGsM4sgjTt3sJCpk35Zr
d5wyhI8vOHtH21NB4/Th6I1tQ6i/7769iiwVLnmaPpf/OYyRNW0B6571QULs
tl+WYW3YuDS5UkxxAJYev6nz1KsVg4S5v3bfHgCFq6NvPhd1oeeGzfm/ItiQ
41FeNnSgB392fvsWL80GkZvXTkB/L358cWtl7X0WdB3yTwADKpq7ZMCmWSwI
FV9zvE6ShhEWBys7Q/sheIdV8fkmGoZs2zsuT74fSuSa6bM+0nGtReK33lgm
7PWqTo+/xsC7zhfGGa9mQhTcXD1qy0TzAs3V2ZkMkFM0WfZ+RT9CiHuykS0D
clTnvvw1hYW7sjcH5zHo8GoPIwpaWXjv+PMEsyA6JMaXK837wUYB56CF1cp0
GF2asfRAGAfvtY1rscukgWth6heR8wNokT6BQbWnwdzQ3DQpay6ulbhjclmc
BqGTg8SdT7RgFKO0V12QC25nErxLzJsxcZptcIwTF6JUTmh8lhWg2KWpsgTE
eiFi/qzuxyMj2KHTsOlFSe+YOukf6S/pP7nfTvkN9071N+KMpqJ+o3GDIBPr
WmgX3fDnfY30l/Sf5IPkh+yfnA85P3K+5PxJf0j/SH9J/0k+SH5Ivkj+SD5J
fkm+yTySeSXz/Hf5+Tt+/s7POdtnHO6+24Vv5s6xwK1cQKPKUgfbbpxo0XPR
dzwXjMbNERZd3IOvylONZiYP/OEn8XU523Y5FXy2CyQ9Oi1Icdv8KlDPnApF
HUfaCyoEKMeP1Pbee8Orm3V76icM4Tf3wIKv++lAbwqMtbs/jNPmmyw5PYUO
5kcebXl6dgR1YyIXy3ynQbaTml+r7ShekykdSDxJA/HutV7tRztROyYlpusL
F767ChS76HWg0bFXjyuVB+FzC1PI9GMvVs689nO61gB8l7Rb81yRimbvH8hI
feBAatPWWLdeKs55zrBQ5P28xWpcYib3nYaq9EdOeglsMBUX1XzqT8frobcc
Dq5mQ8XpZsMBKwauCCs0Dv7BAr/Bb6FKqkxU4e6dmruNBfs/ByksE+hH+zjt
txLV/TCSSdHKL+1HuQ4bld0n+2HI+suy7NcsdEn/dT5YoB8sTriIKl5l46Ft
bpE/HjBBisNML9vLQar7qfCW5UzQmKBzrHX1AM4xjHUYyWPAmxsbunbO5GJT
yrKZUxwY4P9AfKc0k4ubGrm3p0kwIHXe84e6xbz3lpgpTRO/0OFhaIzFaZ32
P35mHOzFkA0CFIc3XUkzJtPG+vG/ynvzcCzDbv3fUBKlWaWUBmUKRYiyjEWh
MiUpU5qVJAkVjZqUFEqiVFQyJ/MSkjnzPM+zh2fCY/jaf/x6j+PyR8d7vPvd
+7f3/vM6nvu+rrXO83Mu9y1E+EX6Sd5P+kH6RfpJ+k3WS/ZD9kvqQepF6knq
TfpB+kX6SfpN8kDyQvJE8kbySOaHzBeZv7/xTvod+jXM785qChYIprf67MnH
iGsO1W3WFKyQ6slYey4Hxe3bozVDKKglzL+10CkLl4ks8nGPHcKivnOH+4uP
o/V8rctl0+ul39m3hfkcAKt57tZ3xAYxznelBp9xEQYtVq8VVBlClryr2bmj
yahT4GdV8HYI3yUJzNZ2fI+hLa5X7/AMoH7O0L1Lx0swkdfJ8DRnNp6qt1+W
4xiP2SUeglccslDdwnWzdmbEjPP05mpQ1rT04cnTSvKRR8swvuitSG9oL57r
OJniL1GBxvG7vcvMezBbJ//l/fxKfAmtQT/ndGN7aMq+AoVqXH/UKm3Du07k
uZ6yteFMzfRcjLAwlO7AG/t1P8uY1eKrK0Epfl6lWJSR03d+cxleSuX64FBX
hE5brYWVHIqQMlciTCCvDWnjpUfuTNXi81senzdZtqL0Bbv+jaZ1OIdzziJN
ejMKyrBtM7Kuw1L+nudqD5owpNxi3GRxHc62KtTcptOAPl+vZu87WYvbHprE
bHpbi04WH0QPnaxBZZ3mYds11Xjs4sAyg0XVuEOr8vaS3xV41Nr81vLjlZh1
zZIWqlOAR+LvFle0ZWPKlBND5V0OWq9357W8kTbDL1J/0h/Sb5IHkhfSb9LP
f7c//936/42Pv/nzN96zTmQUFB5uxk9R+d+E7A7DA4cnCg92NaPwrYNSX9nv
w98+X5bjskFZqhnWrF0X9n7nAOw0O5rgE9gEd1tOWca69AMvj5PAdr4m4BOQ
urAwuQ9OF1G6lqwph0bZOC983Q7220wzMuaWg4bdqa3JT9qBuVNytUFvGUQO
f9gi69oOoQK3H8+vLIPzL5S+SlxoB9d7tZX56WXQm3N17wardhAW3Xjk1sl6
WOnS62pA7wE1bZ/CpvAaMAs6tm+OdDfYO+x+cnO4Eurve9SIn+uEiM+yAae2
lYOf/GmxH5/a4bvooVvWo6UQqRkteKixDcLVubRUt5VC28U+z7AjbbA5LL88
1bYErMQcv3BVtoKjvo+XbFgxvHJserb3YCtQb+qmyCz7DsMJtdm83/NA3oVf
5XFEDHhkN77JXZAFYbvkH3MGtcBdv5+zUGT6edPVJ/zNrDbYEqV3dY/80Izr
37972sIR/huKTE9yLppshiPSK9SjZfPBQuFQsExwExw3OrdVgpEN1x1zRURu
NADfSrlXwuM/IWfNY8rm97Ugxd4aV3w9AzgiWlnzmVVgu7jlU/L2H9CN/q8O
KlcAm53X5ga1VJDeT49f5FIKkGgi1no7ETxMpdVtw4tm9EN+Tt5P7v/m7aTb
b9124PwZq/1edhjaixbFyz/tANnt/JyCslS4y1NkUJnXCRnslz5EbafBNb0d
huFs3RAulidttYMOK31pHjXSPbC+NVLqujIDQhtCf1w91gs6x+IkjDSYICZs
PPnwfh+Ivq7d3Ll3BILOjCsviu6H5NdC62T1RyGtwzKkrWoAPidF244fHoO9
xTpHmicH4a0hWrFZseDCp1HuruWUPz//QOpF6knqTfpB+kXyQfJD8kXyR/JN
8k/mg8wPmS+SdzIPZF7IPJH5JfNN5v9vvP9P4yO2e0+8uCUTO91bvB4KvEMR
dW9Tl3ompnrIWPqffYu8XFsWlR4eQZGbvOmW5UG4Ux90DnoycGqdRPPwkvfo
Nj/X2jyZjs69+7KkFELwzAGb+1naw9ggEyA9e/NP5N9xPEj29ih+Hs9/QREJ
xBPJC0pDw8cwT/lnv4pmAO5fIP5VpJqFqesS9z0u9kfhqKhtXzkn0Hvc5kJ4
4CtsUTPtlZWcxLLMNYELg16im03tsVSTKeSxU1wnlOH35/vZ4788c5Iu++Cc
4YuFRVvY0zat685nDvsgV6KdcI0EW1pl+Bv5BAE/tN9ob2r0lS3twfNbq9jd
fGdcT+73e37wnC4OOtptvZJ13+ULChrQXBT207BjUn9I9WAUei6PkOoPoeIl
2QuGFU/iUPtFpte7JVT01PQ2yIlOmXEeWQ/ZD9kvqQepF6knqTfpH+kv6f/f
/P1X9SD5kLpwlCJ9qwVPN0nCyloK7DaQeme5txU/Ti1ayPKjgN6h9ZYblrYh
Z5yMa4UJBXq/5PYd9mvCwHOcxw6/HIKxl0+Zd27U45U5NltLrP7x+2u8Y8oq
UWO10CuTQXc5MoL2Z4Kem/G1AscVvldq60fRMCmg1fleC+zkZHE9ediOzr6L
7yrmDIJHz7VCBe5O3BM778NI9wDIzf/yXehBF15INzLqXDIAGmdvpu9e1IOD
P/p9uPb0g5jYyer7/r1omq/Nn3yjD2wuJHdkb+pHZVbDDdvEXhhWvNnDGTOA
AXpfSwWYPXBqt5m94H/8P35ZsYsyt/fAO9v5uKGTgl718xo3OHbDXr3oCPfw
IYzjK2iife+CY117NeQdh7HlMJ1fntUJjUqVrhrKVFyFd9x7oBNObfi4NvMA
DRWtVz6M2d0BZzwXennZ0PFpy8CL6ybt0ObKXxzmykDBXVzv9l1ug8qB743L
fJjYbG8eIRDQCkpJXFmGPaN4fssyLVfuFngxe+WlgJgx1L+XaXvSqxnq6MkZ
GkfZ0761LX162qgORndcK+PjZE/7kdk63+BH3YzPSf37xcXSXR+xpX3Kl5P2
PlwP2YzSdfr8bGmF+3InPrE1AL9m75GV/iyca7VjtsmiZrCS+y5y/NY4mjvp
Dcf4NYFztWv1tXMTaJjLud1lcxNYSO48f8J4EvMjol8dcWmERdvpHYKqUyil
9sbRN65hxv7k+TPqP7yCcqKqBndYdbb8ZAzDWy1OyXvKVah/i2e1ticV9E4c
jOqIKsefZwrrjojSoCmaw/nOtlJ8skJGePIXDdx++iVwphRhMMd6zS2n6RB2
Rkyd83U+Ut7cftTBy4D0WRTrydxf6NhvyhKNZIDW4ZvlI1wZKDfw3otpxIST
ri0rvf2T0Z4t99zsCSaMLX456akYg3a3tn6e+2EEfPsOROeWB6PUlVrtWXqj
oJK/dNvPZzYYVvtrH505OqP/g7q3SnRUX0OtWkxB0b0x8JeeuMdz5ytcCNDf
oLSCBQYiARtzWbF/5j+pJ6k36QfpF8kLyROZNzKPJI8kryTPJO9kHsi8kHki
80bmkcwrmWcy7+Q8IOcFOU/IeUPON3L+kfPxb/PvfzrP/yy/ZU2zc6s1m9Fg
3P6K2XEKnhyU4nbkbcGPFzbwf1tHwU9N1zrFylpQ8ea+xqL0QQywGZtdXNGA
uR5X81ZvGMLY/dfS3bVqcWCX3wfN/n/8fVyeBf4VEgtrsCpT08RflYoyozap
O8vb0S/t0m6dNTTcf5i5W5SvHX8kKxfdVG3D/vN2p3IbB7BBwGU0LrYd2fwM
RNbPGcDJsW3Wv7Z04qUJ2poqhX7cePTE/NiwLlQPNNTpc+jD08uWz22R7MFa
74Gqmrhe7GHuPhkX1YtvhpT714714JdZjM1bt/fjs3jN+0nKPfhBaeM+/YQB
jOri+Pr1dje23hnS6VhDwXPyVoGH8rpwcujtedFmCsqY7g8RWNyF662CH9gH
D+Gsg7mZDJNOPFBBD/phM4yNq0qZvYEdaOe+tSq+lIZuK9emj9m1oZooy17k
AR01fIrDrata8VN2D41DjYE/Y9XYJ3e34mrTd6nCLAYGiVim9Ca1oJPrs126
KUxMFE4Za5FpwZ6TjwM73EYwttR4YUVMMx74tVP4m+YoarfV2Mza2YyW807x
FfCOodfFxCqT/CYUY0/MEzzMnnZonaHO5rM1OMj17OH+Wexp2hXejQr5NTg7
My7/WQRbWm7YMSeLrbUz1uT15H7Hn+/ec7RhDMWLYi96GjahhtrcZdFRLFxd
t6Fj669GnMUfeSXvzjhe8QlOoAw3YPACpQufTCfQ+nfX0cMSDbhe6jNrn/Qk
tt+llpy9VI9uDhOrY7imcCw5Y4VIdh0mN8qWNtRP4buLh6U8xerwnILIk05T
trSG97H8b17VzuCJ/Ny+nitSa3U1bv/Bil1zdhg53h+7GTZagcyb1ZHOvcN4
Ovj2jq9NZSh/a+vLw+epGFzrVL63uARpPzjPJ1Gp2Pm86SxXThE6nE6x73am
YbVk+sb0BwU4GZzXI8FJx+NZNK9vj3LQ+6JkxZ1HdLSnmKzt9P2JMiXtsjR+
Bq77RVkU+vkH6s47XKDyjoFCOa5Hve8mof6JQRtZSSZe97rV65sRgypNoZOF
idPPjYW9/kkrQlHA+Y7vQq2RGf2T+pD6kfrOehoQXTTojXYLqVOvc0eQ24mz
OfGY2/R7ab1lgO4oqm3I8JvL/w5GtTRSFhWPYiPn6o3P2SNBonfz4jHDMUz5
ud/6zmAcjCt5WBhXj+GOyvH7VWUpcE7JJnTTMRa2DtSH3N6U9ufnbUm/SR5I
XkheSZ5J3sk8kHkh80TmjcwjOW/IeUTmmcw7OQ/IeUHOE3LekPOInFfkPCPn
HTkPyXlJzmdyfpPz/W/z+396nv6r87BN59m+uhoqnFj55WdVcjG+FG5iSVZS
YaAn8Wa/eymqc+cZyJRRQWye+4ble8rxiMSQ2a8iKryz3P1AmKsKrd+k2Byc
Xh9mO72J8q0Kw3/Mos6bXvsznlsl21RjuOrePs7p9a+RxYERXtWYHxevMfmb
Crt1n7S9S6lGL7utPOPTa6XfQ5I+3dW4vN1Hpr+VCg9UnsSGi+XjfSuP1fRe
KnAt97Y6VpuJ2WcTu9YMUKH9TL04IzUdJZ3GzQUoVDgS9PXFzXdpmDOlNRxM
pcL51ctmzS2Nxw09lExVBhXe1t/s/G4RieaTQsGVzOn6tNP3+sYH4t0zjmOt
0+u98bO5rwm9wfXdB0eHp9dXfkqs7Fz0GucH3VsvOUKF9bMOu1OzvTDI3rtU
b3ods85HqGXqGl7Jl6jWn16n3WiVbou7hBn9lbJG0+udB6Sd82qt8Kf+ZPN/
rHn09feftVea0S+pB6kXqSepN+kH6RfpJ+n3/3a9jwT8micYhnhSS+/FpaZu
+GAXFvFjIg1fmu5pF5vsAgprS03I4A/s0Cu417e8C3aJtns15mXg/YAFu5zc
2uDSqWgt7fwM9LK82Ghk3QbPFqYOOU6vA0LtFCfOt0EPR4jJ5JoMVIs9tEQ3
rAOqNbzvCH7PQF6F6zcKFduhmk3Fbd7WJFx715E3UKAXtmiJ88urxGGCywOn
D7p9M/YjzyPrKbxUPMq2OQrPFxsW11zrh3lFNUOLnUPwSOdD9vOhA7B35BRl
h7YfSsgNSqsXDoKF771R+ol9uGdVoPpaJwqE/Zy9bFTKF7IOBMjenjMEPOuu
7lWoDoGVK0oD3r8YmlE/2Z/D+w3aiVLRQNlQ7DeyYRhiN8/Xc3WLh+eZdiMR
UcOwR2BUpqUhFTjGopJzlamwLPXSxOUP6bAz83m7Vh4VomzfLtrZ+BMUk98G
2B2iwUhLok/0yhygO1su8GilQZ9g2qNqw3ywZStTfHKBDo/WRFEjn/6Gdzqj
a++y6LDb9ODjDptiUIvQ2Ox5jwFFlYYilhylMHVFNCF7CRPa5rTuzQ4og/KP
IeXbg5jg1sOirVKogCwldC2XGJnhN8kDyQvpXygW8LCVV8Jc4y/ifEkjMPsT
Z/UOu2q4+5vu+Ux7FPw+BpjnzK0FCH3z0apqFI7F+78Jf1sHMk0f7K+fHINj
DRMvuuUb4MQVXmo7Ywy8V2RqOuc3QrHt780v77KgXX+w7Hpz45/3G5KXf7f/
/9P9/a/2p7w9a75p5CAerldTXLs6F0Y+RHlxC1BQ+LKF953Nv2CporRMrPH0
+r65c8jyTBA0ErqEaQPo/y4i44h+IbRbrQRr7MfcB9eD3dYXg0GO92aZBUPI
/2uX1vZtH+G4Cnd2+i8KKq4XOb5NJPGvn5Pnua/ZGf7rWx9+aHv7ypG7FDK3
R1t/9e/FnTdSx6N/lYGc3tIwIfsezBqsbfE1qwCz+azSLYrd6JrHfuJeRiXQ
folICtA7cf6Sp8kXmFWQUmI+X/x9B4r96lgN1GpYKjEn5bpJGUbL67M/oZaC
/gOHB263i/GMSkDOXJMiSH/6ObNMsx3XOhzcrh1bAzHsXr4TTa34oFPdQkiy
Fj5bflexdGrBse6V5m9MauFX3w/nJL5mnK0hRX0tXgt5JnkNjQaNaCfCvXLu
xxqYF8bbax48/Z7lcDy3Jrcaxn8v963kr0ERu6sa475VoPIj3XxzQiWWWLtm
HuKtBH7dfie7i4WYxnxj+CQje4Y/pH9/8+ffred/t15/85PUU7Zfs0pANA1X
Dq8LeZHdhTFWG9c8X/ID01aGZNg3d+LVzzXG3hk/UE/iQBU/swMjGnbqLduT
jqEhEaC3uQO1uzP8bPzTcZvT018TRu3ImL3E4n16Oo4qrK0rv9WGjevZ641+
pWPe2J5LS9XasPn83ej302uJOVrUn5vbMGR7tGtISjLev2n97WJ/N/ZcbE3f
FxaPtCnJOXG8vfi69YjRWGQE+pje11y1qx83L0xu/PHMF+OzbTQUjgzibW/N
Uu0l3mC8Vf5S8jfKjP3J88n6NGOCGoc+R8CDQKX98xOm3z/eHffLlEyCxh0q
d7cnDOP7wQq9h0cyQDk+11znOxUXVNksPyWWA54lFhtOx9JQ+eGu8fMTheDS
WFq6MYqOYxoNorwnSyByO/3SinDGDH1I/TS848vXXymDN5/3adZZM1F6r1PK
ffcK+PlcVDJUYARNvSwon+5XwWtnnsT64hE8/jT2Wv+zGnjVctqhwWMUr38r
LN3wsg5mCQjdOaEyhsorBYse+zWAqrL6qnWjYygi9O5Z44qmP+8LpJ+k3yQP
/9n+/Lv1/q/WUy8w3P2WYB+UX4r7seFWNz7pSnkqG9oL8YojZlsju/BywrWb
g1t64RzFRWBZUyc+Eo59JKLZDzW8e9ZdrejFLDnplg/WAzBSU7lSQ3IAvYKW
vIrh/Q1Lle+oR/IVoUhDa5v2xh5w1WEFyO7vQKfFTzbGU7qAN8/n3a36NjQ5
+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
FV+f5X+snfj3VSx2rAQfkTcxwo00mF/WERX9qgPW/3z31E+IDrO4j25c3NE1
43pyP/I8sh6y3s4l0nN1jelw3ZbLuyumB4KqQjbAUzp8dv8qePdGHxgt4Wk6
X0gHTw39zB6tAWDPNFauW8iAJUec1Xm5KZDft6bEx5gB7yJ2f4rsoUDDE6pk
+BsGHDnO88ArfwiUvpYZru9mgOrVn+1fvw5DvUa6OnU7Ew4OXEme7UmF5ZSg
wbjbTHBx92+NsaWBgpaRDmc5EyIon6RLdeigott4uGrTCPQqBQdbizNAakp5
hZzzCGy1vrfTZi5zhh+kX6SeYqGnXH7mjcDK38ujehqm60j0kNNcMwoZO6Xm
L4wdgaDtgdrfLo6CZFjBgXKPUVglEBa7LGsUjghSXRSPjkHayYgrJ1aNgc7T
QE/YyoLtmesrlFX/8DLDr//p+v679dq+rCNVf6IJejnSbQ6yp2INy2DxKacm
mDxgc89cMhUdjn063t/ZCJQ7vkoTOSnIGRrxvqejHvTuHA863J6Eh0/Eexeu
rIPVUW9PyXR+x7hHmSaF72rAMC9Va6lgNH7z13LXvtoMcu7dAVUpyehpcYXD
baAZPjkxMmtpiWi6lT1Y6GcL7Ao9ne/sGIdyWdc6Vtq2Qk2RjFKzQSTekxp5
51wz/Rx7c2l/2Ox3qHm5LOwusxXuv6nozhZ7MeM8sh6yXrIfsl9Sj393/Y+K
dd3bGU3ApnYzXc2fghmNOa4DZ5vggIXeRXcFCqKc3a0z2AjFCgtvHA8bxJxz
GvyKX8ogrNfeP2BuF3I93sc26FMGkxrHbxezOvHhQTuL205lEJg8LiHY2Ymm
1gnfVI+XgWyLw6RudSdWsIn0chwoA29nxePX8jqRKSaopDO7Huaxfglw/ezH
56eEJPfsqYG4hwtpixp78fngVbMjdyrhd083j8dYN46iaJYHloHRCkPzU8u7
kGNjk5/j3VJYJpfQx6HaiaCrsqAgtQSeJ+cJ1HzrwJ4jYw7HRovhpfYqzQ7R
DlTyT2a/I1cMS7ymfHgD2nHDm/GWd6dbIOV3QmJi5BC2DLNlvihtBTOJn1HL
cobxZnKME3t4DERfLu6JlyxCsRfpAw5ecbDqtl/0r8oS5DhuX2j+NQGelKRI
ariW47umAOErCYWgxJ61LVyhDV03PTy5TTYPHKOqHp0paMEA18vaxZ2/gN3o
5rLhw8348pDXvu6GTBBVXuXcl9CIZzfyrmx7ng4Wl8v3c++ox1kOiXd8r6aB
9xrOR8vCa5DN5PpIrmAKfHa1kXi/smrG+WR9ZP3k/eT+5PlkfWT9ZH9Dd20U
aI/bwPvheIaKKRUVRHf9LNndDoxNLWotvVSMr753ZutkO9ybvCw5do2Gdn6a
IgtjO0B9cfxdj4V0tLBxnDx/qhMkrEL3PQ6mo4eKQL/uqi5QG9h9jVuegd2i
W2lh+V1wJ8571VguA2+uS1ryyLUbaImem6zMmbjr3KkfVuI9cMIsxFqAxsQ5
+7vtQ6t7IJal4zfuMYJ1ObtEjt7rhVq/G5nca0Yxtc6m2U22D+pkoEs5ZhQj
71m+WdLcBwn5DzkDtcYwLFfafNnjfjhvbcMv2jCGcR9KN9xVGIBJZp5Q/SUW
Ghy1HLM3HvjzvED6T/JG8kjySvJM5oXME5k3Mo9kXsn8kPki80fmk5wH5Lwg
58nf8vV/nZdtRkkNvkf6gZuxZqXutU7IO9gxfprZB/sf90hmvOuAillzrd29
+uAFY/Mhrpx24Dt04DkvRx9suVdldDSgDeIM7DafPtML9+db9xZeboUO+bhQ
m6QeiAoOSNti1gJcTx6Xq1gMwJex3A1v87pBa5V/mpvVIMROVK2ftapvxvXk
fuR5ZD1kvRJmr2rZhCiwWHCSObxsAI7VOTaXe1JgI/1D38np5xlunrQ1MRMU
OJi3Lqtk9hDQm/RVHp0bglhRmbPAOQzx4rmRxnVDkMC1RkWVjQorTv0Mvak7
DO0pGz58HKdCwhsRnp04DB5TbFcKRmigWFUZFy5NhUEX+2dL6HQg9fxb/2S9
urk7D33yocLb/LcBa6sYELzueZ3EBBVgrVNhXyITlBrqd++Yfr7OvUTf6BIw
AvxsAj6FeTRQyV35NvfGKMje08rtk6HD+/XtarWWY/Di0ulW79d0oLke4vmq
zgJdnUZXbfzz/eH/cn3+q/uzvXykjv87W9ocYd1ZPLpj6J3KWOg9xJYWJPVY
jCI4hrsXpgdJS7Cn+a69ZXhtcPTPz3M3Rp+Wbno4irWRuRf5XrOnjQe2jq/w
G51xPadIVIOTAluaMa+RsF7iGJ6XGLJZdHkK441Ob8gSY824n9x/0GSp1I43
k3/+XhpZH1n/384j9/N6NzTPdC4DbaUPRTVJjGH5CvmFNx0Z2A4fc9SHRtEx
iO3NwjYGqlzyEj0e94/6Ej3G22RtaBjwQ2bO8qvsaTJXRq5X3KXh+0eXuc7P
YU9Lrm3d86SMhuesdomGadExusH5oOvrMTQ8O3nO5D4N9Vi3FznysfD56u89
TnlUzH1z6NCvm9P1zPaSd06g/qmvbAEDlXzY0ppqtL9Xb6Tj1n3fZNyEp/t3
ECv4doWO9r4rp+7EM3HVB+vrQ5qj+Py6510tzxEseBFVv6tqej4amcua2Iyi
oabLHm3bEdQRfMT9bdcYRsWkJS2ZPYKtZUs5zZezsKPJXTEgkIlBrqMbjIen
dcpPzWjfycSbSxXPviocx8IrVw711zHw0euKKvGwCbzd/IUec4OBZWWN3jUP
JpF65UjfemEG2l07keF4ZgrHQ+/c31Aws16yH1IvUk9Sb3J/8nyyPrJ+sj+y
f1IfUj9SX1J/kheSJ5K3f5WPKLt73kZ5bGlDruvnhluPQVBAsGzVbPa0Bx93
an6UHQOF++xTLirsad/l1tdpcI39+f1EHm+fWt3o0Rmfk/efYvPK19ZhSzNg
OtWsLB6Dpct7f1X6T+GeT3UWSaqsGfvFBBqsMmL8yReQ9f1tP/J+3rVh2kV3
GVj1dsHyS3vH4OVeeYPDNAZSUiw1DRaMAVrtk9ljxcTpl/CswbJ//H0o4d0F
eieTaCBAe7WIU5s9jTlxqerJJA2iN9GHoyrZ0uTaJGM269HhWMRE0tMMOu6e
W/tELXEMVC2GNcLY6dgcfbfSSYIFF2xaw29b0P7U09CV9rXsBFsafZ7ilz1B
dJC7PH6rom8KJZxepA3S6FAub2reO28KG4RVqWt1GJAhG71DXX4EW8TP8d+y
GYWkvsNCd+eP4huPIZ6ikREIfaDWuaB9FGd/7Qiu8BwBD75znk0pY7js5b5m
n80jcNSpYtmI7/Qc0BHKWJjBhM3Z7teML42jUvZxbQ1LJrRN2P5k7Z9APd6V
Dls5mOCz0r+/c8skzuffpV71gTGjPrJ+Ug9SL1JPsj/yPLIesl6yH7JfUg9S
L1JP0n+SD5Kff9bv3Df5Gfl7BpBdx+rGsNpH5InokNAwGsBnIjs3rIr2wnjv
Vd5HDg3gXdslB8UZd9CwUv2auMkAhlw/p1TGexFrNuVeOTO9dgrUlFpRq4OC
p09k206v1+/eK+TcqQVzS64lUqb6kfualZyjQQyKXnp27HVAPzJvmXB4QxIa
fl32o/ZLH05ZxB/o3PoTUb8gUeh0Lza8MOEOnsrDcpNxOY72bqz9veLjFK1o
xv7k+WR9I2oxZfum30PK9ty3a3pTih3yPLNe17ej6c5J06vPyjFbfoNZfkAr
0nlyD26LqsDoTdnno3WbUaT2sUV/dQWWiI3+8JnfgOnf1ULsx8tn6EHqRer5
n93/f3Y/TOtViYcLGLiohGrdWpoAvJ8lb7BpMXG1UXjM2R/x8FDAvmU0nYkr
T5p2FVV8B8fmtcFuSgz8fG8BDqcngWfVx7KcL9Pz3XfbbtauVKiqWSO59AUN
88/f1C0wToceR8li8ecjeIibVelwLg4GtkmWFE5/vXF3534Wv/cbrHv9xSxF
fgzvFL/kSzCPhblszZ3Fc1m4n/lT0/tlDKj9OOjCXsdCy+SkoJuUaDin5r5G
NXwcd/V88kg3i4bj6wzdjnlT0ak/5+UtRhZ8EsllGH4YRh6Gu03nk3z4xKZ8
bNXLCRQSDbT1yo2CPSdXsU3cmsS9ae1aMrujQNtx5ayO81OYHHFNIPR3JFTw
r97eK8GW5sA80TJ4IhKMY49NJnizpT1/EFTMWBIJKks+Jt8fY0ubr7X+oeOj
CHghM3zB1JI9zefeRVdnVvifeZK995Hom5cz1+T15H7RAo5rLZcOY8ZADmtA
uAi+MK9bbbg9hHltZg9M5pSAjuhzSW4qBe8riKSfbCsF7ZU2wy7mFDylWcNl
+K0cuDccyX7mNYjO8V5Gpy9XQvJ3fQdHswEsVLb9Ql1bDeG/n1x4I9GH5xyl
T53MrAUFnXOR2c3dGPWj94UwVwO88j59afRaJzr2ZwZfzW2EpfPm0mU521G3
1c7tkEsTbPnNzvNmuAWNj+2fZxHeBD3sYHemqQmlm+sMzzydXq9WXKuaWo/6
tt2FHMubYCyFEviYowZtuB80nL3QMENPUm/SD9Iv0k+SB5IXkieSN5JHkleS
fzIfZH7+2Xz8jd//7Twck1pQ3DZGQ1ORdbfuN+Xg4q+THdvO0dGh79qDRLds
3E9j3XVupOPlpoNLYnV+YWYn3/sWSxrKlW9+vN42HyMPqXj9KKDikMLJTmnl
33+ep1N6D81nLUnA7pHtm+/3T/uTO3HFuCITvX+Lf6ljG8HVjHp+Y+4MnB8j
LOu4fBT1nlDi9sX+QMGGs63GUmNonSaztuhLGkaOzE/k1WIhbl71augbYvzn
VQnrLMfxuUi2S9yRVNRiu8TLeYw97Ze0KofJqYQZ67iReikRgQnkaAs1tvFN
wec7eI7vKp1A18j6Wa0tyXjANsjI8tEkzvY8cVdKORl7vINmPdecwpeu6rV7
PyVhPs0stJQxhfJ09yCTTUnod3/v/nmGbGl+/urCBl8S8eGV95eiwtjS8ILH
aUWFRFTV2Kl6ePr59tPFA7Z8BQkz9CA/LzN00NulNP287f95ymFRMZ469/XL
8JdhvCR3QNvVtwS3/pRu8FgzjGG31+2uEClD2h31VSFeQ7gm0L9XLKUcVwbL
5xyZNYQ1qkKn1uyvxDmLzPW+XaYgVWRRj2F1FZ432EX3nTuIn6Vd3341qMUy
rtOpG1f2o83zQN0db+pxwFKc4svfi+UPM7tsQxqxQub26i6OboxLELjUFN2E
zdd/f7nV0IHpd98YOR1vRh3dok8eX9rQ9EGpMEdjM84ZKEowvNCCD7Qr5FIW
t2Cok3GXmUwTiku9KmJ0NWOBgeXVoZJStKuXai29WoeWdM21C6yKcQnHo+aH
ctUY6ZXlyTXNp3qsNZ+ffzN+5s8/t0e2Fs9EGjhuE27Gc+iksrGsCp8Ji3kI
3mpC/rx7jRqhFXhQXO+epU3jDP1Jf0j/SH9J/0k+SH5I/kg+SX5Jvkn+yXyQ
eSPzSOb1b3n8387Xv8rP3/jsXROmsF6uHbe40+QOPmHgMe5z7jIj7TjL6LX+
vD0MrHaj305I6sDZShsNMqf+8f93xMiJXOvf3IkTh+RLXS6zp+1Y0fqQ81An
hntu6ssYYktLrj+oEFvUiZTeeBs/s1EszTr+8/rCfixzbT4eIT6GE43OZ4Md
+vCl9D6+L9Nff1hGTRMulUNYeK9MKXB8GDXGvmzKNB/Cz6Yb86CDimI7kgZM
eiko/kkx+VExDT8v5jNWdKZgQNvtC/Lru3Byq/KA/g06ym4MZr161I0iEvLH
GNPvJUFwQLRtrAfvii4IDr9Hwzq5RyOLbftwqVhWsstCGg7MPXR6c2s/Vm0x
+3L0NRXL4iNd1h0dxALZ4vOG4lTMepvv62Y7zYOy8ByLlGHkNfJQs5YcQh0d
Ewc3/WHM1hQEp1Q6Fn3TzXk8j4JMjpJbtDAG7gnefWZIYxDjmkwesAcwUTdf
UIZxZQC5GqP0Az1HMKJDqF80uh8z7+24XMcaw+vWvlcjGnrx66zfScsLWCjj
PnA/Ua8XF8+uvP9Kog2ryjwHPEcYOHedgl+DcCveoeRb+FgzUdT+8Or4dS3o
k+BovaGIiZ9H5knuEGpGFU/tCB3lEWxYv1PR+zxb2hw98+/b9LtwjSjFubRy
CgVO8869UduFe7dvnLe1cBzZk371y33swXahrCyTogn0DYSN7rN70P1XbK9n
6STSJI23vDzXPeN+cn/Sf5IPkh9yf/J8sj5SnzQFs/johU0Y//Ls2y3RIxi6
w27bmjkNWLj2s5rZ5lHM11Z9+3qoFt2EZntXBYxi91vxlKamaizyd332btkY
cqlJ3e0pq8RUr4WqiZ5juEZMZzyhoBz3cfx4s3b6uU7G9Oba/Xml6ND/+EvJ
bRa2mDkPXfxQ+uf7R6R/JN8k/6T/JB8kPyRfJP9kPsj8kPki+SX5Jvkn80Hm
h8wXmT8yn+Q8IecNOY/+Vf7/u/moTS47cCAyGU8d8OrYHdaIsqeP6Z/ekYK1
L1ieHtiE6bFFL0SepOBwovCH/Z+a8fKCcx0lP1Jw6Y1NOXrTXxdSp56cv/4r
BcUL5jWVBbXgXP/3c5fkpmBGwdPxIyUtuHzgXMCO6bXwQlp1SkMLaiheUvr+
JhHTjVZoDNjVon/++cMJh+MxiT77opJ85Yzryf3I86JPVtT5icbhnf05XBoK
pbg58PZRt7YYlAjTfb/AoXBGvWQ/ZL+kHn+r92/nXzx9b8miCQra9Z8xWOfI
RJm7l5kXTgzhxlsPa7zkmGj8m8tgX9EQ7hedvFfC/Mf/B1epoRd1dM8gOrzs
Us2QYk8b2H2TGlY8iNLdQg7fYtjSynhH9glspeBb01tlQgpsaeG+KlEerpQZ
n5P3k/vzRggXLThEwcl5A5suNDHxkp+ccfbxQdRI2TBarTOCSW02hnxBw7gk
S1kg8DoDjfZliR67SEXJy1OuJ7kZuIlTpFRRg4Zv5VQixV/QUXzewwPvV9Dx
HA97bO9GOp46Mfj21QAdPSmqHiHfaVi7yOiXYBYDubo5tpjr0vAmX3LalkAm
VlLV3y2enhPmZhs9c6+O4NTC2V0/3KnoePfA13SjUZzk+WJ2QYiKucs5X7dt
G8NDYa+OCaYPo+nCnabSi1jITS/tzzsxjCJ2rM4PFBYubDfmceEbRll5VU3N
4nG86LohVixhCF1t5tvzxUygeNKO3pppH9hZ5ufZfSZx59uXEQ+XD2EGU0Fx
jfMUhkiqs+/Ko6CyVsl9gzUDyFjoMt88aQTnVQgWhdf04d2wq7pT4qMz9Cfv
J/dPmx1nXb+8F5+WOYecyhnFB203b1w37cacpdK52mfG8Iz97Q3P3nWilO3L
b+/4WDjesjTuvknHn7yS9ZP9kf2T+pD6kfqS+pP+kP6R/pL+k3yQ/JB8kXkg
80Lm6W/8/s2/f9UPmcurwlpPdsCBHy9eS7xvBn59jcbHHu2gJmHk17K/GfRu
hYuu/tQGWb3bw1pYTbCy0HPviretsGIsrlnyRROEn+XX2+/fAnEibjv6RJrg
RqRdkKpvE6jVG4fcu9EAV2+zO6/UqQdzywd79azqoMTbPZ9m0AkDdt3hxxe2
QA7v3fP8Ml1wde+VUyovWmZcT+5HnkfWQ9ZL9kP2+7d6lB7UXXRmdcDDYA1p
VeNCEKSs2fVTpgPYGFGeKYJFsHS3AX2xeTuoS81LUWgsgvBsidiQthZg/zo1
tXB7CVgoa/Mk6DcBu83B8QB6Mex6RAuZlVULzXN6cqz2FEGL9JHUL36dUMmh
HsYYygNrjdmzJYW74NPVwtXt+3PA8ZiiqOKqbhjeL1xlFZYB5pLpfE253aC+
t0XsXUUirDqvy9ko0wM3y0LOVG/8MmN/8nyyPrJ+sj+y///sei9uTopMr+3F
HT20HIWFdKCktT8u+9SHNrctONh+08Aotufqkqv9eOBy4IXvnv/4955C1S8d
6Ze7wPOW+ulUDfa0e5I3lF9WdMHLC71iFmVsaVOm1idSNbpBA7k15eUmMHpe
1qK2rF6w29W50WnVJAb93i/roNALhpyGe+dW0bDUyWvikcIQnKUZy7u10lHs
6fpkrSQK2HHxvmIbYmDwU309RzUKWOyws38w/f7tSlM7Jf56EHQuXv+lHjeA
3xVrJ3230ODa5fnCj+iDaLzgyW+TQipcatqn7ehPQQlqYvOoHRUyP/F5bNs1
hIodx7a7LKNCDP/vwrHGIbzR5ZxblzQMuzY/Fvx9axjHR/nerjk+DMdrtRwi
RKgYJbAqQYVvGERkOEr9C6kYsDdwsXriENS94d07f/Eoxt+XWzWQPAA3taw+
OwmPYXKRL72ssx8M5By88xVZ6JFzgtm4uh90T6nOnqs/joIOwUILzPpg/Q3N
r9/Zp/DpFmuOZ5E94L3+UUdz1xTSXqxnLJDqgfcqN++oRPYg98lDJ59dpoPI
/eYffve6kZ4ye2pBPR3W5LzrmWvVhecP8aaG7WbATe0+k93H2dIKS14GP/3e
PcMP0i/ST9ElVSI3oBNDFi5QORM9cz+yvothbxf+lKn88+9hZD+k3yQPtnY2
hV9/tSPH7fDV/buYoCB8X93VsA0NAm3n78hngsdWdY+e9hZ8ZaWzWO/oCJi9
8H494tKMFQV7xSWGRiD+gLPbR/4m5G0+ZVJ6bxS2/ho42XW2HmVef3ypvm4M
xv2Xnc+IqcGDU5yDriljULr29JKGWVVow+NucsOMNcMP0i/ST9JvkkeSV5Jn
kneSJ5I3kkeSV5JnkncyD2ReyHyT+Sfnwz/LI8nTf7ffJK/xuXLit7maoF/3
sL3co7cg7aZgdf9hI2zrOkcrfho0Y01eT9uW4BBeMABK9B1Ny+9UA0eXwOkF
dwdgm16PrSzUQt6XA6HlGgPwbvOORWoTdXDS7lC4fV0/uPK6JW2e/vpYqc/T
tKm6H24FSxoq72kG/eIszyXnB8EBN1V2+peD2LnTXBysQXDSYHYvCimecT25
H3mes6G5SbQiBWZlfOU1fZMHsSEX22XPUCDT7fTQnYoM0BE/uLT6wfRcne97
pXDkO+Sbtupd8KeAgA3jDsM4aEY/ZL9/q/dfPb/9lnm7wu4RFK7gmPujsQa/
iFYnTSWPYOmrPScCDGrwwuTxdn3ZUbRoehax/nc17nnAWOIow8RfJ753sp2p
Qxb/ea38jQy8HES7qLa2AbdWLg4SHmnD4Y3611ULu9HbJW79o/etyO+fZeFp
1oMU09W3HQxbkIdHa17jcA86f7O89XrNGIZxLfiwo7IKBWC9wjYeFu6cdXme
NqMSDfw/ci5lsnBxdWb7AYlK3Jg70K7aPo5b7kxKH7xagQqyHTf1yybw29PO
KLmqctyp5nS9LmMSS25pSgyol6Mk7X1VY8wU3jq2IuhKchlyC8dpSeqzpeUI
WcwvVS3Dp2t7Zodks6U9DdJ1mSopRSEH1U/ywJ6Wv1l7o/LZ0j/vY8qRSo5X
F5ciB9t8987ldOS7pCEU1NaIkW/Hfjzio2FqkhnvqvYmpJ+Vy347h4rzHn6h
hrc0Y0YhHpjHMYyvjix8Fj+dO+XfNLa34xQcSTaSsu9unX4PODF+qm8Qo5V3
L+XvbptxHlmPx0evXvvX/TgsPsAuObsD4Uygn/TeXhxsMbpStaoT+V5Opl+n
duFTkyReJ5EuLPAXFFP06UB0NzO+sKl7Rr+sSNFd5bzN6Lyl0XLQtxf1yza5
1b1qROajUPGh/X3Ip2fDzJKvx+MNQ9Yiq/tRZeGPlChqDYZUcs+unuhHoWSx
wbrcKtx777h1CGUAG4efhXgkVGAVy6VUnjKIhhOhpvKvSnFx1RJbs2wKck7k
89z3LsLkx+aHTd8MzfCD9Iv0k/Sb5IHkheSJ5I3km+SfzMff+P938/Gv+v/P
5vO/m49va7RZMt/HIeR3Ptvkeho8VL6olPB8HHZ7LksVCqOC6P4BtnL76XUP
x44V22euyevJ/dT2W9eV08ahzCZj1r1eGqh42rlTZSZgwY226tcx9D+/D580
f1m071bGP339/wPjwiQW
       
       "], {{{}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, 
         {RGBColor[0., 0., 1.], 
          LineBox[{141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
            153}]}, {}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
          LineBox[{157, 158, 159, 181, 182, 184, 185, 186, 211, 212, 213, 214,
            215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 
           228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 
           241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251}], 
          LineBox[{255, 256, 257, 277, 278, 279, 307, 308, 309, 310, 311, 312,
            313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 
           326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 
           339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349}], 
          LineBox[{378, 379, 380, 381, 382, 391, 392, 393, 399, 400, 401, 402,
            403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 
           416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 
           429, 430, 431}], 
          LineBox[{460, 461, 462, 463, 464, 473, 474, 475, 481, 482, 483, 484,
            485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 
           498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 
           511, 512, 513}], 
          LineBox[{523, 524, 525, 538, 539, 541, 542, 543, 552, 553, 554, 555,
            556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 
           569, 570, 571, 572, 573}], 
          LineBox[{583, 584, 585, 598, 599, 601, 602, 603, 612, 613, 614, 615,
            616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 
           629, 630, 631, 632, 633}], 
          LineBox[{664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
            676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 
           689, 690, 691, 692, 693}], 
          LineBox[{745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
            757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 
           770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 
           783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795}], 
          LineBox[{806, 807, 808, 809, 810, 811, 812, 813, 814, 815}], 
          LineBox[{833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
            845, 846, 847, 848, 849}], 
          LineBox[{865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
            877, 878, 879}], 
          LineBox[{883, 884, 885, 890, 891, 900, 902, 903, 904, 905, 906, 907,
            908, 909, 910, 911, 928, 929, 930, 931, 932, 933, 934, 935, 936, 
           937, 938, 939, 940, 941, 942, 943}], 
          LineBox[{988, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 
           1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 
           1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
           1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 
           1034, 1035}], 
          LineBox[{1041, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1075,
            1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 
           1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095}], 
          LineBox[{1112, 1113, 1114, 1121, 1122, 1141, 1142, 1143, 1144, 1145,
            1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 
           1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 
           1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175}], 
          LineBox[{1198, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
            1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 
           1225, 1226, 1227, 1228, 1229, 1230, 1231}], 
          LineBox[{1249, 1250, 1251, 1258, 1269, 1270, 1271, 1272, 1273, 1274,
            1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 
           1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 
           1297}], LineBox[{1301, 1302, 1303, 1308, 1309, 1318, 1319, 1320, 
           1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1346, 1347, 
           1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 
           1359}], LineBox[{1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 
           1379, 1380, 1381}], 
          LineBox[{1394, 1421, 1422, 1431, 1432, 1441, 1446, 1447, 1448, 1449,
            1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 
           1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 
           1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 
           1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 
           1494, 1495, 1496, 1497}], 
          LineBox[{1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1551,
            1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 
           1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 
           1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 
           1585}], LineBox[{1591, 1592, 1593, 1598, 1599, 1600, 1629, 1630, 
           1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 
           1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 
           1653, 1654, 1655, 1656, 1657, 1658, 1659}], 
          LineBox[{1675, 1676, 1677, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
            1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697}], 
          LineBox[{1701, 1702, 1703, 1712, 1713, 1714, 1715, 1716, 1717, 1724,
            1725, 1726, 1727, 1728, 1729, 1730, 1731}], 
          LineBox[{1735, 1736, 1737, 1745, 1746, 1747, 1748, 1749, 1750, 1757,
            1758, 1759, 1760, 1761, 1762, 1763}], 
          LineBox[{1767, 1768, 1769, 1797, 1798, 1799, 1800, 1801, 1808, 1809,
            1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 
           1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 
           1832, 1833, 1834, 1835}], 
          LineBox[{1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
            1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 
           1879}], LineBox[{1883, 1884, 1885, 1910, 1916, 1919, 1920, 1921, 
           1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 
           1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 
           1944, 1945, 1946, 1947}], 
          LineBox[{1951, 1952, 1953, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
            1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 
           1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007}], 
          LineBox[{2019, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
            2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 
           2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065}], 
          LineBox[{2068, 2069}], 
          LineBox[{2090, 2099, 2100, 2101, 2102, 2114, 2115, 2116, 2117, 2118,
            2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 
           2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 
           2141, 2142, 2143, 2144, 2145, 2146, 2147}], 
          LineBox[{2160, 2161, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
            2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187}], 
          LineBox[{2193, 2214, 2215, 2218, 2219, 2240, 2244, 2245, 2246, 2247,
            2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 
           2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 
           2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 
           2281, 2282, 2283, 2284, 2285, 2286, 2287}], 
          LineBox[{2293, 2316, 2317, 2318, 2331, 2344, 2345, 2346, 2347, 2355,
            2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 
           2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 
           2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 
           2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 
           2400, 2401, 2402, 2403}], 
          LineBox[{2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
            2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 
           2448, 2449}], 
          LineBox[{2460, 2461, 2462, 2469, 2470, 2483, 2484, 2485, 2486, 2494,
            2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 
           2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 
           2517, 2518, 2519}], 
          LineBox[{2525, 2528, 2529, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
            2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 
           2565, 2566, 2567}], 
          LineBox[{2581, 2582, 2583, 2590, 2591, 2599, 2600, 2601, 2602, 2603,
            2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 
           2615, 2616, 2617, 2618, 2619}], 
          LineBox[{2625, 2640, 2641, 2642, 2643, 2656, 2657, 2658, 2664, 2665,
            2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 
           2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 
           2688, 2689, 2690, 2691}], 
          LineBox[{2703, 2704, 2705, 2706, 2707, 2710, 2711, 2728, 2729, 2730,
            2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 
           2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749}], 
          LineBox[{2758, 2759, 2760, 2761, 2762, 2764, 2765, 2766, 2783, 2784,
            2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 
           2796, 2797, 2798, 2799}], 
          LineBox[{2806, 2807, 2808, 2809, 2810, 2823, 2824, 2825, 2832, 2833,
            2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 
           2845, 2846, 2847}], 
          LineBox[{2857, 2858, 2859, 2860, 2861, 2874, 2875, 2876, 2883, 2884,
            2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 
           2896, 2897, 2898, 2899, 2900, 2901}], 
          LineBox[{2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923,
            2924, 2925}], 
          LineBox[{2944, 2945, 2946, 2957, 2958, 2959, 2960, 2961, 2962, 2979,
            2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 
           2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 
           3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 
           3013}], LineBox[{3022, 3023, 3024, 3025, 3026, 3035, 3036, 3037, 
           3038, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 
           3056, 3057, 3058, 3059}], 
          LineBox[{3063, 3064, 3065, 3071, 3072, 3073, 3074, 3075}], 
          LineBox[{3079, 3080, 3081, 3086, 3087, 3103, 3104, 3105, 3106, 3107,
            3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 
           3119}], LineBox[{3123, 3124, 3125, 3130, 3131, 3132, 3133}], 
          LineBox[{3137, 3138, 3139, 3143, 3144, 3159, 3160, 3161, 3162, 3163,
            3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173}], 
          LineBox[{3185, 3186, 3187, 3193, 3194, 3195, 3196, 3197, 3198, 3199,
            3200, 3201, 3202, 3203, 3204, 3205}], 
          LineBox[{3228, 3229, 3230, 3245, 3246, 3247, 3248, 3249, 3250, 3251,
            3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 
           3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 
           3274, 3275, 3276, 3277}], 
          LineBox[{3283, 3290, 3301, 3322, 3323, 3324, 3325, 3326, 3327, 3328,
            3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 
           3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 
           3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359}], 
          LineBox[{3363, 3364, 3365, 3390, 3391, 3400, 3401, 3402, 3403, 3412,
            3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 
           3424, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 
           3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445}],
           LineBox[{3455, 3456, 3457, 3460, 3461, 3462, 3463, 3464, 3465, 
           3466, 3467}], 
          LineBox[{3471, 3472, 3473, 3498, 3499, 3500, 3505, 3506, 3507, 3508,
            3509, 3510, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 
           3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529}], 
          LineBox[{3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547}], 
          LineBox[{3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568,
            3569}], 
          LineBox[{3573, 3574, 3575, 3604, 3605, 3607, 3608, 3609, 3618, 3619,
            3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 
           3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 
           3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649}], 
          LineBox[{3652, 3653}], 
          LineBox[{3661, 3662, 3663, 3668, 3669, 3670, 3671, 3672, 3673, 3674,
            3675}], 
          LineBox[{3701, 3702, 3707, 3716, 3717, 3718, 3719, 3720, 3721, 3722,
            3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 
           3734, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 
           3745, 3746, 3747, 3748, 3749}], 
          LineBox[{3753, 3754, 3755, 3759, 3760, 3761}]}}}]}, {{}, {{}, 
       {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-1.2090629622270728`, 0.}, {0.8350950368936221, 
         0.5272012520796961}, {
         0.8350950368936221, -0.5272012520796961}, {-0.3634026589311146, 
         0.7221948220318323}, {-0.3634026589311146, -0.7221948220318323}, {
         0.15043374943398566`, 0.}, {-0.13475554313192517`, 
         0.}}]}, {}}, {}}, {{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], 
        AbsoluteThickness[1.6], 
        PointBox[{{-0.5, 0.}, {-0.5, 0.}, {0.5, 0.}, {0.5, 0.}, {0., 0.}, {0.,
          0.}}]}, {}}, {}}},
    AspectRatio->1,
    DisplayFunction->Identity,
    Frame->True,
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Large,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
    PlotRange->{{-2.290785217297691, 
     1.9168172919642406`}, {-1.8039170771024509`, 1.8039170771024509`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.05], 
       Scaled[0.05]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.674901626494658*^9, 3.674903143863595*^9, 3.674903445816263*^9, 
   3.674903502049872*^9, 3.6749035577269983`*^9, {3.674903617227302*^9, 
   3.6749036350858507`*^9}, 3.674903711492485*^9, {3.674903783485037*^9, 
   3.67490385200747*^9}, 3.674904248380031*^9, 3.674904539727919*^9, {
   3.674905077905952*^9, 3.674905155350131*^9}, {3.674905198453768*^9, 
   3.674905278050394*^9}, {3.674914351085289*^9, 3.674914364934512*^9}, {
   3.674951423618733*^9, 3.674951436348687*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]", "=", "0.001"}], ";", 
  RowBox[{"\[Beta]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "5"], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox["\[Beta]", "4"], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "6"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "6"], " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "-", 
       
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
     "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "/.", 
      RowBox[{
      "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"zeros", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"potential", "[", 
      RowBox[{
       RowBox[{"line", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunks", "=", 
   RowBox[{"sqrt", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{"a", "-", "b"}], ")"}], 
    RowBox[{"(*", 
     SqrtBox[
      RowBox[{"f", "[", "t", "]"}]], "*)"}], 
    RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "f", ",", "zeros", 
    ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6745698325272093`*^9, 3.6745698534102497`*^9}, {
   3.674569917850174*^9, 3.6745699364522085`*^9}, {3.674569989817911*^9, 
   3.6745700752046757`*^9}, {3.6746218993259897`*^9, 3.674621911606211*^9}, {
   3.674622362764021*^9, 3.67462254226054*^9}, {3.674622574237997*^9, 
   3.6746225800900073`*^9}, {3.6746226866282544`*^9, 
   3.6746226980086746`*^9}, {3.6746230555282564`*^9, 3.674623079203499*^9}, {
   3.674630191344767*^9, 3.674630213784864*^9}, {3.674630260980904*^9, 
   3.6746307658956833`*^9}, {3.674630854944923*^9, 3.674630915506773*^9}, {
   3.6746311786005287`*^9, 3.674631220058567*^9}, {3.67463131104191*^9, 
   3.6746313496087503`*^9}, {3.6746314477031593`*^9, 3.674631508692155*^9}, {
   3.6746315413639793`*^9, 3.6746315913995*^9}, {3.674631653037863*^9, 
   3.6746318269471903`*^9}, {3.674632294353447*^9, 3.674632307291277*^9}, 
   3.674713480709482*^9, {3.6747135297255363`*^9, 3.67471356968962*^9}, {
   3.674713620034906*^9, 3.674713625048163*^9}, {3.6747136597838182`*^9, 
   3.674713697696732*^9}, {3.674713904056275*^9, 3.67471406881924*^9}, {
   3.6747141976958103`*^9, 3.6747142006870213`*^9}, {3.674714437131072*^9, 
   3.674714437196405*^9}, {3.674714547734468*^9, 3.674714556678218*^9}, {
   3.674737960475657*^9, 3.6747379850567017`*^9}, {3.6747380182575703`*^9, 
   3.6747380928485928`*^9}, {3.6747381266014357`*^9, 
   3.6747381708949327`*^9}, {3.674899147139434*^9, 3.674899160751631*^9}, {
   3.6749057510480003`*^9, 3.674905751159912*^9}, {3.67490583115362*^9, 
   3.6749058516953278`*^9}, {3.674906295991721*^9, 3.674906338801784*^9}, {
   3.674906389709622*^9, 3.6749063939838247`*^9}, {3.67490652940211*^9, 
   3.674906538620612*^9}, {3.674906581869535*^9, 3.674906613594713*^9}, {
   3.6749075097186003`*^9, 3.674907541653768*^9}, {3.674907724579755*^9, 
   3.674907725994588*^9}, {3.674907780143928*^9, 3.674907783304734*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9085621457122293`"}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "+", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "-", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.00031171697817377047`", ",", 
   RowBox[{"-", "0.00031171697789562474`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67463231282607*^9, 3.674713628962058*^9, 3.674713662946259*^9, 
   3.674713698331954*^9, {3.6747139698849792`*^9, 3.674713997644226*^9}, {
   3.674714040275152*^9, 3.674714069314946*^9}, {3.674714193042343*^9, 
   3.674714202261915*^9}, 3.6747144385332947`*^9, {3.674714550430603*^9, 
   3.674714557181621*^9}, 3.674737806427273*^9, {3.674737961278553*^9, 
   3.674737985691721*^9}, {3.6747380443226223`*^9, 3.67473805438195*^9}, 
   3.674738093582716*^9, {3.674738127265416*^9, 3.6747381715018463`*^9}, 
   3.67483695713031*^9, 3.674898950931019*^9, {3.674899150118249*^9, 
   3.674899161145083*^9}, 3.674904248442429*^9, 3.674904539801716*^9, 
   3.674905752849414*^9, {3.67490583170653*^9, 3.674905852007999*^9}, {
   3.67490630409307*^9, 3.674906339387286*^9}, 3.674906394344993*^9, 
   3.674906539584276*^9, {3.674906589772007*^9, 3.674906613931275*^9}, {
   3.674907514929556*^9, 3.6749075419758797`*^9}, 3.6749077268461657`*^9, 
   3.6749077838061447`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4.8505128658648236`"}], "-", 
  RowBox[{"0.45345036723048493`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.67463231282607*^9, 3.674713628962058*^9, 3.674713662946259*^9, 
   3.674713698331954*^9, {3.6747139698849792`*^9, 3.674713997644226*^9}, {
   3.674714040275152*^9, 3.674714069314946*^9}, {3.674714193042343*^9, 
   3.674714202261915*^9}, 3.6747144385332947`*^9, {3.674714550430603*^9, 
   3.674714557181621*^9}, 3.674737806427273*^9, {3.674737961278553*^9, 
   3.674737985691721*^9}, {3.6747380443226223`*^9, 3.67473805438195*^9}, 
   3.674738093582716*^9, {3.674738127265416*^9, 3.6747381715018463`*^9}, 
   3.67483695713031*^9, 3.674898950931019*^9, {3.674899150118249*^9, 
   3.674899161145083*^9}, 3.674904248442429*^9, 3.674904539801716*^9, 
   3.674905752849414*^9, {3.67490583170653*^9, 3.674905852007999*^9}, {
   3.67490630409307*^9, 3.674906339387286*^9}, 3.674906394344993*^9, 
   3.674906539584276*^9, {3.674906589772007*^9, 3.674906613931275*^9}, {
   3.674907514929556*^9, 3.6749075419758797`*^9}, 3.6749077268461657`*^9, 
   3.674907784329496*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]], 
      LineBox[{{0.9999876656422945, 7.780169246817496}, {0.9999999795918367, 
       1.5851510612584503`}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVx3k41GsfgPExhGxp0jA6OCYp9aIslSVfHSIclLVFC0oqW7ZsUUTZsk3e
7Fsq6kiy1JF5HkvkIEv2FKKJmd9QmLIU73n/uK/PdSu6eNucJ5NIpMJ/+7/m
56e68bS9gVy+Zv7Ae3n0pczBZZSmBQ5Un8u2SYmIKtp35znNGAqWZkhFXxjo
JTPc46qyFSSFVKidzMpAajpSxTk0OygSPOKbnZqDSJum09YUjsOG4Guddbfz
UTdRF+msfBq4rUE/feQKkW6XZnkq7RyoP3ZjXiPuo60Hch82ZruBlt+FQ2Ya
D5BYqXDegsJF8JSPeJHq9hB9iPqQ6KDsBWvdqTEn75cgnNWonUjzh7Xl9Qm3
8v9CWj1Bz7adDIB8i5zLO+LLUImwmiozOxAWM+T2Ub2fotSAe0qzCsFgX9DR
Hp5ajlytPTcdVQ6Ho4qd/BY7K1DUjfigONpNYIzwO54kVSHmb27VDn/fBJXr
8v7JdlVoscZwgX4yGrbcumwe/7AKeczwvGuzY6DaznBA2Lwa2Z08e4FQiIWm
YHt+n8gapKyt7WClfAfchokQudaX6Jz/LC2WxoCofBmlqKE6pMmfGlLhwwAZ
s1TCdAsTkVO13r9vYYDGI15VrBMT5T0NzlYLvAuuyzJHUj4w0TCbX6G3Jx3m
TfYxBYYRsnaWUVJIyICSJNkjLqMY6VodVKtazQWLyvTSz4UNSJhhVvD1232I
cKy1r2h9jVb2j68UyBZD6VzHEhp9jWY+BDnYGhWD86ZHB2p5r9G77Y9EqxnF
UHA8/GaoYjPKrRUMDN33AKROWS/sCGpGWhON5oLXHsKyVnKAK70FndUwWNgi
XArOYe0nEy+/QTVdGqam8k8hulponevgP+hY1MhwY3wllF4PstXe3Ym8n/mp
3lt4Cb4TW3+/zexGc8n9b/j4ENjv8jDUyH+H3tQ3o079BmiO21knktaHLgab
iR8nmmDi6jjlsOcAql+vsfbEswWaEdpHyA+hB0VNq7Lb/oH6LY92fZ0dRobU
ukLbsnawPDWf5pk/glRbRl407+yE56RBgxizj6jX0HamZKYLEioXP9iJjyEP
kcs9fbt7wONKiLjj9BhqG3Ssk7jzDs5AV/TpkXFka3JsfHKyF86pPuMf7PqE
9ubHO+Yr9QPbqM/FtHYCja2m9bpHDEDdyD897PpJ9Nmss4jaOAic1ixDA/wZ
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
       "]], 
      LineBox[{{0.9987522977908647, -6.900661354412972}, {0.9989431914422024, 
       0.09667541568310752}, {0.9989703368833786, 1.0917100454391657`}, {
       0.9991269007077702, 7.780169246817496}}], 
      LineBox[{{0.9999089335719238, 7.780169246817496}, {0.9999999795918367, 
       0.4255978367558829}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-6.900661354412972, 7.780169246817496}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+EiMbX5tjQALr3mbBts/8D/DQBrj
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
GTmT
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-42.807451252874365`, 217.57845213884727`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67463231282607*^9, 3.674713628962058*^9, 3.674713662946259*^9, 
   3.674713698331954*^9, {3.6747139698849792`*^9, 3.674713997644226*^9}, {
   3.674714040275152*^9, 3.674714069314946*^9}, {3.674714193042343*^9, 
   3.674714202261915*^9}, 3.6747144385332947`*^9, {3.674714550430603*^9, 
   3.674714557181621*^9}, 3.674737806427273*^9, {3.674737961278553*^9, 
   3.674737985691721*^9}, {3.6747380443226223`*^9, 3.67473805438195*^9}, 
   3.674738093582716*^9, {3.674738127265416*^9, 3.6747381715018463`*^9}, 
   3.67483695713031*^9, 3.674898950931019*^9, {3.674899150118249*^9, 
   3.674899161145083*^9}, 3.674904248442429*^9, 3.674904539801716*^9, 
   3.674905752849414*^9, {3.67490583170653*^9, 3.674905852007999*^9}, {
   3.67490630409307*^9, 3.674906339387286*^9}, 3.674906394344993*^9, 
   3.674906539584276*^9, {3.674906589772007*^9, 3.674906613931275*^9}, {
   3.674907514929556*^9, 3.6749075419758797`*^9}, 3.6749077268461657`*^9, 
   3.674907784461046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]", "=", "0.001"}], ";", 
  RowBox[{"\[Beta]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"potential", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "5"], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox["\[Beta]", "4"], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox["\[Beta]", "4"]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        SuperscriptBox["\[Beta]", "6"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "6"], " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "-", 
       
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"x", " ", 
           SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
     "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "/.", 
      RowBox[{
      "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"zeros", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"t", ",", 
     RowBox[{"potential", "[", 
      RowBox[{
       RowBox[{"line", "[", 
        RowBox[{"b", ",", "c"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chunks", "=", 
   RowBox[{"sqrt", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "10"}]], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{"b", "-", "c"}], ")"}], 
    RowBox[{"(*", 
     SqrtBox[
      RowBox[{"f", "[", "t", "]"}]], "*)"}], 
    RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
        RowBox[{"Im", "[", 
         SqrtBox[
          RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Delta]", ",", "\[Beta]", ",", "b", ",", "c", ",", "f", ",", "zeros", 
    ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6745701741886644`*^9, 3.674570213594739*^9}, {
   3.674714113541958*^9, 3.674714139787716*^9}, {3.674714443464588*^9, 
   3.6747144475468884`*^9}, {3.674714529553709*^9, 3.674714538519815*^9}, {
   3.6747145873355427`*^9, 3.674714596741329*^9}, {3.674714826794375*^9, 
   3.674714866956509*^9}, {3.674737855869584*^9, 3.674737949640643*^9}, {
   3.6748374257768507`*^9, 3.674837436763728*^9}, 3.6748990958595657`*^9, {
   3.674899176267618*^9, 3.674899183083973*^9}, {3.674905788017476*^9, 
   3.674905788252966*^9}, {3.674906235611176*^9, 3.6749062865295467`*^9}, {
   3.674906359098114*^9, 3.674906385703314*^9}, {3.674907499634858*^9, 
   3.674907504954337*^9}, {3.674907548506731*^9, 3.6749075559644537`*^9}, {
   3.674907733510345*^9, 3.674907735062352*^9}, {3.674907766250244*^9, 
   3.6749077742143393`*^9}, {3.6749096299690332`*^9, 3.6749096343551292`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9085621457122293`"}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.454280572872411`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.7868335858709273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "+", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6435487656641044`*^-11"}], "-", 
    RowBox[{"0.0018521642376800897`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.00031171697817377047`", ",", 
   RowBox[{"-", "0.00031171697789562474`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6745702156891427`*^9, {3.6747141302437887`*^9, 3.6747141637071953`*^9}, {
   3.674714443935164*^9, 3.674714447862277*^9}, {3.6747145307817307`*^9, 
   3.6747145390445957`*^9}, {3.674714588113887*^9, 3.674714597193454*^9}, {
   3.674714828679791*^9, 3.674714867237482*^9}, 3.674737807053907*^9, {
   3.674737860017611*^9, 3.67473795008364*^9}, 3.674836957674769*^9, 
   3.674837332873701*^9, 3.6748374371109953`*^9, 3.674898951466859*^9, 
   3.674899096422235*^9, {3.6748991769191093`*^9, 3.674899183375578*^9}, 
   3.674904249065892*^9, 3.674904540411315*^9, 3.674905788925353*^9, {
   3.6749062404877768`*^9, 3.674906286832902*^9}, {3.674906363934142*^9, 
   3.674906386065336*^9}, {3.6749075002636127`*^9, 3.674907505303011*^9}, {
   3.674907549045142*^9, 3.674907556224615*^9}, 3.674907735560102*^9, {
   3.674907766874711*^9, 3.6749077747764177`*^9}, {3.674909630635334*^9, 
   3.674909658092268*^9}}],

Cell[BoxData[
 RowBox[{"4.8505160567203305`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.3603477089318103`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.6745702156891427`*^9, {3.6747141302437887`*^9, 3.6747141637071953`*^9}, {
   3.674714443935164*^9, 3.674714447862277*^9}, {3.6747145307817307`*^9, 
   3.6747145390445957`*^9}, {3.674714588113887*^9, 3.674714597193454*^9}, {
   3.674714828679791*^9, 3.674714867237482*^9}, 3.674737807053907*^9, {
   3.674737860017611*^9, 3.67473795008364*^9}, 3.674836957674769*^9, 
   3.674837332873701*^9, 3.6748374371109953`*^9, 3.674898951466859*^9, 
   3.674899096422235*^9, {3.6748991769191093`*^9, 3.674899183375578*^9}, 
   3.674904249065892*^9, 3.674904540411315*^9, 3.674905788925353*^9, {
   3.6749062404877768`*^9, 3.674906286832902*^9}, {3.674906363934142*^9, 
   3.674906386065336*^9}, {3.6749075002636127`*^9, 3.674907505303011*^9}, {
   3.674907549045142*^9, 3.674907556224615*^9}, 3.674907735560102*^9, {
   3.674907766874711*^9, 3.6749077747764177`*^9}, {3.674909630635334*^9, 
   3.674909658631756*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{2.040816326530612*^-8, 1.1604417554947883`}, {
       0.000010924318577395528`, 7.028367089203319}}], LineBox[CompressedData["
1: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
Ag==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{2.040816326530612*^-8, -1.1627788563061108`}, {
       8.571632704291597*^-6, -4.213792334885157}}], LineBox[CompressedData["
1:eJwVlWk81XkDR4USyXLJVqbEWLO3Un1/RaiUIkkkUVKZlokaTaVRpBA9pJgy
HkJxs5RKst57uZZ0s+U+1uzZ/n87Wafnxfmc9+fNUXG7YHtKUEBAwO8n/7eb
6t6O1sNFqHuuYiauvIp4d9BLc0OLINlaELqRs5KUFpUU8LaycCuo1/5JthJJ
+jTbGWrJwv4b4uzqF0okoN5IzNqWhSSeQMzqaCWyczD2UOlpFlp5m4WHfJVI
rsLV3sL/sMCzNrX13KpEMi5oyLz+zsLBqRChpxxF8kQ5yCMyko3Qj/1zFm0K
5IpmfrDtP2wIylmaPKpRIPbGYxlSKWw4DGoeGSlWIIzdrjMhBWyskDKs56co
kBDvzeEBfWw4U8/ND/kokFsV3z9cIRzw69SjhsQVyBnf3csdBziQumYYq24h
T1JWSh9zmeCghNubMWoiTwby+Ex3gWIIeDqeqNCXJ+cFPa3Pyxbj3sIrlxhF
eeIdHBh8e2sxgmP+1nw7KEf8nrFF00KK8bRyC6l6LEceFW1bIqRbgvhn+fJm
oytIkajRAvM3Lrolbtx04MgSzUMG7+//wUXoneuXEnJkSXis3gXP21wsjC63
nMqQJa7GOq2q0VyIb032zH0mS+ad1QpiOFyoeHcYvroqS0wy5PyCVpZC3qki
QF1XlmQdnpl3LytFtcH6PK1YGZKUwJlX+rUczU4qjaZRDHIx4FAb9Mvh1R+Y
MfSAQUxPd7JPbimHjw1fPvUug3zRFr6Xtq8cw/uP+hv4MsiPTDOZnVfKcWSi
VOaGM4NYF7I0znDLkXb7Xrq8GoOMNhUeeH+mAoYaG/s030sTIpcXb5f2Cdcr
qXVB/VJEl9uUXaLNg4mNn/c6eUlSS+yol9QXPDG3OC3wQJx4iZ2rrjOoRtyq
stKGO2Kkgu+QJ/GgBsO1pf07opcSO4sjbZ2dtfg8VnYzcmQJ2RgX7BCn9hU7
NUzD9SMXk2/zEbWefvVYcU09LR/CpGs3L0GOzccmf0XaWEWIZES3+lapNEBu
qpp7XESQJAYJ3dO61gg1kx1m+5ctIuPuR/s8Pjbhk/bn7eNGAmSZeaBtpnwL
CgcGgxlZ87gu1SXe5tyK+vkEoxzTOYjn6wjU7/uGwhyfHwbtM9h2xWaOPf0N
EVzZ4c3+03j6PCRB9Wkbmk1DJcKsf8DFfn2l6N52rDZV9qyUmMLbulMR+RPt
2MPZMhjTPYEtnzIEu6M6MOMX6vWoZRxrdnmMR5h3opzvlNRQMYYN6zc8zOru
hJWLrHtl7ShaR0LLEgK64JbcOKnZN4IB44MBikbd8LB+PsIcGYZ6v27foppu
hH29ZG0pPQyOmk/1xb964GRjuZCsMoSw2jp3W7Xv2BSXlWdznwJtV/hQkPMd
Vq5v1MqaB/DafoXZlku92FT1Iz5Moh8JlbeftTP6YGVr5Tjq3ItJrvOfDFYf
otPM4iT9e/DtYcG41Pl+cEpOM+2TujBRZaroLzGAx228E8LNHbgYubbQN3cA
XQfPdpR+bYN85VqpTpdB3HZPsjFOboVdHXN21fwgnPXu84qONuJmstc0T4BC
zsASnqRlI174rpvyF6IgUqFoZ2fciFll5uj3pRRmJrLu5ixrRJJHal+WDIUV
2iY9S3IbMD35km+tRcHgpeeNW0oNiFdKzrp+iEKxsqem9mc+Pg14vNZ3oNA2
pe4/ks3HZL56RrsjBe21DRHMBD6s3ZNSrY5T+Pre3nz8Dz4mUhPjZc9S6Ax6
eK12LR97tj0PZ/pR6MgkwomX6zFy/L9eTSkUsvcE0iZLv2L88eINJ15RqMkJ
jbg0Uocp3pm5rnQKOoftSFRTHRZg9IDOovBY40Pdi4w6iK9hpwsWULhrOBY7
4FCHX791jmjWUFhsPWWRHV+LI66avj4zFLKYNMtNowZOT0J2TM9R4LGGpL9K
1MDly5ConwAN9pOIPN2JapwiH2KCFtMQWy53KYhTjd/X7Mn9W5JG+2WRqJbj
1Qj5dm6hSJVGYcuXgmfhVShwTQ+QsKbRb3r4/momDzk8r70t+2kEKE30KJzj
4d12bem0gzS8rE+9jNLigbkq8ek+BxpXWK7NjMTPiOHHvAlxoxFmzPwl/VEl
fA4Eton50nA1b1Qbd6zAxQKz5IY/afSopG84K1kBL71Fv6XcpPEmnX9emVMO
N/HrU7vv0GCsGpdU0ynHgdJLkvfCaDAlpKY6qFLokGPbRJJoFA2pGIruKoF6
upJQ/Qsa4L9W2tVXjLW/8EuTUmnIyEyGyDwohsKs7SGLTBqtTnfKVlZxsCTb
6lxALo2cG2Sz886f39BYYmhfQGN69uSxd/9jYe4Re0KNRcNJ07u+6jwLY5e3
+3O4NESMqujkh0Vo018fLVTzs9/JtxEyngVoih12qamjIWo6e8PrdD74y9PV
Evg0dGauJhu75OFzv1bGzhYawY69eop6H1F+tMeH0UbDQ0tU7INwDorLnpu2
d9DYpDNamlyZjdzk1dy/emmU7NcLdNR9h2y55pCDAzRMMm2l2XlZeBMQY6tC
06jWXnxfzPgN0sYcFIaHaRiwPFgigZlIcV/RUjhGI1bzw63rDulIrK5OCJ+k
4SPTFn5MNRVxO8LPuE7TSPys/CZUIwlPM/bpG8zRUNX4PfKu3T94vHrZ+MIC
DcVnbNWeXj38Cw7F/eI=
       "]], 
      LineBox[{{0.0012221546689624985`, -4.213792334885157}, {
       0.001226810407675648, -3.316507849123661}, {
       0.0012430452337336773`, -0.047503490682081956`}, {
       0.0012781860642366771`, 7.028367089203319}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-4.213792334885157, 7.028367089203319}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
zg==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVVWc4FQ4fFQ2p7J3cSFb2KFm/XyoiI5uMSEalIaNokFBZkVEkhS6SPSLr
XnuFrPirbGXeK7ust/fTec6H85znnA/nCFy8YeRIS0NDw7WNhub/qOM40UGe
NFUXWQ+gqYyfJ/3KNrs4yKMAMXHztnVEKzLnnp7wAp5TkBE+zLDCcp78qfKB
621hfUha9Zy7ftSALHWcnfiaxwTi9J1PKT5hIL8b4EgvsjGB7fX/Ee2M0kk0
bJNRWwRLKGs/ZayqpIcdMxX+9sK2oPI38IoNizUaOjSV2Mfag1Gd1jl7fgdU
/iKf+5znEjhLz1iv3XPCQ2qJaTUJTnA4RTqb4OKCezPo3ywSLkOBmv+qufpl
XOR0jz2cchVqmx6DnPll/PHoR5iZ8HUIImEw/YoLOqymVNeY3ISz9dYrD/Rd
sFfKUt061g1208Yl6z5wRl1HxtLF3ltQIGnm+/qVE5Jf1SiG8XhAqWNNc0mB
Iyp03sk7bOUJ/TLtatltl/A9vZRkZYIXzD+VbJb87YD8MJpuNnAb7JZG/aoO
OOBzz5dCVII3MA2HesebXsSdmXpvH9v7wOqcBhtHnD36jNDyHUy5CzXyjbn7
JuzQweAam6HwA9jy0t1U0LuAfYGCzyadfaFdq5owImaLwgNXd1SZ+MFycc7w
f9w2aOeteTJsyQ/SPBXD6rmtMZ5d4KFl7EOodk4usxO1wu6ctcrDx/zhoJqr
qofmeWQ8+3X9d68/EOlP6424WeKjhyF3gnkCYH09+xV5xhwr+Zw+mpUGgOG7
Tyu2yua4WoyLglaBIPvCoTUv0gxdKUs3yhKCgHUgOTrxvCmmPv2S9VjtMYQS
PxYtNpvgkNCHaeOBxxAREDjmoWGCJlZ2zjOEpwBdYSVrp4wxfFmZWEJ+CsNM
s5IC7UbYGMkxGmAfDDefiZ3NtDVCtcZm2wMpIeAz7JQUGWqIdxyICZMnQ8Hj
WBZZV9wQ8zd9+4vGQkGow2hT8vM5FFZUNNMXDgdeVyVHx/3n0O4LUzRvQzhc
GJioiYwwwFdXpzp+Oj+D/Vr9IX1z+kjf0Z5KMokAU33Y416jh0T+irrDxAgo
o9vDwa+ohxquGWMhSxGQus38xvIHXby3K1DQIjYS6JXGF3nTzyKP6a0TlT8j
4cSRuqwJibP4MfmCndCx58Bczcvys0gH59SUE+d6n8OgyvzZxC5tvORB5XnK
Ew23aOoD1pTOoDzdc5/8m9GgLnA7TbtTC2mfK3z71hANuYfeP5+5roVvcrwT
pLxi4BmFfygiTxP7p+gI3Z2xwBxgvuFlcRrTvVN9N8ReQFLQW8m79KfxNr32
kPDDF/BpM1j7c+kpZBcOT/KWfgm21cu984dPoYE9txAhNA7cmWPJE2wnkX+u
NODMaBwcX2GbH+rSwJkHNuNuyvHw3s3e2S9GA4MTklNrJ+KhbVuLlecBDazt
lRC7cjoBrp0TzUxRP4FRTu1PoxISgI3JZk2F4QReXHKbKl9IADo/EV/GXsQt
1uIPTMmv4Zp/KscxD0Rl/RNSRZuJsGi2/9PO24D0P0bDB0zfwLp+bnkmAbD3
ahB1V9YbSGc42S/brI6ltY4WWZJvIcT1h9RrIXW0GMngofn+FlLuiCZ7zKoi
SWy9KXpXEtCN3dkMTlFFYTc9HzH5JGC73jfIaaWKS1vUfqPgJOBMCvru0KaC
zw8oJhCVkkG26dDKp1pl/HspSFf5UjKcqzrgZxeojPaZvettz5Jh8Jpbh7SW
Msqo+Nis/kwGBV+HbtG249hqQeI/G5MCpjbkfYUTSkgfrZ009/sdSLu917yt
cwzXlIbXkniJwBlS6vnywDGk/LhjZnySCC75plyOv49il0j6no/RRBA0+xD1
O/4oJpbt9Lp7LBWqGzyJ7kuKqDBao7PzfhoE9jO/069TQJEnVsRiYhqoZ73/
E5OkgLySC1subWlgoKenYf5AAbe8BItaCOnghb571Y8rYDPDQ0JkdTr0iK7E
WhfKo52c+uJ++gyYHpnv2Vsph8a9PfqtMhlgv9w/MvdWDjXvXXv/wDIDettt
K6QC5PBIfYLtcEYGXM+hccs7K4fLlmuNqXof4Kdd2Lb0AVkMfVjyWjYqE/Kd
rzQQ2GTRV/jc6khZJuTYRWXN/5XBWy2/jKLHMiG+Zyh+96gMmnNw0a8oZkGD
zCDvVoEMCr73vFXelwWcNl7zUxYyWPxFTkuLPwdoLQODu62kMXxy5oyEZg48
VPhq0C0vjU60aTos13PALzn78fG90sipsF//W0UOvFI7bCZVKYVlLQ8ziqVy
IfOztGqcsBTul76Sd7YtF57N+S+coZfEIBUtOfWRXPgxIc2zNi6B81pCBTLL
uXDlM6F/o0YCm+0GCjn48yBcx6Bhzk8CfZ4blQxey4PsSstX1zePYP+SMsl9
Xz58eLZjZnrnEdSk5UYngXx4SM/yTnJSHPMZl8gWivmwzhXgldsijsEiOdVq
Nvkw8NKd1ytSHJUtD9XvysoH9jjlhSmCOMaV72l9pVsAaeY9Lp1aYmjx6Ht/
TUghdHlS0mYrRZB5SFjCOakQzqzI8dCmimCTqtt9huJCOEsjGqITJoLKyzsO
Go4UAu2tT1Me1iK4/7K044BSERDc0u7ybwjjgL4/dXW8CEZp1iZPagnjJV7R
7VJYDBd1euNxTQj5bt8y7TAtBolyRfaGX0LY01We6nG1GPR9de67dQuhZpih
dllsMcjM00bJZAuhCM3d8DOzxXCL2q+t5yCEU+Ot3A7xJdAP5w7ldR3CG3nu
ki8XP8F61u26kWZBpKgOdzXRl0Jcog5Ru1wQXRv1fdb4SmFwdYaxIUsQXQbF
GmxPl8KV01k52yMF0W7fkN3h2FI44UcXH2ghiOcu60bnHyuDJJLBC/dpAZQR
OLz22accZCxk4hoJApid+TxpM7wceCuW4lPZBFBCieaMTEo5BOY65cTsEkBR
g2/RUS3lMHU+1C+VehAP3o+UOs9XAXer702Hkw8iy38b9r8qKoBi8p+ljeNB
nI/42rhtGwmO8Rx6K+FBwHLXPBjjJIF0iFf6HxsCPj4T+rFeggS130/UjWsR
kI9G412IBQnc1zKP8fIR8PSNLF+OXBIQPcV3zdbx42dhjVfR0mRoUvxK3k7g
x4M7eIzSB8hwc7Ah5+Y4H+5wDwqLmyTDb6XF09mdfDg1tNAYvEiGDtGydToy
HxaVt8E1hiq467rJshLPhzoeAZJyR6ugnt9/YNmQDz1GqfTlYVXAPEgKO1q7
Hxur6kntqtXg92TS9GUJL6Z+Xh8L06oG/ft7azrTeTGwV45B16gaiO008YQ4
XtSYTTRpdK6GgXal7XPevFjOfXuS/Lwa2nVVjFxUeTH3hghb/kQ1GK+G0iXU
8uDLA0+coqNrILRsekNzmBu9RCtDjN7UAC2nlnJMFzeayi/mMmfUgPmsqMV8
HTeyatuthZJqgJNZtrcvgxtDPZQiAqdq4ALl3SkTT270a5n45IW10N8jHDu3
lxsve2vvs5ypBWYf2URhTS7M2M9iY7tcCw0Nk7kLylw4U9GX6UBTB7QulvYt
0lx4ndZF9zp7HYRsZdnG83ChR0hQyCPVfzz+lWjRLCf6vq7ZnR1aB69aj2PH
C06MqVLbSSdZDymvK7lOLnBg1W65rcxrDTDGeP+BeS07iprIFAffaYDwgHtu
KaXsGJEodcPlUQNsLOzTWs1lRzv5I4OH4hpgn2qaS/lrdty0FiLF1zaAoMeo
bNZtdlTO5fR9sr8RuKxaAoUl2bHQbG3ToakRvsgoVIglsmFqSu0m7+FmGLAS
+KYSy4o3A02GQboZrk4H5c6Fs6KK81jNpePN4GnQx/XhMSt+Ed/+NFuvGeb1
z/vLeLPin7yTbBpezWCx3Mh235oVdcnVIpcbmiH70dMcLiFWXPhOPld8uQVk
RY5OiRazIHJWJBtnf4b7rRSJJ9PMKNnwvaRevB2OG/h6SHAxYTcaU95TvsCL
U5rONOF70ZXhamePTCck8TU19gcwYEufeQVjeBfMdzdOn4ijR2NNi+GxsW5o
XWx6ED2/E4++DTF/K/QVNERUIqSjd+DQZlS3i28vcPgIZ1fCdhzXbk/hrOkD
JX8eqrwAHebGDXp3CPQD12pnw4VdtEh8QvdUzOcbCCmfOKm/ZxsuOZyfcir7
Dp/F29SX5Ghwz6kgozyuASDNzIawFm7CPebxvcPWg9C3mSJXqrIBeyuP0PTq
DUFlqecfmZE1UPMy2Kj5OwTPG9h/K/n/hYR3oSmHEobhu0oY4zPdP2BrqtC6
++wI8KsccGllXIWiHseoyuUR0Kk9Phv/cxmOf86l/Rk7Cn99w1xjBpbg4Gmn
pahTY9DcZ5Xa37IIigqKkYU/x0Dblt2htXsBBufDmlICx+Fi2rcV0al5mJE3
DOSR+wnOuu/mM+d/g/C05NS2rp/w7KubrhbLb6gV8uy8+fAXWBlobaUJzMGz
7h4HI6EJUHxbWGEQTAGqMTmStnYCtO0KhJp+zEC+KcfJ426TcKzjT/IzxmlI
aX30eoR1Cs4YnbFcsJ6ElQbru6zVUxCXffItk/8vGIokLTFfn4a6eudM09Rx
WO5Q4fFnnIEXw+3223+Mws1oQbJ3+QyMG14Zbfw6DFytgsxjtrPg75BqIJ82
CMY9met8m7NgLRXcXnX+GzxIc/3bTkOBspmd7Uxa3yDdW2LVn44CO1t4jI3l
v8H6gcyFCXoKrC8XPi7d8w1SnT5MFbJRgENc+dfO8n74u/K+T1eMArLvXe77
8fZDMm9a4T0TCtQdcBEVb+uDzzNO+dLmFBhaFfafL+mDlUrh3BFLChwR7I/K
TOkDXYfUD2cuUKC72PTU0p0+WP5ATGa/QoFfTyJ9ugX7QEftXUSmLwVG83A7
0b0X5i8kuX7PoECJThBVmf4rLL3YoWifRYGe0rAot/keWG2/vDGeQwFxM2OM
/d4DWyAXTi2kQIzIp5703B7Ye7Amh5ZEgUDZxcQZ8x44PDQ2L9r1L6/uqmZJ
cjdY2Il6e65RoCiTWn1RpAusXoae+LtBgS/VcyxfGbvA9svcbl8aKlS9jKqQ
XO4ER/wU/2QHFfbu43R7UtsJtw7qlL9iosK4+67YgQudEDp0davqEBVIA19I
ryM6gGSXE8ioS4UpFbNgQmY7lLa7nh3Qp4Iv7/Iv7qvt8FFdnCXbkAqXdR3f
x4q1QyYfMUHPnAo3qu1+sBLbIL4vviD0IhVi5DP5c2JawfNc0DCDNxUunfom
tGTZAjdJJ9P671JhQiBH8QpTC7hKbbuW8YAKxTl91w/UNsPFvfdWtQOowMq3
xCR0pBnONboxPX1GhQJG5tVRSiMcQRu1XalUIM8JyO4+XQ/CObx0velUUO3L
5z09VQeC/H2NqR+owMK2EsoWXgfc60YmmnlU+GkV0LS/oxZ2lpy5Glj+T38f
law1/v2GyE5ZUxIVltcv2Xz8rxo2YmqWhaqpcEHUo7fjejUsuqv71zZQYbdc
BzUtsgqGpRXi6LqoMHSpKIrNhQTfE3/bdvVQgVZl/b6rcyX07csRSumjQtja
7TR52wpomxbL1RigwhPLSSkeqTJoPv/Lk3WYCoZiuxk+bS+FuqZ3KiOjVNgU
X2hMay2B8jRCw8PJf/3oSwVZSn6EEs4foYYzVODIM2KpqSiEgsB4IwEq9d8+
7QhmkC+A7EVz7t+///lXO1XvCsqDDAeOAfIiFf6IfvK7Z54DxM7OlIgVKsyy
DUfYHPoAb09EXLb7SwWNtgMFYSKpkJCrJy2zQYUvIreiHxu/gReEPUtbW1QI
Ecs49GtSCv4HrBtqfA==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
    
    PlotRange->{{0, 1}, {-110.59017156306648`, 351.598129893809}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6745702156891427`*^9, {3.6747141302437887`*^9, 3.6747141637071953`*^9}, {
   3.674714443935164*^9, 3.674714447862277*^9}, {3.6747145307817307`*^9, 
   3.6747145390445957`*^9}, {3.674714588113887*^9, 3.674714597193454*^9}, {
   3.674714828679791*^9, 3.674714867237482*^9}, 3.674737807053907*^9, {
   3.674737860017611*^9, 3.67473795008364*^9}, 3.674836957674769*^9, 
   3.674837332873701*^9, 3.6748374371109953`*^9, 3.674898951466859*^9, 
   3.674899096422235*^9, {3.6748991769191093`*^9, 3.674899183375578*^9}, 
   3.674904249065892*^9, 3.674904540411315*^9, 3.674905788925353*^9, {
   3.6749062404877768`*^9, 3.674906286832902*^9}, {3.674906363934142*^9, 
   3.674906386065336*^9}, {3.6749075002636127`*^9, 3.674907505303011*^9}, {
   3.674907549045142*^9, 3.674907556224615*^9}, 3.674907735560102*^9, {
   3.674907766874711*^9, 3.6749077747764177`*^9}, {3.674909630635334*^9, 
   3.6749096587829647`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Constructing", " ", "ab", " ", "and", " ", "bc", " ", "functions"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]begining", "=", 
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{"\[Delta]end", "=", "2"}], ";", 
    RowBox[{"\[Delta]nstep", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]begining", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]]}], ";", 
    RowBox[{"\[Beta]end", "=", "1"}], ";", 
    RowBox[{"\[Beta]nstep", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"abList", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"bcList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"potential", "=", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Delta]", ",", "\[Beta]"}], "}"}], ",", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["x", "3"], "-", 
             RowBox[{"x", " ", 
              SuperscriptBox["\[Beta]", "2"]}]}], ")"}], "2"]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["x", "7"]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["x", "5"], " ", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SuperscriptBox["\[Beta]", "4"], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["x", "3"], " ", 
           SuperscriptBox["\[Beta]", "4"]}], "+", 
          RowBox[{"4", " ", "x", " ", 
           SuperscriptBox["\[Beta]", "6"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["x", "6"], " ", 
           SuperscriptBox["\[Delta]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["x", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"8", " ", "\[Beta]", " ", "\[Delta]", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
          "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ProgressIndicator", "[", 
    RowBox[{"Dynamic", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Beta]", "-", "\[Beta]begining"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Beta]", "=", "\[Beta]begining"}], ",", 
      RowBox[{"\[Beta]", "<", "\[Beta]end"}], ",", 
      RowBox[{"\[Beta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Beta]end", "-", "\[Beta]begining"}], ")"}], "/", 
        "\[Beta]nstep"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"\[Delta]", "=", "\[Delta]begining"}], ",", 
         RowBox[{"\[Delta]", "<", "\[Delta]end"}], ",", 
         RowBox[{"\[Delta]", "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Delta]end", "-", "\[Delta]begining"}], ")"}], "/", 
           "\[Delta]nstep"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"zeros", "=", 
           RowBox[{
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"potential", "[", 
                RowBox[{"z", ",", "\[Delta]", ",", "\[Beta]"}], "]"}], 
               "\[Equal]", "0"}], ",", "z"}], "]"}], "//", "Quiet"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{"z", "/.", 
            RowBox[{
            "zeros", "\[LeftDoubleBracket]", "3", 
             "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"z", "/.", 
            RowBox[{
            "zeros", "\[LeftDoubleBracket]", "5", 
             "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"z", "/.", 
            RowBox[{
            "zeros", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"f", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{"potential", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"line", "[", 
                 RowBox[{"a", ",", "b"}], "]"}], "[", "t", "]"}], ",", 
               "\[Delta]", ",", "\[Beta]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chunks", "=", 
           RowBox[{"sqrt", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "10"}]], ",", 
               RowBox[{"1", "-", 
                SuperscriptBox["10", 
                 RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sqrtAB", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ab", "=", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"a", "-", "b"}], ")"}], 
              RowBox[{"sqrtAB", "[", "t", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"abList", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Delta]", ",", "\[Beta]"}], "}"}], ",", "ab"}], 
             "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"f", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", 
             RowBox[{"potential", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"line", "[", 
                 RowBox[{"b", ",", "c"}], "]"}], "[", "t", "]"}], ",", 
               "\[Delta]", ",", "\[Beta]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chunks", "=", 
           RowBox[{"sqrt", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "10"}]], ",", 
               RowBox[{"1", "-", 
                SuperscriptBox["10", 
                 RowBox[{"-", "10"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sqrtBC", "=", 
           RowBox[{"Function", "[", 
            RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bc", "=", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"(", 
               RowBox[{"b", "-", "c"}], ")"}], 
              RowBox[{"sqrtBC", "[", "t", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"bcList", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Delta]", ",", "\[Beta]"}], "}"}], ",", "bc"}], 
             "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"abFunc", "=", 
     RowBox[{"Interpolation", "[", "abList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcFunc", "=", 
     RowBox[{"Interpolation", "[", "bcList", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "c", ",", "ab", ",",
       "bc", ",", "sqrtAB", ",", "sqrtBC", ",", "f", ",", "chunks", ",", 
      "potential", ",", "zeros", ",", "abList", ",", "bcList"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.674909333282143*^9, 3.674909376831856*^9}, {
  3.674909548776291*^9, 3.674909621349751*^9}, {3.674909664823058*^9, 
  3.6749099199781313`*^9}, {3.6749099573825407`*^9, 3.6749101030583973`*^9}, {
  3.674910138032683*^9, 3.67491015002912*^9}, {3.674916117200366*^9, 
  3.6749161346941347`*^9}, {3.6749162966043253`*^9, 3.674916298390215*^9}, {
  3.6749200132698717`*^9, 3.674920015441043*^9}, {3.6749206256841707`*^9, 
  3.674920626897633*^9}}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Beta] - \
$CellContext`\[Beta]begining)/($CellContext`\[Beta]end - \
$CellContext`\[Beta]begining)]]], "Output",
 CellChangeTimes->{3.674910070025586*^9, 3.674910105575551*^9, 
  3.674910152695689*^9, 3.6749161703510447`*^9, 3.674916333263637*^9, 
  3.674920017294588*^9, 3.674920627822669*^9, 3.675611146119066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Dissipation", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"begining", "=", 
   RowBox[{"-", "2"}]}], ";", 
  RowBox[{"end", "=", "2"}], ";", 
  RowBox[{"nstep", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ProgressIndicator", "[", 
  RowBox[{"Dynamic", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]", "-", "begining"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"end", "-", "begining"}], ")"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"\[Delta]", "=", "begining"}], ",", 
     RowBox[{"\[Delta]", "<", "end"}], ",", 
     RowBox[{"\[Delta]", "+=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"end", "-", "begining"}], ")"}], "/", "nstep"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"R", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"abFunc", "[", 
                RowBox[{"\[Delta]", ",", "\[Beta]"}], "]"}], "+", 
               RowBox[{"bcFunc", "[", 
                RowBox[{"\[Delta]", ",", "\[Beta]"}], "]"}]}], ")"}]}]], " ", 
           
           SubscriptBox["s", "1"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"bcFunc", "[", 
              RowBox[{"\[Delta]", ",", "\[Beta]"}], "]"}]}]], " ", 
           SubscriptBox["s", "2"]}], "+", 
          SubscriptBox["s", "3"]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "1"], "\[Rule]", 
            RowBox[{
             RowBox[{"-", "1.8"}], "\[ImaginaryI]"}]}], ",", 
           RowBox[{
            SubscriptBox["s", "2"], "\[Rule]", "0"}], ",", 
           RowBox[{
            SubscriptBox["s", "3"], "\[Rule]", 
            RowBox[{"-", "\[ImaginaryI]"}]}]}], "}"}]}], "//", "Quiet"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Dissipation", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Dissipation", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", 
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"Abs", "[", "R", "]"}], "2"]}]}], "}"}]}], "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"R", ",", "\[Delta]", ",", "\[Beta]"}], 
    RowBox[{"(*", 
     RowBox[{
     ",", "a", ",", "b", ",", "c", ",", "ab", ",", "bc", ",", "sqrtAB", ",", 
      "sqrtBC", ",", "f", ",", "chunks", ",", "potential", ",", "zeros"}], 
     "*)"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Dissipation", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Interpolation", "[", "Dissipation", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Delta]\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "40"}], ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<A\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", "40"}], ",", "Black"}], "]"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", 
       RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{",", "lowField"}], "*)"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6745561626405725`*^9, 3.6745561991722374`*^9}, {
   3.6745562674373584`*^9, 3.6745564088154106`*^9}, {3.6745564487790813`*^9, 
   3.674556467611315*^9}, {3.674556510391263*^9, 3.6745565203314805`*^9}, 
   3.6745570102995505`*^9, {3.674557105167727*^9, 3.6745571167741475`*^9}, {
   3.674557661561326*^9, 3.6745576619835267`*^9}, 3.6745577275936427`*^9, {
   3.674557763198906*^9, 3.6745577635577064`*^9}, {3.674557801260977*^9, 
   3.674557905257967*^9}, 3.6745590486900024`*^9, {3.6745696966769505`*^9, 
   3.674569779164107*^9}, {3.6745702257525616`*^9, 3.6745702285625668`*^9}, {
   3.6745702623230305`*^9, 3.674570301605507*^9}, {3.6745703555362115`*^9, 
   3.6745703562080126`*^9}, {3.6745704014286985`*^9, 
   3.6745704036499033`*^9}, {3.674570437161771*^9, 3.6745704374445715`*^9}, {
   3.6745704910498734`*^9, 3.674570497384886*^9}, {3.6747142357787933`*^9, 
   3.674714310898448*^9}, {3.67471434599094*^9, 3.674714352446042*^9}, {
   3.674714607401494*^9, 3.674714607475264*^9}, {3.674714691463914*^9, 
   3.6747147068168983`*^9}, 3.674714799252129*^9, {3.674714876847096*^9, 
   3.6747148785221024`*^9}, {3.674714941922017*^9, 3.6747149426963053`*^9}, {
   3.674714994866788*^9, 3.67471499680058*^9}, {3.6747150542025948`*^9, 
   3.674715084791065*^9}, {3.674715204679673*^9, 3.674715204948304*^9}, {
   3.6747152622925262`*^9, 3.674715266329084*^9}, {3.674837258586597*^9, 
   3.6748372586686373`*^9}, {3.674837298001481*^9, 3.674837298517458*^9}, {
   3.674837351384487*^9, 3.674837352419024*^9}, {3.6748373934513397`*^9, 
   3.674837394158901*^9}, {3.674898981846828*^9, 3.6748990384467583`*^9}, {
   3.6749057946901627`*^9, 3.674905796163245*^9}, {3.67490586937757*^9, 
   3.6749058741408854`*^9}, {3.6749059252626753`*^9, 3.674906103967629*^9}, {
   3.67490662817689*^9, 3.67490670195772*^9}, {3.674906736397098*^9, 
   3.6749067384886*^9}, {3.674907286337512*^9, 3.674907286739621*^9}, {
   3.674907422963889*^9, 3.674907426988942*^9}, {3.6749074638140087`*^9, 
   3.6749074656798677`*^9}, {3.67490756699205*^9, 3.674907647668647*^9}, {
   3.674907810522503*^9, 3.674907833293454*^9}, {3.674910185508569*^9, 
   3.674910236422192*^9}, {3.6749102685285892`*^9, 3.674910269000538*^9}, {
   3.674910321800215*^9, 3.674910334826836*^9}, {3.6749105650508966`*^9, 
   3.674910661150069*^9}, {3.674910702937961*^9, 3.674910765116049*^9}, {
   3.67491206265594*^9, 3.6749120955848503`*^9}, {3.6749128471689577`*^9, 
   3.6749129505494843`*^9}, {3.674913004880579*^9, 3.674913004923685*^9}, {
   3.674913209697761*^9, 3.674913277749592*^9}, {3.674913340012858*^9, 
   3.67491335048573*^9}, {3.67491340699837*^9, 3.674913414637816*^9}, {
   3.67491344766996*^9, 3.6749134675352583`*^9}, {3.674913511730267*^9, 
   3.674913787839028*^9}, {3.674913818105341*^9, 3.674913830804823*^9}, {
   3.674913862444305*^9, 3.674913900288035*^9}, {3.6749139423344812`*^9, 
   3.6749139657889013`*^9}, {3.674914220583996*^9, 3.674914245916812*^9}, {
   3.674914285150762*^9, 3.674914328306706*^9}, {3.6749143908478622`*^9, 
   3.6749144680253963`*^9}, {3.674915402129744*^9, 3.674915440466902*^9}, {
   3.674919952598672*^9, 3.674919996866559*^9}, {3.674920601540307*^9, 
   3.674920618740548*^9}, {3.674951501038679*^9, 3.674951594070644*^9}, {
   3.674953355536446*^9, 3.674953358089993*^9}, {3.675611428177039*^9, 
   3.675611489279441*^9}, {3.67561156240381*^9, 3.675611568658733*^9}, {
   3.675611622216703*^9, 3.675611793478415*^9}, 3.6756119855186567`*^9}],

Cell[BoxData[
 ProgressIndicatorBox[
  Dynamic[($CellContext`\[Delta] - $CellContext`begining)/($CellContext`end - \
$CellContext`begining)]]], "Output",
 CellChangeTimes->{{3.6745563785213556`*^9, 3.6745564120134163`*^9}, 
   3.6745565211894817`*^9, 3.6745570111751523`*^9, 3.674557117647749*^9, 
   3.674557664792532*^9, 3.6745577306824484`*^9, 3.6745577641193075`*^9, {
   3.6745578019161777`*^9, 3.6745578486728654`*^9}, {3.674557880465523*^9, 
   3.6745579057415676`*^9}, 3.6745702306061697`*^9, 3.674570264978035*^9, 
   3.6745703022451086`*^9, 3.6745703567404137`*^9, 3.674570404180304*^9, 
   3.674570439138375*^9, 3.674570498274087*^9, {3.674714301320078*^9, 
   3.674714311431857*^9}, 3.674714353838546*^9, 3.6747146114247437`*^9, 
   3.674714712518735*^9, 3.6747148788536654`*^9, 3.674714943129938*^9, 
   3.674714998212201*^9, 3.674715055893313*^9, 3.674715089319626*^9, 
   3.674715206383542*^9, 3.67471526679611*^9, 3.674737807844298*^9, 
   3.674836958596162*^9, 3.6748372594052887`*^9, 3.674837299434018*^9, 
   3.674837353242426*^9, 3.674837394726984*^9, 3.6748989523262777`*^9, 
   3.674898982515472*^9, {3.674899014301527*^9, 3.674899038901173*^9}, 
   3.674904249727572*^9, 3.6749045410829563`*^9, 3.674905798237646*^9, 
   3.67490587753885*^9, 3.674905937138936*^9, {3.674905978533696*^9, 
   3.674906104627055*^9}, 3.674906400410857*^9, 3.674906706565954*^9, 
   3.6749067392838306`*^9, 3.674907287880481*^9, 3.674907427683852*^9, 
   3.6749074665078773`*^9, {3.674907567521474*^9, 3.67490759004572*^9}, {
   3.674907626435767*^9, 3.6749076490102453`*^9}, {3.6749078112557697`*^9, 
   3.6749078337813663`*^9}, 3.674910271444098*^9, {3.6749103244990997`*^9, 
   3.674910335296452*^9}, {3.674910748594226*^9, 3.67491076543722*^9}, {
   3.6749120633378468`*^9, 3.6749120960228148`*^9}, {3.674912855175288*^9, 
   3.674912950905654*^9}, 3.6749130054563093`*^9, {3.6749132139633827`*^9, 
   3.6749132785405493`*^9}, {3.6749133405592117`*^9, 3.674913351522428*^9}, {
   3.6749134078363047`*^9, 3.674913415175516*^9}, {3.674913449464951*^9, 
   3.6749134678858423`*^9}, {3.674913513234724*^9, 3.674913625116756*^9}, {
   3.67491365517689*^9, 3.6749137880892067`*^9}, {3.6749138187811747`*^9, 
   3.6749138310675497`*^9}, {3.674913863211537*^9, 3.6749139005059357`*^9}, {
   3.674913942825705*^9, 3.674913966002083*^9}, {3.674914221150524*^9, 
   3.6749142461942883`*^9}, {3.674914286133153*^9, 3.674914328685272*^9}, {
   3.674914403330385*^9, 3.6749144320487843`*^9}, {3.6749144622148447`*^9, 
   3.674914468452868*^9}, {3.674915417636306*^9, 3.674915440763929*^9}, {
   3.6749199388260117`*^9, 3.67491999720573*^9}, {3.674920592726295*^9, 
   3.6749206189899683`*^9}, 3.674921239293201*^9, {3.674951501695857*^9, 
   3.674951519441737*^9}, {3.674951558903618*^9, 3.674951595376794*^9}, {
   3.675611429767271*^9, 3.6756114617058783`*^9}, 3.6756114927130537`*^9, 
   3.6756115703875437`*^9, {3.6756117319829884`*^9, 3.6756117938512583`*^9}, {
   3.675611826031556*^9, 3.675611842771418*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      {RGBColor[1, 0.5, 0], Thickness[0.005], Opacity[1.], 
       LineBox[CompressedData["
1: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
jObBNzsw/wNIhtnX
        "]]}}, {{}, {
       {GrayLevel[0], PointSize[0.01388888888888889], AbsoluteThickness[1.6], 
        GeometricTransformationBox[InsetBox[
          StyleBox["\<\"\[FilledCircle]\"\>",
           StripOnInput->False,
           FontSize->10], {0., 0.}], CompressedData["
1:eJw9VW1MU2cUfmEggWzqImyBIaDohqgLDsaWaXfYzAJulSELkY9SkQEBBlmZ
kW+2i6WySATGhxG3ZJWvMUCDwrAYxgtCFUchxcJKHSsUChNBLQIC5Wvl7p6d
5P54c9vnfZ7nnPPcXZFfB0a/RAiJMj1mpsec/F/txGDF83IJAUHBnQU3wQYl
/HHNs65QkDlJpk/I1im52Zxh5x4Ottd9dem2pnPLvsO+wghI4tmoK0RrlHSU
xMnWI6FXsVmrlEjqOhPmYmAfC2g6exqZitoE2ERzkqxQJtR12ivlGzCBmRCN
lCwUzO/5LBVYOJ6RMosJR/uPMHClbLOWKXP+rHZeLoEXbpuAS5QkDjQNvncR
AlmCpnNHUnY0UwwsveuLdPT53+VH75YBC2ezSH20Nm8PDEkhhq0XNEKzN+xA
axV0LrCAVJo8npbySx04swQXqCF2ysYs6AZksILnqTSeWAXH/AYsnHqOysQu
cVmWt8GTrTl6OTdw+dReCqx9Bc9pw2TaM+ewOzCzKXd6lkYVuZ4O4cvBjxU8
S1erJ8cdg7qhchOuwkAN2myyQ9gD/7XDQAvVyle7j/dx/j+lo2m3jglylJzf
T+gjmWA4pqWf83eGKo0vN2pvPeD8fEy3DMRHZJxRcf5NUeVPzuoUnYrz6xEV
GF+fdzeqOH/+odVj31V1y1ScHxO0tuSV8FRHFadfT0ta2t7f7vaA0ztO+2S/
h3w1puT06egMv6Hm22t9nJ5RKrA+GGvY08Px11IFeahu9L/H8R2mhc2QH/55
J8dPQz261+cay9s4Pmoqjc6SZ681c/cPUNm0pueSRQN3Xz8lx5nEJ9aVHH4f
9ZnKrHH1KOXw7lPG6uagn4rh/t9FCdX6rFlHcb9vo0S/vYgnEXHvmyjjEBT2
1+E87lxJGbH84cmdPwMuiEGTW/w91ON7KPyg2O9IMPJrgtgRJ/XV3e2ID4r6
cne+Ro73gxJat+46qEB+UHjFkw/p/cgfmlNyZ0Xmg6gPAmzFa7rSIdQPFjuq
LUMdh9EfuPvmJd6pzBH0D94hhR+X+uvQX7DwDrHzbxpD/0EgSa1Q6cexP+Cw
6J1fptZj/4Dvz+RvOz+B/QW9TnouZ3oC+w+D9g5lU5aTOB/QJK5LqhmcwPmB
mU/nxvLCJ3C+YHKy6UJruR7nD1beOKTl14/jfILXeqrZJ+IxnF+w+aN1sPWQ
Ducb0p+e+Gi3ZATnH2Iu8MXe54ZxP0AUanufEWlwf6AyueStH6L+xP2CYPmi
vVykwv0D751jqxmVStxPuMzr2LL+mgL3F9x48z+eEd7D/YaljQLpnFsn7j/U
KOOGuhbaMB8gIM35QEC1DPMDRFMN5hMnGzFfoJAvuZH0+BrmD0hnEz907K/G
fIJ2O4utG/uvYn6B1L62aimvDPMNmIw2P0NvEeYf+Lh2Lgdl52E+QntuhYPv
thzMT2C+mGmOF2ZhvgJ51/N2cvNZzF8gkb0KfpQI8xnI+eyUlcw4zG8gbvMe
GcVRmO9ALoqH9h87jfkPhPm1IslPiN8HIC4pI8Ivw+Bf2l80aw==
         "]]}, {}}, {}}},
     InsetBox[
     InterpretationBox[Cell[BoxData[
       FormBox[
        StyleBox["\<\"\[Beta]=\\!\\(TraditionalForm\\`0.1`\\)\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0],
         FrontFaceColor->GrayLevel[0],
         BackFaceColor->GrayLevel[0],
         GraphicsColor->GrayLevel[0],
         FontSize->25,
         FontSlant->Italic,
         FontColor->GrayLevel[0]], TextForm]], "InlineText"],
      Text[
       Style["\[Beta]=\!\(TraditionalForm\`0.1`\)", 
        GrayLevel[0], Italic, FontSize -> 25]]], Scaled[{0.9, 0.6}], 
     ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      StyleBox["\"\[Delta]\"", FontSize -> 40, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     FormBox[
      StyleBox["\"A\"", FontSize -> 40, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageMargins->0.,
   ImageSize->Large,
   ImageSizeRaw->Automatic,
   LabelStyle->{FontSize -> 20},
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-2, 2}, {-9.23164006087194*^-6, 0.9937571564441673}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Thickness[0.005]], 
         Line[CompressedData["
1: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
jObBNzsw/wNIhtnX
          "]]}}}, {{}, {{{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledCircle]", FontSize -> 10], {0., 
            0.}], CompressedData["
1:eJw9VW1MU2cUfmEggWzqImyBIaDohqgLDsaWaXfYzAJulSELkY9SkQEBBlmZ
kW+2i6WySATGhxG3ZJWvMUCDwrAYxgtCFUchxcJKHSsUChNBLQIC5Wvl7p6d
5P54c9vnfZ7nnPPcXZFfB0a/RAiJMj1mpsec/F/txGDF83IJAUHBnQU3wQYl
/HHNs65QkDlJpk/I1im52Zxh5x4Ottd9dem2pnPLvsO+wghI4tmoK0RrlHSU
xMnWI6FXsVmrlEjqOhPmYmAfC2g6exqZitoE2ERzkqxQJtR12ivlGzCBmRCN
lCwUzO/5LBVYOJ6RMosJR/uPMHClbLOWKXP+rHZeLoEXbpuAS5QkDjQNvncR
AlmCpnNHUnY0UwwsveuLdPT53+VH75YBC2ezSH20Nm8PDEkhhq0XNEKzN+xA
axV0LrCAVJo8npbySx04swQXqCF2ysYs6AZksILnqTSeWAXH/AYsnHqOysQu
cVmWt8GTrTl6OTdw+dReCqx9Bc9pw2TaM+ewOzCzKXd6lkYVuZ4O4cvBjxU8
S1erJ8cdg7qhchOuwkAN2myyQ9gD/7XDQAvVyle7j/dx/j+lo2m3jglylJzf
T+gjmWA4pqWf83eGKo0vN2pvPeD8fEy3DMRHZJxRcf5NUeVPzuoUnYrz6xEV
GF+fdzeqOH/+odVj31V1y1ScHxO0tuSV8FRHFadfT0ta2t7f7vaA0ztO+2S/
h3w1puT06egMv6Hm22t9nJ5RKrA+GGvY08Px11IFeahu9L/H8R2mhc2QH/55
J8dPQz261+cay9s4Pmoqjc6SZ681c/cPUNm0pueSRQN3Xz8lx5nEJ9aVHH4f
9ZnKrHH1KOXw7lPG6uagn4rh/t9FCdX6rFlHcb9vo0S/vYgnEXHvmyjjEBT2
1+E87lxJGbH84cmdPwMuiEGTW/w91ON7KPyg2O9IMPJrgtgRJ/XV3e2ID4r6
cne+Ro73gxJat+46qEB+UHjFkw/p/cgfmlNyZ0Xmg6gPAmzFa7rSIdQPFjuq
LUMdh9EfuPvmJd6pzBH0D94hhR+X+uvQX7DwDrHzbxpD/0EgSa1Q6cexP+Cw
6J1fptZj/4Dvz+RvOz+B/QW9TnouZ3oC+w+D9g5lU5aTOB/QJK5LqhmcwPmB
mU/nxvLCJ3C+YHKy6UJruR7nD1beOKTl14/jfILXeqrZJ+IxnF+w+aN1sPWQ
Ducb0p+e+Gi3ZATnH2Iu8MXe54ZxP0AUanufEWlwf6AyueStH6L+xP2CYPmi
vVykwv0D751jqxmVStxPuMzr2LL+mgL3F9x48z+eEd7D/YaljQLpnFsn7j/U
KOOGuhbaMB8gIM35QEC1DPMDRFMN5hMnGzFfoJAvuZH0+BrmD0hnEz907K/G
fIJ2O4utG/uvYn6B1L62aimvDPMNmIw2P0NvEeYf+Lh2Lgdl52E+QntuhYPv
thzMT2C+mGmOF2ZhvgJ51/N2cvNZzF8gkb0KfpQI8xnI+eyUlcw4zG8gbvMe
GcVRmO9ALoqH9h87jfkPhPm1IslPiN8HIC4pI8Ivw+Bf2l80aw==
           
           "]]}, {}}}, {}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {
        Style["\[Delta]", FontSize -> 40, 
         GrayLevel[0]], 
        Style["A", FontSize -> 40, 
         GrayLevel[0]]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Large, 
      LabelStyle -> {FontSize -> 20}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{-2, 2}, {-9.23164006087194*^-6, 0.9937571564441673}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Text[
       Style["\[Beta]=\!\(TraditionalForm\`0.1`\)", 
        GrayLevel[0], Italic, FontSize -> 25]]], {0.9, 0.6}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6745563785213556`*^9, 3.6745564120134163`*^9}, 
   3.6745565211894817`*^9, 3.6745570111751523`*^9, 3.674557117647749*^9, 
   3.674557664792532*^9, 3.6745577306824484`*^9, 3.6745577641193075`*^9, {
   3.6745578019161777`*^9, 3.6745578486728654`*^9}, {3.674557880465523*^9, 
   3.6745579057415676`*^9}, 3.6745702306061697`*^9, 3.674570264978035*^9, 
   3.6745703022451086`*^9, 3.6745703567404137`*^9, 3.674570404180304*^9, 
   3.674570439138375*^9, 3.674570498274087*^9, {3.674714301320078*^9, 
   3.674714311431857*^9}, 3.674714353838546*^9, 3.6747146114247437`*^9, 
   3.674714712518735*^9, 3.6747148788536654`*^9, 3.674714943129938*^9, 
   3.674714998212201*^9, 3.674715055893313*^9, 3.674715089319626*^9, 
   3.674715206383542*^9, 3.67471526679611*^9, 3.674737807844298*^9, 
   3.674836958596162*^9, 3.6748372594052887`*^9, 3.674837299434018*^9, 
   3.674837353242426*^9, 3.674837394726984*^9, 3.6748989523262777`*^9, 
   3.674898982515472*^9, {3.674899014301527*^9, 3.674899038901173*^9}, 
   3.674904249727572*^9, 3.6749045410829563`*^9, 3.674905798237646*^9, 
   3.67490587753885*^9, 3.674905937138936*^9, {3.674905978533696*^9, 
   3.674906104627055*^9}, 3.674906400410857*^9, 3.674906706565954*^9, 
   3.6749067392838306`*^9, 3.674907287880481*^9, 3.674907427683852*^9, 
   3.6749074665078773`*^9, {3.674907567521474*^9, 3.67490759004572*^9}, {
   3.674907626435767*^9, 3.6749076490102453`*^9}, {3.6749078112557697`*^9, 
   3.6749078337813663`*^9}, 3.674910271444098*^9, {3.6749103244990997`*^9, 
   3.674910335296452*^9}, {3.674910748594226*^9, 3.67491076543722*^9}, {
   3.6749120633378468`*^9, 3.6749120960228148`*^9}, {3.674912855175288*^9, 
   3.674912950905654*^9}, 3.6749130054563093`*^9, {3.6749132139633827`*^9, 
   3.6749132785405493`*^9}, {3.6749133405592117`*^9, 3.674913351522428*^9}, {
   3.6749134078363047`*^9, 3.674913415175516*^9}, {3.674913449464951*^9, 
   3.6749134678858423`*^9}, {3.674913513234724*^9, 3.674913625116756*^9}, {
   3.67491365517689*^9, 3.6749137880892067`*^9}, {3.6749138187811747`*^9, 
   3.6749138310675497`*^9}, {3.674913863211537*^9, 3.6749139005059357`*^9}, {
   3.674913942825705*^9, 3.674913966002083*^9}, {3.674914221150524*^9, 
   3.6749142461942883`*^9}, {3.674914286133153*^9, 3.674914328685272*^9}, {
   3.674914403330385*^9, 3.6749144320487843`*^9}, {3.6749144622148447`*^9, 
   3.674914468452868*^9}, {3.674915417636306*^9, 3.674915440763929*^9}, {
   3.6749199388260117`*^9, 3.67491999720573*^9}, {3.674920592726295*^9, 
   3.6749206189899683`*^9}, 3.674921239293201*^9, {3.674951501695857*^9, 
   3.674951519441737*^9}, {3.674951558903618*^9, 3.674951595376794*^9}, {
   3.675611429767271*^9, 3.6756114617058783`*^9}, 3.6756114927130537`*^9, 
   3.6756115703875437`*^9, {3.6756117319829884`*^9, 3.6756117938512583`*^9}, {
   3.675611826031556*^9, 3.67561184318159*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]\[Delta]StokesMinimum", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", 
        RowBox[{"-", "0.015"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.02", ",", 
        RowBox[{"-", "0.027"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.03", ",", 
        RowBox[{"-", "0.032"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.04", ",", 
        RowBox[{"-", "0.043"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.05", ",", 
        RowBox[{"-", "0.048"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.06", ",", 
        RowBox[{"-", "0.057"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.07", ",", 
        RowBox[{"-", "0.066"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.08", ",", 
        RowBox[{"-", "0.07"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.09", ",", 
        RowBox[{"-", "0.08"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", 
        RowBox[{"-", "0.092"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.11", ",", 
        RowBox[{"-", "0.097"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.12", ",", 
        RowBox[{"-", "0.106"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.13", ",", 
        RowBox[{"-", "0.115"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"experiment", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[Beta]\[Delta]StokesMinimum", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "\[Delta]"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fittingFunction", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{"a", "*", "\[Beta]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"FindFit", "[", 
    RowBox[{"\[Beta]\[Delta]StokesMinimum", ",", 
     RowBox[{"fittingFunction", "[", "\[Beta]", "]"}], ",", "a", ",", 
     "\[Beta]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"fittingFunction", "[", "\[Beta]", "]"}], "/.", "fit"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "0", ",", "0.13"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"fittingFunction", "[", "\[Beta]", "]"}], "/.", "fit"}], 
         ",", "TraditionalForm"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"experiment", ",", "theory"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveData", "[", 
  RowBox[{
  "\"\<results/eta/zeroDissipationFromAnisortopism[Stokes].csv\>\"", ",", 
   "\[Beta]\[Delta]StokesMinimum", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveData", "[", 
  RowBox[{
  "\"\<results/eta/zeroDissipationFromAnisortopism[Stokes].png\>\"", ",", 
   "result", ",", "\"\<PNG\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "experiment", ",", "theory", ",", "fittingFunction", ",", "fit", ",", 
    "result"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.674913189028655*^9, 3.674913203865263*^9}, {
  3.674914384185975*^9, 3.674914384252247*^9}, {3.6749144771936626`*^9, 
  3.674914478464404*^9}, {3.674914514444508*^9, 3.6749146737348833`*^9}, {
  3.674914722010804*^9, 3.674914833712413*^9}, {3.6749148875267687`*^9, 
  3.674914992683123*^9}, {3.67491502695462*^9, 3.674915031677932*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[{{0., 0.}, {0.01, -0.015}, {0.02, -0.027}, {0.03, -0.032}, {
          0.04, -0.043}, {0.05, -0.048}, {0.06, -0.057}, {0.07, -0.066}, {
          0.08, -0.07}, {0.09, -0.08}, {0.1, -0.092}, {0.11, -0.097}, {
          0.12, -0.106}, {0.13, -0.115}}]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVkX840wkcxyO3es6PkZW6mNGKPOVMpJN8+sFFVOpSJJl1KuSS8uPyyK8c
yZZE0YiGUBo25sf23edbytOzDpkurU4lY13RdShcS+f+eD+vf17P65+3Fef4
7jDdOXPmbJ/d/4wyC2hgKla4h0TxMhcImHL7K1foTRo9kBWHdXqP6uIZpx3Z
mRoalHE3nmOMLsAV6SvJaA0TTCj2Gv1RazxtZxYUpnGCbXeZl3VGHZE5w60O
0XjAYUZZlHZkM04f8e4+oNkDsd3BqumR3ThoXsUJ0vwMn2+4XZga4aBt5+qh
iAexsGow1FDWchIXf2+sjbNPgfx+mv+YbxLWrWWrbA5mwA6Rm11mQDrarzTv
Zc9kw/wX59bHR2dhpLXjQXfLXGBgF5fD4qJ4uUFo7mQeuHj0TZmtuogZWT2G
V+8WACVHvDhBfAnffT3gWBBcCGeF+ip/6mW8f4we9tiBDxaeLAHzWiGueV9J
/eZxCRySKPVP6PCx4IiB6JNTGSiz2YOSgBJUKNmDBsXXYX+vtH30dSlu8yp8
tPSdALwTva17GNfxbMvbe757K2C8Y6mmPFyAaU8deaq2SmB5qDkna8vxoe5B
05B5VdAhfCtMVVVgp01FKSW6Go727kuez7iB3+3r1NwgayB0SJfR5VeFVqkm
LuGrb0F4A83TgF+NI/t9gjIv1YJenbnV1pc1qAtH118buA2fijidpOEtVFqU
Wff51MGkO3VG5F+Lcen9HL2d9bCjZ3pmMPM2DncP0R9O1MP6gmcSk0YhiosS
XwiqG8DZ1Hq8eboOK9/oauP8RLAFe5O78utxotHM4gBFDGM93l5JPzTg8sAq
279bxBD5xfWY3fMGTEyzzTsT0gi5lj5Tn06IZv9x+UqnNYH0Gq8jeaEYKf4u
CqmsCfJo/2hthGK8EyBKpnAk4FTexeva0ogqVds6zsJm+JP3ksMabsRFrxp3
tsmaweEEtVSc1IT1h9wilsW0QHZ9jMWYlQSPH2t6nbW0FXKHJ+b6SSVovL3G
s/hOK7CdxzxrdzWj0S27WjK2DVwGrBX3JpqRxSuJHrCQQmt6jESb04IN70vW
mT6Wwub0j+oPrFak2Sx5N/abDAr4478M9rZisTrjc9dqAvJvGod+jGjDVMsU
quw1AVcXhRa0G0nx/MvI1MrzcvD59RGroUqK8fHKfjcWQsdE28qSDTIkczo2
DKkRvDqfHvJ8JcMrpk++ePxIQlzxQophAoHDwx88pVtJKNpTRIpOE7i2TZ/H
8iYBDSwSA5IIfMLeRKf7kvBtEvNDeRqBNGGt++QuEkqC1zxz5RKY65WeXBNM
Qjt9l/CogMCsJAcdo1gSqNdz9t77ncCnfj7eZ+NIcA40NonoJtCGefjiv/Ek
BJrkP6QqCexQ8K00p0kQpPI3BvURqLd43mYyZdbn3LQbGyAwRdSfFpNDQtCy
BzOWkwQ+yphSvOGSkPrcp/X+NIGWgaamIRdIqLjUfTJSS6D8q1e5Tx4J7+f2
vZHoyFHr29jOLJz11UPK7QZy9GV06/OLSKgqDueOG8mRP/7XTyZ8EhR7RrcW
mcjR9aql+ksJCbT7EzL1IjlmR7muOlVKgmtSQnz2EjmqNvqfeltGQrCzluVg
LkdbWrSMLZjtjyaP/EGXY4ImW6+vfLZfObcq0UqO/wEzGIAa
         "]]}}}}, {
    ImageSize -> Large, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.13}, {-0.115, 0}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\[Beta]", TraditionalForm], 
       FormBox["\[Delta]", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 0.13}, {-0.115, 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(TraditionalForm\\`\\(\\(\\(-0.9053724053724059`\\)\\)\\\\ \
\[Beta]\\)\\)\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.674914660293231*^9, 3.6749146743194513`*^9}, 
   3.674914754814124*^9, 3.674914788722208*^9, 3.674914835757845*^9, {
   3.674915009741683*^9, 3.674915035045127*^9}, 3.674915097276292*^9}],

Cell[BoxData["\<\"/Users/akutlin/Documents/private/VSHOPF/Egor/diplom/wolfram/\
others/experiments/exersices/results/eta/zeroDissipationFromAnisortopism[\
Stokes].csv\"\>"], "Output",
 CellChangeTimes->{{3.674914660293231*^9, 3.6749146743194513`*^9}, 
   3.674914754814124*^9, 3.674914788722208*^9, 3.674914835757845*^9, {
   3.674915009741683*^9, 3.674915035045127*^9}, 3.674915097574024*^9}],

Cell[BoxData["\<\"/Users/akutlin/Documents/private/VSHOPF/Egor/diplom/wolfram/\
others/experiments/exersices/results/eta/zeroDissipationFromAnisortopism[\
Stokes].png\"\>"], "Output",
 CellChangeTimes->{{3.674914660293231*^9, 3.6749146743194513`*^9}, 
   3.674914754814124*^9, 3.674914788722208*^9, 3.674914835757845*^9, {
   3.674915009741683*^9, 3.674915035045127*^9}, 3.67491509781316*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{
   "*", "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", " ", "Stokes", " ", "analysis", " ", "for", 
    " ", "electrical", " ", "field"}], ";", " ", 
   RowBox[{"not", " ", "working"}], ";", " ", 
   RowBox[{"just", " ", "a", " ", "memory"}], ";", " ", 
   RowBox[{
    RowBox[{"RIP", "!"}], "\[IndentingNewLine]", "*", "\[IndentingNewLine]", 
    "*", "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*", "\[IndentingNewLine]", "*", 
    "\[IndentingNewLine]", "*"}]}], "\[IndentingNewLine]", " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.674915234881624*^9, 3.674915256102869*^9}, {
  3.674915295604662*^9, 3.674915365278543*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[Beta]", "=", "0.4"}], ";", 
   RowBox[{"\[Delta]", "=", "0.5"}], ";", "\[IndentingNewLine]", 
   RowBox[{"potential", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["x", "2"]], "-", 
         RowBox[{"4", " ", "x"}], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "x"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Delta]", "2"]}], "-", 
         FractionBox["3", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           RowBox[{"x", " ", 
            SuperscriptBox["\[Delta]", "2"]}]}]]}], ")"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StokesGraph", "[", 
     RowBox[{"potential", ",", "0.5"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Clear", "[", 
     RowBox[{"\[Beta]", ",", "\[Delta]", ",", "potential"}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.68142897439846*^9, 3.681428994193411*^9}, {
   3.681429848092317*^9, 3.681429858371892*^9}, 3.681432985738677*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[Beta]", "=", "0.1"}], ";", 
   RowBox[{"\[Delta]", "=", "1.1"}], ";", "\[IndentingNewLine]", 
   RowBox[{"potential", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["x", "2"]], "-", 
         RowBox[{"4", " ", "x"}], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "x"], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Delta]", "2"]}], "-", 
         FractionBox["3", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
          RowBox[{
           SuperscriptBox["x", "2"], "+", 
           RowBox[{"x", " ", 
            SuperscriptBox["\[Delta]", "2"]}]}]]}], ")"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"zeros", "=", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", "z"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"zeros", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"z", "/.", 
         RowBox[{
         "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "a"}], "=", 
     RowBox[{
     "zeros", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{"c", "=", 
    RowBox[{"zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"f", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", 
      RowBox[{"potential", "[", 
       RowBox[{
        RowBox[{"line", "[", 
         RowBox[{"a", ",", "c"}], "]"}], "[", "t", "]"}], "]"}]}], "]"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"chunks", "=", 
    RowBox[{"sqrt", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]], ",", 
        RowBox[{"1", "-", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"sqrtf", "=", 
    RowBox[{"Function", "[", 
     RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "c"}], ")"}], 
       RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", 
           SqrtBox[
            RowBox[{"f", "[", "t", "]"}]], "]"}], ",", 
          RowBox[{"Im", "[", 
           SqrtBox[
            RowBox[{"f", "[", "t", "]"}]], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"sqrtf", "[", "t", "]"}], "]"}], ",", 
          RowBox[{"Im", "[", 
           RowBox[{"sqrtf", "[", "t", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Delta]", ",", "\[Beta]", ",", "a", ",", "c", ",", "f", ",", "zeros", 
      ",", "chunks", ",", "sqrtf", ",", "potential"}], "]"}]}], ";"}], 
  "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Dissipation", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"begining", "=", 
    RowBox[{"-", "1"}]}], ";", 
   RowBox[{"end", "=", "1"}], ";", 
   RowBox[{"nstep", "=", "100"}], ";", 
   RowBox[{"\[Beta]", "=", "0.1"}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ProgressIndicator", "[", 
     RowBox[{"Dynamic", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "-", "begining"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"end", "-", "begining"}], ")"}]}], "]"}], "]"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"\[Delta]", "=", "begining"}], ",", 
      RowBox[{"\[Delta]", "\[LessEqual]", "end"}], ",", 
      RowBox[{"\[Delta]", "+=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"end", "-", "begining"}], ")"}], "/", "nstep"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"potential", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox["x", "2"]], "-", 
             RowBox[{"4", " ", "x"}], "+", 
             FractionBox[
              RowBox[{"4", " ", 
               SuperscriptBox["\[Beta]", "2"]}], "x"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[Delta]", "2"]}], "-", 
             FractionBox["3", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 SuperscriptBox["\[Delta]", "2"]}], ")"}], "2"]], "+", 
             FractionBox[
              RowBox[{"2", "-", 
               RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               RowBox[{"x", " ", 
                SuperscriptBox["\[Delta]", "2"]}]}]]}], ")"}]}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"zeros", "=", 
        RowBox[{
         RowBox[{"NSolve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"potential", "[", "z", "]"}], "\[Equal]", "0"}], ",", 
           "z"}], "]"}], "//", "Quiet"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"zeros", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"z", "/.", 
           RowBox[{
           "zeros", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "zeros", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"a", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "zeros", "]"}], ">", "3"}], ",", 
          RowBox[{
          "zeros", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{
          "zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"b", "=", 
          RowBox[{"-", 
           SuperscriptBox["\[Delta]", "2"]}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{
        "zeros", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", 
          RowBox[{"potential", "[", 
           RowBox[{
            RowBox[{"line", "[", 
             RowBox[{"a", ",", "c"}], "]"}], "[", "t", "]"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"chunks", "=", 
        RowBox[{"sqrt", "[", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], ",", 
            RowBox[{"1", "-", 
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sqrtf", "=", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", "chunks"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ac", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"a", "\[Equal]", "c"}], ",", "0", ",", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"a", "-", "c"}], ")"}], 
             RowBox[{"sqrtf", "[", "t", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"bc", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             RowBox[{"(", 
              RowBox[{"b", "-", "c"}], ")"}], 
             SqrtBox[
              RowBox[{
               RowBox[{"potential", "[", "s", "]"}], "/.", 
               RowBox[{"s", "->", 
                RowBox[{
                 RowBox[{"line", "[", 
                  RowBox[{"b", ",", "c"}], "]"}], "[", "t", "]"}]}]}]]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"R", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", "ac", ")"}]}]], " ", 
           SubscriptBox["s", "1"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "2"}], " ", "bc"}]], " ", 
           SubscriptBox["s", "2"]}], "+", 
          SubscriptBox["s", "3"]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "1"], "\[Rule]", "\[ImaginaryI]"}], ",", 
           RowBox[{
            SubscriptBox["s", "2"], "\[Rule]", "0"}], ",", 
           RowBox[{
            SubscriptBox["s", "3"], "\[Rule]", "\[ImaginaryI]"}]}], "}"}]}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"Dissipation", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Dissipation", ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"Abs", "[", "R", "]"}], "2"]}]}], "}"}]}], "]"}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{
    "R", ",", "\[Delta]", ",", "\[Beta]", ",", "a", ",", "b", ",", "c", ",", 
     "ac", ",", "bc", ",", "zeros", ",", "f", ",", "chunks", ",", "sqrtf", 
     ",", "potential"}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Dissipation", ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<dissipation\>\""}], "}"}]}]}], 
    "]"}]}], "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"x", "+", 
        SuperscriptBox["\[Delta]", "2"], "-", 
        FractionBox[
         SuperscriptBox["\[Beta]", "2"], "x"], "-", 
        FractionBox[
         RowBox[{"2", "\[Beta]", " ", "\[Delta]"}], 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          SuperscriptBox["\[Beta]", "2"]}]]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "-", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], 
       RowBox[{"Log", "[", "x", "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Im", "[", 
           FractionBox[
            RowBox[{"b", "[", "x", "]"}], 
            SuperscriptBox[
             RowBox[{
              RowBox[{"z", "'"}], "[", "x", "]"}], "2"]], "]"}]}], 
         RowBox[{
          RowBox[{"z", "'"}], "[", "x", "]"}], " ", "\[ImaginaryI]", " ", 
         "x"}], "/.", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], "+", 
          RowBox[{"\[Rho]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}]}]}], "//", 
       "ComplexExpand"}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "0"}], "}"}]}], "]"}], ",", 
   RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.681297556576357*^9, 3.681297616348794*^9}, {
   3.681297662797558*^9, 3.681297775516645*^9}, {3.68129792565069*^9, 
   3.681297927561295*^9}, {3.6812980472018147`*^9, 3.681298225368012*^9}, 
   3.681298263059421*^9, {3.6812983969331093`*^9, 3.6812984057768307`*^9}, {
   3.681298476424748*^9, 3.681298496569812*^9}, {3.681298555590686*^9, 
   3.681298560124525*^9}, {3.6813001698081512`*^9, 3.681300231693719*^9}}],

Cell[BoxData[
 RowBox[{"DirectedInfinity", "[", 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{"Sign", "[", 
    RowBox[{"\[Delta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "19"}], "+", 
       RowBox[{"20", " ", "\[Beta]", " ", "\[Delta]"}]}], ")"}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.681297730735162*^9, 3.681297750177723*^9}, 
   3.681297793423671*^9, 3.68129796831847*^9, {3.681298051854218*^9, 
   3.681298080789176*^9}, {3.68129820599148*^9, 3.6812982266441507`*^9}, 
   3.681298264818267*^9, 3.681298408787472*^9, {3.681298487909843*^9, 
   3.681298497962433*^9}, 3.681298560762011*^9, 3.681300329877963*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "-", 
           SuperscriptBox["\[Beta]", "2"]}], ")"}], "2"], "-", 
        RowBox[{"2", " ", "x", " ", "\[Beta]", " ", "\[Delta]"}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Beta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "\[Beta]"}], ")"}], " ", 
         SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], ")"}], "3"]]}], "/.", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], "+", 
     RowBox[{"\[Rho]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}]}]}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{{3.681300643578227*^9, 3.681300686760744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["\[Rho]", "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SuperscriptBox["\[Rho]", "2"], "-", 
          RowBox[{"4", " ", "\[Beta]", " ", "\[Rho]", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], "3"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Rho]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[Beta]", "2"]}], "+", 
             RowBox[{"2", " ", "\[Delta]"}], "-", 
             RowBox[{"5", " ", "\[Beta]", " ", 
              SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"7", " ", "\[Beta]"}], "-", 
             RowBox[{"5", " ", 
              SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "2"]}], "+", 
          RowBox[{"6", " ", "\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "\[Beta]"}], "-", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "+", 
          SuperscriptBox["\[Rho]", "6"]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{"\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"16", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", "\[Delta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[Beta]", "2"]}], "+", 
             RowBox[{"2", " ", "\[Delta]"}], "-", 
             RowBox[{"5", " ", "\[Beta]", " ", 
              SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "5"}], " ", "\[Beta]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "5"}], " ", "\[Beta]"}], "+", 
             SuperscriptBox["\[Delta]", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"8", " ", 
              SuperscriptBox["\[Beta]", "5"], " ", "\[Delta]"}], "-", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Beta]", "3"], " ", "\[Delta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}], " ", 
              SuperscriptBox["\[Rho]", "2"]}], "+", 
             RowBox[{"3", " ", "\[Beta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Beta]", "2"]}], "+", 
                RowBox[{"2", " ", "\[Delta]"}], "-", 
                RowBox[{"5", " ", "\[Beta]", " ", 
                 SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
              SuperscriptBox["\[Rho]", "4"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Beta]"}], "-", 
                SuperscriptBox["\[Delta]", "2"]}], ")"}], " ", 
              SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
          RowBox[{"\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"24", " ", 
                  SuperscriptBox["\[Beta]", "4"], " ", "\[Delta]"}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}], " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                    RowBox[{"2", " ", "\[Delta]"}], "-", 
                    RowBox[{"5", " ", "\[Beta]", " ", 
                    SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
                  SuperscriptBox["\[Rho]", "4"]}]}], ")"}]}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "+", 
             RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", "\[Rho]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"6", " ", 
                    SuperscriptBox["\[Beta]", "2"]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}], " ", 
                    SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"5", " ", "\[Phi]"}], "]"}]}], "-", 
                RowBox[{"\[Beta]", " ", "\[Rho]", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"6", " ", "\[Phi]"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}], "*", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Rho]"}]}], 
         ")"}], "2"]}], 
      RowBox[{
       RowBox[{"-", "\[Beta]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Rho]"}]}]], "*", 
     "\[ImaginaryI]", " ", "\[Rho]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]", ",", "0", ",", "0"}], "}"}]}], "]"}], "//", 
  "Normal"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", 
      RowBox[{"-", "\[Pi]"}], ",", "0"}], "}"}]}], "]"}], "//", 
  "Apart"}]}], "Input",
 CellChangeTimes->{{3.681300825748028*^9, 3.6813008498964453`*^9}, {
  3.681300943287244*^9, 3.6813009755252743`*^9}, {3.681313648338166*^9, 
  3.68131367178097*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Delta]", 
    " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"3", " ", "\[Phi]"}], "]"}]}], 
   RowBox[{"2", " ", "\[Rho]"}]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Delta]", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{"2", " ", "\[Beta]", " ", "\[Delta]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{
  3.68130085093379*^9, 3.681300979805519*^9, {3.6813136594872713`*^9, 
   3.681313672132875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["\[Delta]", "2"]}], "4"]}], "-", 
  FractionBox[
   RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Delta]"}], 
   RowBox[{"5", " ", "\[Rho]"}]]}]], "Output",
 CellChangeTimes->{
  3.68130085093379*^9, 3.681300979805519*^9, {3.6813136594872713`*^9, 
   3.681313672406281*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], "-", 
           SuperscriptBox["\[Beta]", "2"]}], ")"}], "2"], "-", 
        RowBox[{"2", " ", "x", " ", "\[Beta]", " ", "\[Delta]"}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Beta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "\[Beta]"}], ")"}], " ", 
         SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], ")"}], "3"]]}], "/.", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"\[Beta]", "+", 
     RowBox[{"\[Rho]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}]}]}], "//", 
  "ComplexExpand"}]], "Input",
 CellChangeTimes->{3.6813129963247843`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["\[Rho]", "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SuperscriptBox["\[Rho]", "2"], "+", 
          RowBox[{"4", " ", "\[Beta]", " ", "\[Rho]", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], "3"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "16"}], " ", 
        SuperscriptBox["\[Beta]", "6"], " ", "\[Delta]"}], "+", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Beta]", "6"], " ", 
        SuperscriptBox["\[Rho]", "2"]}], "-", 
       RowBox[{"76", " ", 
        SuperscriptBox["\[Beta]", "4"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "2"]}], "+", 
       RowBox[{"64", " ", 
        SuperscriptBox["\[Beta]", "5"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "2"]}], "+", 
       RowBox[{"80", " ", 
        SuperscriptBox["\[Beta]", "4"], " ", 
        SuperscriptBox["\[Rho]", "4"]}], "-", 
       RowBox[{"16", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "4"]}], "+", 
       RowBox[{"72", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "4"]}], "+", 
       RowBox[{"26", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "6"]}], "+", 
       RowBox[{"10", " ", "\[Beta]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "6"]}], "+", 
       SuperscriptBox["\[Rho]", "8"], "+", 
       RowBox[{"2", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"16", " ", 
           SuperscriptBox["\[Beta]", "6"], " ", 
           SuperscriptBox["\[Delta]", "2"]}], "+", 
          RowBox[{"72", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "2"]}], "+", 
          RowBox[{"29", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "+", 
          RowBox[{
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "6"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"7", " ", "\[Delta]"}], "-", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Rho]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "50"}], " ", "\[Delta]", " ", 
              SuperscriptBox["\[Rho]", "2"]}], "+", 
             RowBox[{"44", " ", 
              SuperscriptBox["\[Rho]", "4"]}]}], ")"}]}], "+", 
          RowBox[{"\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "\[Delta]", " ", 
              SuperscriptBox["\[Rho]", "4"]}], "+", 
             RowBox[{"5", " ", 
              SuperscriptBox["\[Rho]", "6"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{"8", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Beta]", "5"], " ", "\[Delta]"}], "+", 
          RowBox[{"15", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", "\[Delta]", " ", 
           SuperscriptBox["\[Rho]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Beta]", "4"], " ", 
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Beta]", "3"], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "+", 
          RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]", " ", 
           SuperscriptBox["\[Rho]", "4"]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "4"]}], "-", 
          RowBox[{"2", " ", "\[Beta]", " ", 
           SuperscriptBox["\[Rho]", "6"]}], "-", 
          RowBox[{
           SuperscriptBox["\[Delta]", "2"], " ", 
           SuperscriptBox["\[Rho]", "6"]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Beta]", "5"], " ", "\[Delta]", " ", "\[Rho]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"52", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "3"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"24", " ", 
        SuperscriptBox["\[Beta]", "4"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "3"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", 
        SuperscriptBox["\[Rho]", "5"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "5"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"10", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "5"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["\[Beta]", "4"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox["\[Rho]", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "\[Phi]"}], "]"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Beta]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Rho]", "3"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "*", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Rho]"}]}], 
         ")"}], "2"]}], 
      RowBox[{"\[Beta]", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Rho]"}]}]], "*", 
     "\[ImaginaryI]", " ", "\[Rho]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]", ",", "0", ",", "0"}], "}"}]}], "]"}], "//", 
  "Normal"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "0"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6813130555699043`*^9, 3.681313069675292*^9}, {
  3.681313602815793*^9, 3.6813136343080587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Delta]", 
     " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
    RowBox[{"2", " ", "\[Rho]"}]]}], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]], " ", "\[Delta]", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], "-", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
      RowBox[{"12", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
   RowBox[{"4", " ", "\[Beta]"}]]}]], "Output",
 CellChangeTimes->{
  3.6813130744880323`*^9, {3.68131360939113*^9, 3.681313635130986*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["\[Delta]", "2"]}], "4"]}], "+", 
  FractionBox[
   RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Delta]"}], 
   RowBox[{"5", " ", "\[Rho]"}]]}]], "Output",
 CellChangeTimes->{
  3.6813130744880323`*^9, {3.68131360939113*^9, 3.681313635437546*^9}}]
}, Open  ]]
},
WindowSize->{1600, 818},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3717, 81, 120, "Input"],
Cell[4300, 105, 117711, 1894, 598, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122048, 2004, 6847, 178, 379, "Input"],
Cell[128898, 2184, 1697, 30, 33, "Output"],
Cell[130598, 2216, 1126, 18, 31, "Output"],
Cell[131727, 2236, 21079, 370, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152843, 2611, 5843, 164, 379, "Input"],
Cell[158689, 2777, 1639, 29, 33, "Output"],
Cell[160331, 2808, 1071, 16, 31, "Output"],
Cell[161405, 2826, 26748, 462, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188190, 3293, 9393, 238, 713, "Input"],
Cell[197586, 3533, 379, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198002, 3545, 8026, 173, 340, "Input"],
Cell[206031, 3720, 3007, 42, 31, "Output"],
Cell[209041, 3764, 48015, 823, 410, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257093, 4592, 4078, 112, 272, "Input"],
Cell[261174, 4706, 4452, 88, 375, "Output"],
Cell[265629, 4796, 393, 5, 31, "Output"],
Cell[266025, 4803, 392, 5, 31, "Output"]
}, Open  ]],
Cell[266432, 4811, 1037, 20, 432, "Input"],
Cell[267472, 4833, 1483, 40, 115, "Input"],
Cell[268958, 4875, 4227, 122, 366, "Input"],
Cell[273188, 4999, 7403, 197, 564, "Input"],
Cell[CellGroupData[{
Cell[280616, 5200, 2213, 62, 133, "Input"],
Cell[282832, 5264, 672, 15, 31, "Output"]
}, Open  ]],
Cell[283519, 5282, 1082, 32, 58, "Input"],
Cell[CellGroupData[{
Cell[284626, 5318, 7678, 194, 173, "Input"],
Cell[292307, 5514, 1410, 39, 53, "Output"],
Cell[293720, 5555, 374, 11, 51, "Output"]
}, Open  ]],
Cell[294109, 5569, 1039, 31, 58, "Input"],
Cell[CellGroupData[{
Cell[295173, 5604, 7981, 197, 217, "Input"],
Cell[303157, 5803, 1619, 43, 53, "Output"],
Cell[304779, 5848, 348, 10, 51, "Output"]
}, Open  ]]
}
]
*)

